patch-package
deleted file mode 100644
--- a/node_modules/ctrllr/.npmignore
+++ /dev/null
@@ -1,99 +0,0 @@
-# Created by https://www.gitignore.io
-
-.DS_Store
-*/DS_Store
-**/DS_Store
-
-### Intellij ###
-# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm
-
-/*.iml
-
-## Directory-based project format:
-.idea/
-# if you remove the above rule, at least ignore the follwing:
-
-# User-specific stuff:
-# .idea/workspace.xml
-# .idea/tasks.xml
-# .idea/dictionaries
-
-# Sensitive or high-churn files:
-# .idea/dataSources.ids
-# .idea/dataSources.xml
-# .idea/sqlDataSources.xml
-# .idea/dynamic.xml
-# .idea/uiDesigner.xml
-
-# Gradle:
-# .idea/gradle.xml
-# .idea/libraries
-
-# Mongo Explorer plugin:
-# .idea/mongoSettings.xml
-
-## File-based project format:
-*.ipr
-*.iws
-
-## Plugin-specific files:
-
-# IntelliJ
-out/
-
-# mpeltonen/sbt-idea plugin
-.idea_modules/
-
-# JIRA plugin
-atlassian-ide-plugin.xml
-
-# Crashlytics plugin (for Android Studio and IntelliJ)
-com_crashlytics_export_strings.xml
-
-
-### SublimeText ###
-# cache files for sublime text
-*.tmlanguage.cache
-*.tmPreferences.cache
-*.stTheme.cache
-
-# workspace files are user-specific
-*.sublime-workspace
-
-# project files should be checked into the repository, unless a significant
-# proportion of contributors will probably not be using SublimeText
-# *.sublime-project
-
-# sftp configuration file
-sftp-config.json
-
-
-### Node ###
-# Logs
-logs
-*.log
-
-# Runtime data
-pids
-*.pid
-*.seed
-
-# Directory for instrumented libs generated by jscoverage/JSCover
-lib-cov
-
-# Coverage directory used by tools like istanbul
-coverage
-
-# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
-.grunt
-
-# Compiled binary addons (http://nodejs.org/api/addons.html)
-build/Release
-
-# Dependency directory
-# Commenting this out is preferred by some people, see
-# https://www.npmjs.org/doc/misc/npm-faq.html#should-i-check-my-node_modules-folder-into-git-
-node_modules
-
-# Users Environment Variables
-.lock-wscript
deleted file mode 100644
--- a/node_modules/ctrllr/Gruntfile.js
+++ /dev/null
@@ -1,152 +0,0 @@
-/**
- * configuration for grunt tasks
- * @module Gruntfile
- */
-
-module.exports = function(grunt) {
-  /** load tasks */
-  require('load-grunt-tasks')(grunt);
-
-  /** paths to file on server */
-  var files = {
-
-    /** meta / non-script files */
-    meta: [
-      'README.md',
-      'TODO.md',
-      'package.json',
-      '.gitignore',
-      '*.sublime-project',
-      '*.sublime-workspace',
-      '*.iml',
-      '.idea',
-      'dump.rdb',
-    ],
-
-    /** server scripts */
-    server: [
-      '*.*',
-      'lib/*.*',
-    ],
-
-    /** array of all paths */
-    all: []
-  };
-
-  /** add meta files to `files.all` */
-  files.meta.forEach(function(file) {
-    files.all.push(file);
-  });
-
-  /** add server files to `files.all` */
-  files.server.forEach(function(file) {
-    files.all.push(file);
-  });
-
-  /** ignore meta files on server */
-  files.meta.forEach(function(file) {
-    files.server.push('!' + file);
-  });
-
-  /** all grunt tasks */
-  var tasks = {
-
-    /** metadata inside `package.json` file */
-    pkg: grunt.file.readJSON('package.json'),
-
-    /** lint javascript tool */
-    jshint: {
-
-      /** paths to files */
-      files: files.server,
-
-      /** options for jshint task */
-      options: {
-
-        /** options here to override JSHint defaults */
-        globals: {
-          console: true,
-          module: true
-        }
-      }
-    },
-
-    /** build TODO.md from inline comments */
-    todos: {
-      src: {
-        /** options for plugin */
-        options: {
-          priorities: {
-            low: /TODO/,
-            med: /FIXME/,
-            high: null
-          },
-          reporter: {
-            /** put at the top of the generated file */
-            header: function() {
-              return '-- BEGIN TASK LIST --\n\n';
-            },
-            /** flow for each file */
-            fileTasks: function(file, tasks, options) {
-              /** skip if no tasks or checking Gruntfile */
-              if (!tasks.length || file && file === 'Gruntfile.js') {
-                return '';
-              }
-
-              var result = '* ' + file + ' (' + tasks.length + ')\n\n';
-
-              /** iterate over tasks, add data */
-              tasks.forEach(function(task) {
-                result += '    [' + task.lineNumber + ' - ' +
-                  task.priority + '] ' + task.line.trim() + '\n';
-
-                result += '\n';
-              });
-
-              return result;
-            },
-            /** put at the bottom of the generated file */
-            footer: function() {
-              return '-- END TASK LIST --\n';
-            }
-          }
-        },
-        files: {
-          'TODO.md': files.server
-        }
-      }
-    },
-
-    /** testing framework */
-    jasmine_node: {
-      options: {
-        forceExit: true,
-        match: 'spec',
-        matchall: false,
-        extensions: 'js',
-        specNameMatcher: 'spec',
-      },
-      match: []
-    },
-  };
-
-  /** merge files and task config, initialize grunt config */
-  grunt.initConfig(grunt.util._.extend(tasks, files));
-
-  /** default grunt task, ran with `grunt` */
-  grunt.registerTask('default', [
-    // ...
-  ]);
-
-  /** parses command, starts server or  runs either model, api, or single test(s) */
-  grunt.registerTask('test', 'Used to run tests.', function(path) {
-    var args = Array.prototype.slice.call(arguments);
-
-    if (args.length) {
-      grunt.config('jasmine_node.match', args[0] + '.');
-    }
-
-    grunt.task.run('jasmine_node');
-  });
-
-};
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/LICENSE.md
+++ /dev/null
@@ -1,20 +0,0 @@
-Copyright (c) 2014 CTRL LA
-
-Permission is hereby granted, free of charge, to any person obtaining
-a copy of this software and associated documentation files (the
-"Software"), to deal in the Software without restriction, including
-without limitation the rights to use, copy, modify, merge, publish,
-distribute, sublicense, and/or sell copies of the Software, and to
-permit persons to whom the Software is furnished to do so, subject to
-the following conditions:
-
-The above copyright notice and this permission notice shall be
-included in all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/README.md
+++ /dev/null
@@ -1,226 +0,0 @@
-[![Stories in Ready](https://badge.waffle.io/ctrlla/ctrllr.png?label=ready&title=Ready)](https://waffle.io/ctrlla/ctrllr)
-CTRLLR
-======
-
-API testing made easy - **and it's got no vowels, so you know it's hip.**
-
-Write your tests with JSON, add custom headers, provide functions to run before and after each test, use synchronous or asynchronous calls - the sky's the limit.
-
-Usage
------------
-`test.js`
-
-```
-var spec = require('./spec'),
-    ctrllr = new require('ctrllr')({
-        baseUrl: 'http://localhost:9000'
-    });
-
-ctrllr
-    .add(spec)
-    .start();
-```
-
-`spec.js`
-
-```
-module.exports = {
-    description: 'Users list endpoint.',
-    method: 'GET',
-    url: '/api/users',
-    expectStatus: 200,
-    expectJSON: true,
-    expectArray: true,
-    expectKeys: [
-        '_id',
-        'username'
-    ]
-}
-```
-
-Look in the [example](https://github.com/CtrlLA/ctrllr/tree/master/example) directory for more samples. The tests are are `test.js` and `test-2.js` while the specs are in `spec.js`, `spec-2.js`, etc.
-
-Multiple Tests
---------------
-
-`test.js`
-
-```
-var spec1 = require('./spec'),
-    spec2 = require('./spec-2'),
-    spec3 = require('./spec-3'),
-
-    ctrllr = new require('ctrllr')({
-        baseUrl: 'http://localhost:9000'
-    });
-
-ctrllr
-    .add(spec1)
-    .add(spec2)
-    .add(spec3)
-    .start();
-```
-
-A specification can also return an array of tests:
-
-```
-var specs = [{
-    description: 'Test one',
-    url: '/api/users',
-    expectStatus: 200,
-    expectKeys: [
-        '_id',
-        'username'
-    ]
-}, {
-    description: 'Test two',
-    url: '/api/users/1',
-    expectStatus: 200,
-    expectKeyValue: {
-        _id: 1,
-        username: 'ishmaelthedestroyer'
-    }
-}];
-
-ctrllr.add(specs);
-```
-
-Options
--------
-
-* **description** - `String` basic description of specification
-* **method** - `String` request type `GET || POST || PUT || DELETE || OPTIONS`
-* **url** - `String` url to request
-* **headers** - `Object || Function` key / value pairs to add headers, can be function returning object
-* **timeout** - max time for test to run (in milliseconds), defaults to 5000
-* **expectStatus** - `Number` status to check for `200, 401, 500` etc
-* **expectJSON** - `Boolean` should check response type for JSON
-* **expectArray** - `Boolean` should check response type for Array
-* **expectKeys** - `Array` keys to check for in response
-* **expectKeyValue** - `Object` key / value pairs to check for
-* **before** - `Function || Array` function or array of functions to call before test
-* **after** - `Function || Array` function or array of functions to call after test
-* **send** - `Object || Function` object or function that returns object to send in body of request
-
-Before & After
---------------
-
-You can specify functions to run before and after each test.
-
-The `before` function is given a helper object which can be used to set headers or add data to send in the request object.
-```
-var spec = {
-    // ...
-    before: function(ctrllr) {
-        ctrllr.setHeader('Authorization', 'token-goes-here');
-        ctrllr.send({ foo: 'bar' });
-    }
-};
-```
-
-The `after` function is given access to the response body and a simple assert helper.
-The `assert` helper accepts a description (string) and assertion (boolean).
-```
-var spec = {
-    // ...
-    after: function(response, assert) {
-        assert('Response is successful', response.status === 200);
-        assert('Response is an array', response.body instanceof Array);
-    }
-};
-```
-
-Both the `before` and `after` properties can either be functions or an array of functions to be called.
-```
-var spec = {
-    // ...
-    before: [
-        function() {
-            console.log('Running BEFORE function 1...');
-        },
-        function() {
-            console.log('Running BEFORE function 2...');
-        },
-        function() {
-            console.log('Running BEFORE function 3...');
-        }
-    ],
-    after: [
-        function() {
-            console.log('Running AFTER function 1...');
-        },
-        function() {
-            console.log('Running AFTER function 2...');
-        }
-    ]
-};
-```
-
-Asychronous functions
----------------------
-
-All the options that accept functions can return deferred promises for asynchronous calls.
-**NOTE:** these functions will still be timed out if they run longer than the `timeout` value
-```
-var spec = {
-    // ...
-    before: function() {
-        var deferred = require('q').defer();
-
-        setTimeout(function() {
-            deferred.resolve(true);
-        }, 2000);
-
-        return deferred.promise;
-    }
-};
-```
-
-Express server
---------------
-
-If you're testing a Node server using Express, you pass the server to a `ctrllr` instance in the config block, and it will start and stop the server for the tests. In this case, you don't have to specify a `baseUrl`.
-
-```
-var spec = require('./spec'),
-    app = require('./server'),
-    ctrllr = new require('ctrllr')({
-        server: app,
-        port: 6060
-    });
-
-ctrllr
-    .add(spec)
-    .start();
-
-```
-
-Global configuration
---------------------
-
-If you have `before` functions, `after` functions, or `headers` you want applied to each test, you can specify those when creating the ctrllr instance or by calling the `config` function.
-
-These functions can also be asynchronous.
-
-```
-var ctrllr = require('ctrllr')({
-    // ...
-    before: function() {
-        console.log('This will run before every test.');
-    },
-    after: function() {
-        console.log('This will run after every test.');
-    },
-    headers: {
-        Authorization: 'token'
-    }
-});
-```
-
-Maintainers
------------
-
-* [ishmaelthedestroyer](mailto:ishmaelthedestroyer@gmail.com), Ishmael P.
-* [CTRL LA](mailto:hello@ctrl.la), CTRL LA
-
-Copyright (c) 2014 CTRL LA. This software is licensed under the MIT License.
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/config-2.js
+++ /dev/null
@@ -1,29 +0,0 @@
-module.exports = {
-  port: 6060,
-  server: require('../example/server'),
-  timeout: 5000,
-  beforeEach: [
-    function() {
-      console.log('before function 1')
-    },
-    function() {
-      console.log('before function 2')
-    },
-    function() {
-      var deferred = require('q').defer();
-      console.log('before function 3');
-
-      setTimeout(function() {
-        deferred.resolve(true);
-      }, 50);
-
-      return deferred.promise;
-    }
-  ],
-  afterEach: function() {
-    console.log('Running after...');
-  },
-  filter: function(test) {
-    return test.tags && test.tags.indexOf('users') > -1;
-  }
-};
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/config-3.js
+++ /dev/null
@@ -1,41 +0,0 @@
-var
-
-  /** async flow lib */
-  $q = require('q');
-
-module.exports = {
-  port: 6060,
-  server: require('../example/server'),
-  timeout: 5000,
-  plugins: [
-    {
-      name: 'basicAuth',
-      before: function(ctrllr, request, value) {
-        var deferred = $q.defer();
-
-        setTimeout(function() {
-          request.setHeader('Authorization', value);
-          deferred.resolve(true);
-        }, 1000);
-
-        return deferred.promise;
-      }
-    },
-    {
-      name: 'customAssertion',
-      after: function(ctrllr, response, value) {
-        var deferred = $q.defer();
-
-        setTimeout(function() {
-          ctrllr.assert('value should equal true', function() {
-            return true === value;
-          });
-
-          deferred.resolve(true);
-        }, 1000);
-
-        return deferred.promise;
-      }
-    }
-  ]
-};
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/config.js
+++ /dev/null
@@ -1,26 +0,0 @@
-module.exports = {
-  port: 6060,
-  server: require('../example/server'),
-  timeout: 5000,
-  beforeEach: [
-    function() {
-      console.log('before function 1')
-    },
-    function() {
-      console.log('before function 2')
-    },
-    function() {
-      var deferred = require('q').defer();
-      console.log('before function 3');
-
-      setTimeout(function() {
-        deferred.resolve(true);
-      }, 50);
-
-      return deferred.promise;
-    }
-  ],
-  afterEach: function() {
-    console.log('Running after...');
-  }
-};
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/server.js
+++ /dev/null
@@ -1,124 +0,0 @@
-var
-
-  /** logging service */
-  log = new require('ctrl-logger')(),
-
-  /** express module */
-  express = require('express'),
-
-  /** server instance */
-  app = express(),
-
-  /** helper for parsing requests, primarily POST **/
-  bodyParser = require('body-parser'),
-
-  /** simulate PUT and DELETE */
-  methodOverride = require('method-override'),
-
-  /** the port the server will listen to for requests */
-  port = 4040,
-
-  /** mock users */
-  users = [
-    { _id: 1, username: 'foo' },
-    { _id: 2, username: 'bar' },
-    { _id: 3, username: 'baz' }
-  ];
-
-/* # # # # # # # # # # # # # # # # # # # # */
-/* # # # # # # # # # # # # # # # # # # # # */
-/* # # # # # # # # # # # # # # # # # # # # */
-/* # # # # # # # # # # # # # # # # # # # # */
-
-// config server
-
-/** log all requests to logger */
-app.use(function(req, res, next) {
-  log.info('%s %s', req.method, req.url);
-  next();
-});
-
-// express helpers
-app.use(bodyParser.json());
-app.use(bodyParser.urlencoded({
-  extended: true
-}));
-app.use(methodOverride());
-
-/* # # # # # # # # # # # # # # # # # # # # */
-/* # # # # # # # # # # # # # # # # # # # # */
-/* # # # # # # # # # # # # # # # # # # # # */
-/* # # # # # # # # # # # # # # # # # # # # */
-
-// config routes
-
-app.get('/api/users', function(req, res) {
-  res.status(200).send(users);
-});
-
-app.post('/api/users', function(req, res) {
-  var auth;
-
-  if (!(auth = req.headers.authorization)) {
-    return res.status(401).end();
-  } else if (auth !== 'password') {
-    return res.status(401).end();
-  }
-
-  console.log('Sending success.');
-  res.status(200).json({
-    _id: 1,
-    username: req.body.username
-  });
-});
-
-app.get('/api/users/:id', function(req, res) {
-  for (var i = 0, len = users.length; i < len; i++) {
-    if (users[i]._id.toString() === req.params.id.toString()) {
-      return res.status(200).json(users[i]);
-    }
-  }
-
-  return res.status(404).end();
-});
-
-app.get('/api/auth', function(req, res) {
-  var auth;
-
-  if (!(auth = req.headers.authorization)) {
-    return res.status(401).end();
-  } else if (auth !== 'password') {
-    return res.status(401).end();
-  }
-
-  res.status(200).json({
-    _id: 1,
-    username: 'foo'
-  });
-});
-
-app.get('/api/auth2', function(req, res) {
-  var auth, auth2
-
-  if (!(auth = req.headers.authorization)) {
-    return res.status(401).end();
-  } else if (!(auth2 = req.headers.authorization2)) {
-    return res.status(401).end();
-  } else if (auth !== 'password') {
-    return res.status(401).end();
-  } else if (auth2 !== 'password') {
-    return res.status(401).end();
-  }
-
-  res.status(200).json({
-    _id: 1,
-    username: 'foo'
-  });
-});
-
-/* # # # # # # # # # # # # # # # # # # # # */
-/* # # # # # # # # # # # # # # # # # # # # */
-/* # # # # # # # # # # # # # # # # # # # # */
-/* # # # # # # # # # # # # # # # # # # # # */
-
-module.exports = app;
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/spec-1.js
+++ /dev/null
@@ -1,16 +0,0 @@
-module.exports = {
-  description: 'Users list endpoint.',
-  method: 'GET',
-  url: '/api/users',
-  expectStatus: 200,
-  expectJSON: true,
-  expectArray: true,
-  expectKeys: [
-    '_id',
-    'username'
-  ],
-  tags: [
-    'users',
-    'users.list'
-  ]
-};
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/spec-2.js
+++ /dev/null
@@ -1,25 +0,0 @@
-module.exports = [
-  {
-    description: 'Single user test one.',
-    method: 'GET',
-    url: '/api/users/1',
-    expectStatus: 200,
-    expectJSON: true,
-    expectKeys: [
-      '_id',
-      'username'
-    ]
-  },
-  {
-    description: 'Single user test two.',
-    method: 'GET',
-    url: '/api/users/3',
-    beforeEach: false,
-    afterEach: false,
-    expectStatus: 200,
-    expectJSON: true,
-    expectKeyValue: {
-      _id: 3
-    }
-  }
-];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/spec-3.js
+++ /dev/null
@@ -1,45 +0,0 @@
-module.exports = [
-  {
-    description: 'Auth endpoint security example.',
-    method: 'GET',
-    url: '/api/auth',
-    expectStatus: 401
-  },
-  {
-    description: 'Auth endpoint header example.',
-    method: 'GET',
-    url: '/api/auth',
-    headers: { Authorization: 'password' },
-    expectStatus: 200,
-    expectJSON: true,
-    expectKeyValue: {
-      _id: 1
-    }
-  },
-  {
-    description: 'Auth endpoint 2',
-    method: 'GET',
-    url: '/api/auth',
-    headers: { Authorization: 'password', Authorization2: 'password' },
-    expectStatus: 200,
-    expectJSON: true,
-    expectKeyValue: {
-      _id: 1
-    }
-  },
-  {
-    description: 'Auth endpoint custom header',
-    method: 'GET',
-    url: '/api/auth',
-    headers: function() {
-      return {
-        Authorization: 'password'
-      };
-    },
-    expectStatus: 200,
-    expectJSON: true,
-    expectKeyValue: {
-      _id: 1
-    }
-  }
-];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/spec-4.js
+++ /dev/null
@@ -1,109 +0,0 @@
-module.exports = [
-  {
-    description: '`before` function',
-    method: 'POST',
-    url: '/api/users',
-    before: function(ctrllr, request) {
-      console.log('Calling spec-4 `before`');
-      request.setHeader('Authorization', 'password');
-    },
-    send: {
-      username: 'custom username'
-    },
-    expectStatus: 200,
-    expectJSON: true,
-    expectKeyValue: {
-      username: 'custom username'
-    }
-  },
-
-
-  {
-    description: 'Deferred `before` function',
-    method: 'POST',
-    url: '/api/users',
-    before: function(ctrllr, request) {
-      var deferred = require('q').defer();
-
-      setTimeout(function() {
-        request.setHeader('Authorization', 'password');
-        deferred.resolve(true);
-      }, 100);
-
-      return deferred.promise;
-    },
-    send: {
-      username: 'custom username'
-    },
-    expectStatus: 200,
-    expectJSON: true,
-    expectKeyValue: {
-      username: 'custom username'
-    }
-  },
-
-
-  {
-    description: '`after` function',
-    method: 'POST',
-    url: '/api/users',
-    headers: { Authorization: 'password' },
-    after: function(ctrllr, response) {
-      console.log('Calling `after` fn.');
-      ctrllr.assert('_id is defined.', function() {
-        return typeof response.body._id !== 'undefined';
-      });
-    },
-    expectStatus: 200,
-    expectJSON: true
-  },
-
-
-  {
-    description: 'Deferred `after` function',
-    method: 'POST',
-    url: '/api/users',
-    headers: { Authorization: 'password' },
-    after: function(ctrllr, response) {
-      var deferred = require('q').defer();
-
-      setTimeout(function() {
-        ctrllr.assert('_id is defined.', function() {
-          return typeof response.body._id !== 'undefined';
-        });
-
-        ctrllr.assert('true is true', true === true);
-
-        deferred.resolve();
-      }, 1000);
-
-      return deferred.promise;
-    },
-    expectStatus: 200,
-    expectJSON: true
-  },
-
-
-  {
-    description: '`before` & `after` timeout example',
-    method: 'POST',
-    url: '/api/users',
-    headers: { Authorization: 'password' },
-    before: function(response, request) {
-
-    },
-    after: function(ctrllr, response) {
-      var deferred = require('q').defer();
-
-      setTimeout(function() {
-        ctrllr.assert('true === true', true === true);
-
-        deferred.resolve(true);
-      }, 100);
-
-      return deferred.promise;
-    },
-    expectStatus: 200,
-    expectJSON: true
-  }
-];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/spec-5.js
+++ /dev/null
@@ -1,37 +0,0 @@
-module.exports = [
-  {
-    description: 'Data store test',
-    method: 'GET',
-    url: '/api/auth',
-    headers: { Authorization: 'password' },
-    expectStatus: 200,
-    before: function(ctrllr) {
-      var store = ctrllr.getStore();
-
-      store.set('foo', 'bar');
-      ctrllr.assert('foo was set', store.get('foo') === 'bar');
-      ctrllr.assert('foo is in the store', store.dump().foo === 'bar');
-    },
-    after: function(ctrllr, response) {
-      var store = ctrllr.getStore();
-
-      ctrllr.assert('foo is still set', store.get('foo') === 'bar');
-
-      store.remove('foo');
-      ctrllr.assert('foo can be removed', store.get('foo') === null);
-
-      store.set('foo', 'bar');
-      store.set('bar', 'baz');
-      store.set('bam', 'bop');
-      store.clear();
-
-      ctrllr.assert('the store can be cleared', store.get('foo') === null);
-      ctrllr.assert('the store can be cleared', store.get('bar') === null);
-      ctrllr.assert('the store can be cleared', store.get('bam') === null);
-
-      ctrllr.assert('the `assert` can be passed a function', function() {
-        return true;
-      });
-    }
-  }
-];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/spec-6.js
+++ /dev/null
@@ -1,27 +0,0 @@
-module.exports = [
-  {
-    description: 'Url builder test',
-    method: 'GET',
-    url: function() {
-      return '/api/auth'
-    },
-    expectStatus: 401
-  },
-  {
-    description: 'Async url builder test',
-    method: 'GET',
-    url: function() {
-      var deferred = require('q').defer();
-
-      setTimeout(function() {
-        deferred.resolve('/api/users/1');
-      }, 500);
-
-      return deferred.promise;
-    },
-    expectJSON: true,
-    expectKeyValue: {
-      _id: 1
-    }
-  }
-];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/spec-7.js
+++ /dev/null
@@ -1,10 +0,0 @@
-module.exports = [
-  {
-    description: 'Url builder test',
-    method: 'GET',
-    basicAuth: 'password',
-    customAssertion: true,
-    url: '/api/auth',
-    expectStatus: 200
-  }
-];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/test-2.js
+++ /dev/null
@@ -1,20 +0,0 @@
-var
-
-  /** ctrllr config */
-  config = require('../example/config'),
-
-  /** ctrllr instance */
-  ctrllr = new require('../lib/ctrllr')(config),
-
-  /** tests */
-  test1 = require('../example/spec-1'),
-  test2 = require('../example/spec-2'),
-  test3 = require('../example/spec-3'),
-  test4 = require('../example/spec-4');
-
-ctrllr
-  .add(test1)
-  .add(test2)
-  .add(test3)
-  .add(test4)
-  .start();
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/test-3.js
+++ /dev/null
@@ -1,14 +0,0 @@
-var
-
-  /** ctrllr config */
-  config = require('../example/config'),
-
-  /** ctrllr instance */
-  ctrllr = new require('../lib/ctrllr')(config),
-
-  /** tests */
-  test5 = require('../example/spec-5');
-
-ctrllr
-  .add(test5)
-  .start();
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/test-4.js
+++ /dev/null
@@ -1,14 +0,0 @@
-var
-
-  /** ctrllr config */
-  config = require('../example/config'),
-
-  /** ctrllr instance */
-  ctrllr = new require('../lib/ctrllr')(config),
-
-  /** tests */
-  test6 = require('../example/spec-6');
-
-ctrllr
-  .add(test6)
-  .start();
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/test-5.js
+++ /dev/null
@@ -1,20 +0,0 @@
-var
-
-  /** ctrllr config */
-  config = require('../example/config-2'),
-
-  /** ctrllr instance */
-  ctrllr = new require('../lib/ctrllr')(config),
-
-  /** tests */
-  test1 = require('../example/spec-1'),
-  test2 = require('../example/spec-2'),
-  test3 = require('../example/spec-3'),
-  test4 = require('../example/spec-4');
-
-ctrllr
-  .add(test1)
-  .add(test2)
-  .add(test3)
-  .add(test4)
-  .start();
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/test-6.js
+++ /dev/null
@@ -1,46 +0,0 @@
-var
-
-  /** async flow lib */
-  $q = require('q'),
-
-  /** ctrllr config */
-  config = require('../example/config'),
-
-  /** ctrllr instance */
-  ctrllr = new require('../lib/ctrllr')(config),
-
-  /** tests */
-  test7 = require('../example/spec-7');
-
-ctrllr
-  .add(test7)
-  .addPlugin({
-    name: 'basicAuth',
-    before: function(ctrllr, request, value) {
-      var deferred = $q.defer();
-
-      setTimeout(function() {
-        request.setHeader('Authorization', value);
-        deferred.resolve(true);
-      }, 1000);
-
-      return deferred.promise;
-    }
-  })
-  .addPlugin({
-    name: 'customAssertion',
-    after: function(ctrllr, response, value) {
-      var deferred = $q.defer();
-
-      setTimeout(function() {
-        ctrllr.assert('value should equal true', function() {
-          return true === value;
-        });
-
-        deferred.resolve(true);
-      }, 1000);
-
-      return deferred.promise;
-    }
-  })
-  .start();
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/test-7.js
+++ /dev/null
@@ -1,17 +0,0 @@
-var
-
-  /** async flow lib */
-  $q = require('q'),
-
-  /** ctrllr config */
-  config = require('../example/config-3'),
-
-  /** ctrllr instance */
-  ctrllr = new require('../lib/ctrllr')(config),
-
-  /** tests */
-  test7 = require('../example/spec-7');
-
-ctrllr
-  .add(test7)
-  .start();
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/example/test-8.js
+++ /dev/null
@@ -1,18 +0,0 @@
-var
-
-  /** express server */
-  server = require('../example/server'),
-
-  /** ctrllr instance */
-  ctrllr = new require('../lib/ctrllr')({
-    port: 6060,
-    server: server,
-    proxy: 'http://192.168.0.3:8888'
-  }),
-
-  /** tests */
-  test1 = require('../example/spec-1');
-
-ctrllr
-  .add(test1)
-  .start();
deleted file mode 100644
--- a/node_modules/ctrllr/example/test.js
+++ /dev/null
@@ -1,23 +0,0 @@
-var
-
-  /** express server */
-  server = require('../example/server'),
-
-  /** ctrllr instance */
-  ctrllr = new require('../lib/ctrllr')({
-    port: 6060,
-    server: server
-  }),
-
-  /** tests */
-  test1 = require('../example/spec-1'),
-  test2 = require('../example/spec-2'),
-  test3 = require('../example/spec-3'),
-  test4 = require('../example/spec-4');
-
-ctrllr
-  .add(test1)
-  .add(test2)
-  .add(test3)
-  .add(test4)
-  .start();
\ No newline at end of file
--- a/node_modules/ctrllr/lib/interface.js
+++ b/node_modules/ctrllr/lib/interface.js
@@ -57,8 +57,13 @@ Interface.prototype.assert = function(description, bool, expectedValue, actualVa
   var isSuccessful = true;
 
   if (typeof bool === 'function') {
-    // if function passed, get result
-    bool = bool();
+    try {
+      // if function passed, get result
+      bool = bool();
+    } catch (e) {
+      log.assertionMeta(false, 'ERROR RUNNING TEST: ', e);
+      bool = false;
+    }
   }
 
   if (bool === true) {
--- a/node_modules/ctrllr/lib/test.js
+++ b/node_modules/ctrllr/lib/test.js
@@ -186,11 +186,14 @@ Test.prototype.execute = function() {
         .execute()
         .then(function(res) {
           var response = new Response(null, res);
+          var store = alias.interface.getStore();
+          store.set('__RESPONSE__', res);
           alias.response = response;
           return deferred.resolve(response);
         })
         .fail(function(err) {
           var response = new Response(err, null);
+
           alias.response = response;
           return deferred.resolve(response);
         });
--- a/node_modules/ctrllr/lib/util.js
+++ b/node_modules/ctrllr/lib/util.js
@@ -170,15 +170,19 @@ exports.countdown = function(promise, max) {
     }, 1000),
     clear = function() {
       clearTimeout(id);
+    },
+    success = function(val) {
+      clear();
+      deferred.resolve(val);
+    },
+    fail = function(error) {
+      clear();
+      deferred.reject(error);
     };
 
-  promise.then(function(val) {
-    clear();
-    deferred.resolve(val);
-  }).fail(function(err) {
-    clear();
-    deferred.reject(err);
-  });
+  promise.then(success);
+  promise.fail && promise.fail(fail);
+  promise.catch && promise.catch(fail);
 
   return deferred.promise;
 };
deleted file mode 100644
--- a/node_modules/ctrllr/node_modules/ctrl-logger/.npmignore
+++ /dev/null
@@ -1,127 +0,0 @@
-# Created by https://www.gitignore.io
-
-### Intellij ###
-# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm
-
-/*.iml
-
-## Directory-based project format:
-.idea/
-# if you remove the above rule, at least ignore the follwing:
-
-# User-specific stuff:
-# .idea/workspace.xml
-# .idea/tasks.xml
-# .idea/dictionaries
-
-# Sensitive or high-churn files:
-# .idea/dataSources.ids
-# .idea/dataSources.xml
-# .idea/sqlDataSources.xml
-# .idea/dynamic.xml
-# .idea/uiDesigner.xml
-
-# Gradle:
-# .idea/gradle.xml
-# .idea/libraries
-
-# Mongo Explorer plugin:
-# .idea/mongoSettings.xml
-
-## File-based project format:
-*.ipr
-*.iws
-
-## Plugin-specific files:
-
-# IntelliJ
-out/
-
-# mpeltonen/sbt-idea plugin
-.idea_modules/
-
-# JIRA plugin
-atlassian-ide-plugin.xml
-
-# Crashlytics plugin (for Android Studio and IntelliJ)
-com_crashlytics_export_strings.xml
-
-### Node ###
-# Logs
-logs
-*.log
-
-# Runtime data
-pids
-*.pid
-*.seed
-
-# Directory for instrumented libs generated by jscoverage/JSCover
-lib-cov
-
-# Coverage directory used by tools like istanbul
-coverage
-
-# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
-.grunt
-
-# Compiled binary addons (http://nodejs.org/api/addons.html)
-build/Release
-
-# Dependency directory
-# Commenting this out is preferred by some people, see
-# https://www.npmjs.org/doc/misc/npm-faq.html#should-i-check-my-node_modules-folder-into-git-
-node_modules
-
-# Users Environment Variables
-.lock-wscript
-
-### Android ###
-# Built application files
-*.apk
-*.ap_
-
-# Files for the Dalvik VM
-*.dex
-
-# Java class files
-*.class
-
-# Generated files
-bin/
-gen/
-
-# Gradle files
-.gradle/
-build/
-
-# Local configuration file (sdk path, etc)
-local.properties
-
-# Proguard folder generated by Eclipse
-proguard/
-
-# Log Files
-*.log
-
-### SublimeText ###
-# cache files for sublime text
-*.tmlanguage.cache
-*.tmPreferences.cache
-*.stTheme.cache
-
-# workspace files are user-specific
-*.sublime-workspace
-
-# project files should be checked into the repository, unless a significant
-# proportion of contributors will probably not be using SublimeText
-# *.sublime-project
-
-# sftp configuration file
-sftp-config.json
-
-### Bower ###
-bower_components
-
-docs
-TODO.md
\ No newline at end of file
deleted file mode 100644
deleted file mode 100644
--- a/node_modules/ctrllr/node_modules/uuid/.npmignore
+++ /dev/null
@@ -1,2 +0,0 @@
-node_modules
-.DS_Store
deleted file mode 100644
--- a/node_modules/ctrllr/node_modules/uuid/.travis.yml
+++ /dev/null
@@ -1,5 +0,0 @@
-language: node_js
-node_js:
-    - "0.6"
-    - "0.8"
-    - "0.10"
deleted file mode 100644
--- a/node_modules/ctrllr/node_modules/uuid/LICENSE.md
+++ /dev/null
@@ -1,2 +0,0 @@
-Copyright (c) 2010-2012 Robert Kieffer
-MIT License - http://opensource.org/licenses/mit-license.php
deleted file mode 100644
--- a/node_modules/ctrllr/node_modules/uuid/README.md
+++ /dev/null
@@ -1,205 +0,0 @@
-# uuid [![Build Status](https://secure.travis-ci.org/defunctzombie/node-uuid.svg?branch=master)](http://travis-ci.org/defunctzombie/node-uuid) #
-
-[![browser support](https://ci.testling.com/defunctzombie/node-uuid.png)](https://ci.testling.com/defunctzombie/node-uuid)
-
-Simple, fast generation of [RFC4122](http://www.ietf.org/rfc/rfc4122.txt) UUIDS.
-
-Features:
-
-* Generate RFC4122 version 1 or version 4 UUIDs
-* Runs in node.js and all browsers.
-* Cryptographically strong random # generation on supporting platforms
-* 1185 bytes minified and gzip'ed  (Want something smaller?  Check this [crazy shit](https://gist.github.com/982883) out! )
-* [Annotated source code](http://broofa.github.com/node-uuid/docs/uuid.html)
-
-## Getting Started
-
-Install it in your browser:
-
-```html
-<script src="uuid.js"></script>
-```
-
-Or in node.js:
-
-```
-npm install uuid
-```
-
-```javascript
-var uuid = require('uuid');
-
-// Generate a v1 (time-based) id
-uuid.v1(); // -> '6c84fb90-12c4-11e1-840d-7b25c5ee775a'
-
-// Generate a v4 (random) id
-uuid.v4(); // -> '110ec58a-a0f2-4ac4-8393-c866d813b8d1'
-```
-
-## API
-
-### uuid.v1([`options` [, `buffer` [, `offset`]]])
-
-Generate and return a RFC4122 v1 (timestamp-based) UUID.
-
-* `options` - (Object) Optional uuid state to apply. Properties may include:
-
-  * `node` - (Array) Node id as Array of 6 bytes (per 4.1.6). Default: Randomly generated ID.  See note 1.
-  * `clockseq` - (Number between 0 - 0x3fff) RFC clock sequence.  Default: An internally maintained clockseq is used.
-  * `msecs` - (Number | Date) Time in milliseconds since unix Epoch.  Default: The current time is used.
-  * `nsecs` - (Number between 0-9999) additional time, in 100-nanosecond units. Ignored if `msecs` is unspecified. Default: internal uuid counter is used, as per 4.2.1.2.
-
-* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.
-* `offset` - (Number) Starting index in `buffer` at which to begin writing.
-
-Returns `buffer`, if specified, otherwise the string form of the UUID
-
-Notes:
-
-1. The randomly generated node id is only guaranteed to stay constant for the lifetime of the current JS runtime. (Future versions of this module may use persistent storage mechanisms to extend this guarantee.)
-
-Example: Generate string UUID with fully-specified options
-
-```javascript
-uuid.v1({
-  node: [0x01, 0x23, 0x45, 0x67, 0x89, 0xab],
-  clockseq: 0x1234,
-  msecs: new Date('2011-11-01').getTime(),
-  nsecs: 5678
-});   // -> "710b962e-041c-11e1-9234-0123456789ab"
-```
-
-Example: In-place generation of two binary IDs
-
-```javascript
-// Generate two ids in an array
-var arr = new Array(32); // -> []
-uuid.v1(null, arr, 0);   // -> [02 a2 ce 90 14 32 11 e1 85 58 0b 48 8e 4f c1 15]
-uuid.v1(null, arr, 16);  // -> [02 a2 ce 90 14 32 11 e1 85 58 0b 48 8e 4f c1 15 02 a3 1c b0 14 32 11 e1 85 58 0b 48 8e 4f c1 15]
-
-// Optionally use uuid.unparse() to get stringify the ids
-uuid.unparse(buffer);    // -> '02a2ce90-1432-11e1-8558-0b488e4fc115'
-uuid.unparse(buffer, 16) // -> '02a31cb0-1432-11e1-8558-0b488e4fc115'
-```
-
-### uuid.v4([`options` [, `buffer` [, `offset`]]])
-
-Generate and return a RFC4122 v4 UUID.
-
-* `options` - (Object) Optional uuid state to apply. Properties may include:
-
-  * `random` - (Number[16]) Array of 16 numbers (0-255) to use in place of randomly generated values
-  * `rng` - (Function) Random # generator to use.  Set to one of the built-in generators - `uuid.mathRNG` (all platforms), `uuid.nodeRNG` (node.js only), `uuid.whatwgRNG` (WebKit only) - or a custom function that returns an array[16] of byte values.
-
-* `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.
-* `offset` - (Number) Starting index in `buffer` at which to begin writing.
-
-Returns `buffer`, if specified, otherwise the string form of the UUID
-
-Example: Generate string UUID with fully-specified options
-
-```javascript
-uuid.v4({
-  random: [
-    0x10, 0x91, 0x56, 0xbe, 0xc4, 0xfb, 0xc1, 0xea,
-    0x71, 0xb4, 0xef, 0xe1, 0x67, 0x1c, 0x58, 0x36
-  ]
-});
-// -> "109156be-c4fb-41ea-b1b4-efe1671c5836"
-```
-
-Example: Generate two IDs in a single buffer
-
-```javascript
-var buffer = new Array(32); // (or 'new Buffer' in node.js)
-uuid.v4(null, buffer, 0);
-uuid.v4(null, buffer, 16);
-```
-
-### uuid.parse(id[, buffer[, offset]])
-### uuid.unparse(buffer[, offset])
-
-Parse and unparse UUIDs
-
-  * `id` - (String) UUID(-like) string
-  * `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written. Default: A new Array or Buffer is used
-  * `offset` - (Number) Starting index in `buffer` at which to begin writing. Default: 0
-
-Example parsing and unparsing a UUID string
-
-```javascript
-var bytes = uuid.parse('797ff043-11eb-11e1-80d6-510998755d10'); // -> <Buffer 79 7f f0 43 11 eb 11 e1 80 d6 51 09 98 75 5d 10>
-var string = uuid.unparse(bytes); // -> '797ff043-11eb-11e1-80d6-510998755d10'
-```
-
-### uuid.noConflict()
-
-(Browsers only) Set `uuid` property back to it's previous value.
-
-Returns the uuid object.
-
-Example:
-
-```javascript
-var myUuid = uuid.noConflict();
-myUuid.v1(); // -> '6c84fb90-12c4-11e1-840d-7b25c5ee775a'
-```
-
-## Deprecated APIs
-
-Support for the following v1.2 APIs is available in v1.3, but is deprecated and will be removed in the next major version.
-
-### uuid([format [, buffer [, offset]]])
-
-uuid() has become uuid.v4(), and the `format` argument is now implicit in the `buffer` argument. (i.e. if you specify a buffer, the format is assumed to be binary).
-
-## Testing
-
-In node.js
-
-```
-> cd test
-> node test.js
-```
-
-In Browser
-
-```
-open test/test.html
-```
-
-### Benchmarking
-
-Requires node.js
-
-```
-cd benchmark/
-npm install
-node benchmark.js
-```
-
-For a more complete discussion of uuid performance, please see the `benchmark/README.md` file, and the [benchmark wiki](https://github.com/broofa/uuid/wiki/Benchmark)
-
-For browser performance [checkout the JSPerf tests](http://jsperf.com/node-uuid-performance).
-
-## Release notes
-
-### 2.0.0
- 
-* Removed uuid.BufferClass
-
-### 1.4.0
-
-* Improved module context detection
-* Removed public RNG functions
-
-### 1.3.2
-
-* Improve tests and handling of v1() options (Issue #24)
-* Expose RNG option to allow for perf testing with different generators
-
-### 1.3.0
-
-* Support for version 1 ids, thanks to [@ctavan](https://github.com/ctavan)!
-* Support for node.js crypto API
-* De-emphasizing performance in favor of a) cryptographic quality PRNGs where available and b) more manageable code
deleted file mode 100644
--- a/node_modules/ctrllr/node_modules/uuid/benchmark/README.md
+++ /dev/null
@@ -1,53 +0,0 @@
-# node-uuid Benchmarks
-
-### Results
-
-To see the results of our benchmarks visit https://github.com/broofa/node-uuid/wiki/Benchmark
-
-### Run them yourself
-
-node-uuid comes with some benchmarks to measure performance of generating UUIDs. These can be run using node.js. node-uuid is being benchmarked against some other uuid modules, that are available through npm namely `uuid` and `uuid-js`.
-
-To prepare and run the benchmark issue;
-
-```
-npm install uuid uuid-js
-node benchmark/benchmark.js
-```
-
-You'll see an output like this one:
-
-```
-# v4
-nodeuuid.v4(): 854700 uuids/second
-nodeuuid.v4('binary'): 788643 uuids/second
-nodeuuid.v4('binary', buffer): 1336898 uuids/second
-uuid(): 479386 uuids/second
-uuid('binary'): 582072 uuids/second
-uuidjs.create(4): 312304 uuids/second
-
-# v1
-nodeuuid.v1(): 938086 uuids/second
-nodeuuid.v1('binary'): 683060 uuids/second
-nodeuuid.v1('binary', buffer): 1644736 uuids/second
-uuidjs.create(1): 190621 uuids/second
-```
-
-* The `uuid()` entries are for Nikhil Marathe's [uuid module](https://bitbucket.org/nikhilm/uuidjs) which is a wrapper around the native libuuid library.
-* The `uuidjs()` entries are for Patrick Negri's [uuid-js module](https://github.com/pnegri/uuid-js) which is a pure javascript implementation based on [UUID.js](https://github.com/LiosK/UUID.js) by LiosK.
-
-If you want to get more reliable results you can run the benchmark multiple times and write the output into a log file:
-
-```
-for i in {0..9}; do node benchmark/benchmark.js >> benchmark/bench_0.4.12.log; done;
-```
-
-If you're interested in how performance varies between different node versions, you can issue the above command multiple times.
-
-You can then use the shell script `bench.sh` provided in this directory to calculate the averages over all benchmark runs and draw a nice plot:
-
-```
-(cd benchmark/ && ./bench.sh)
-```
-
-This assumes you have [gnuplot](http://www.gnuplot.info/) and [ImageMagick](http://www.imagemagick.org/) installed. You'll find a nice `bench.png` graph in the `benchmark/` directory then.
deleted file mode 100644
--- a/node_modules/ctrllr/node_modules/uuid/test/mocha.opts
+++ /dev/null
@@ -1 +0,0 @@
---ui qunit
deleted file mode 100644
--- a/node_modules/ctrllr/node_modules/uuid/test/test.js
+++ /dev/null
@@ -1,105 +0,0 @@
-var assert = require('assert');
-
-var uuid = require('../');
-
-// Verify ordering of v1 ids created with explicit times
-var TIME = 1321644961388; // 2011-11-18 11:36:01.388-08:00
-
-function compare(name, ids) {
-  test(name, function() {
-    // avoid .map for older browsers
-    for (var i=0 ; i<ids.length ; ++i) {
-      ids[i] = ids[i].split('-').reverse().join('-');
-    }
-    ids = ids.sort();
-    var sorted = ([].concat(ids)).sort();
-
-    assert(sorted.toString() == ids.toString(), name + ' have expected order');
-  });
-}
-
-// Verify ordering of v1 ids created using default behavior
-compare('uuids with current time', [
-  uuid.v1(),
-  uuid.v1(),
-  uuid.v1(),
-  uuid.v1(),
-  uuid.v1()
-]);
-
-// Verify ordering of v1 ids created with explicit times
-compare('uuids with time option', [
-  uuid.v1({msecs: TIME - 10*3600*1000}),
-  uuid.v1({msecs: TIME - 1}),
-  uuid.v1({msecs: TIME}),
-  uuid.v1({msecs: TIME + 1}),
-  uuid.v1({msecs: TIME + 28*24*3600*1000})
-]);
-
-test('msec', function() {
-  assert(
-    uuid.v1({msecs: TIME}) != uuid.v1({msecs: TIME}),
-    'IDs created at same msec are different'
-  );
-});
-
-test('exception thrown when > 10k ids created in 1ms', function() {
-  // Verify throw if too many ids created
-  var thrown = false;
-  try {
-    uuid.v1({msecs: TIME, nsecs: 10000});
-  } catch (e) {
-    thrown = true;
-  }
-  assert(thrown, 'Exception thrown when > 10K ids created in 1 ms');
-});
-
-test('clock regression by msec', function() {
-  // Verify clock regression bumps clockseq
-  var uidt = uuid.v1({msecs: TIME});
-  var uidtb = uuid.v1({msecs: TIME - 1});
-  assert(
-    parseInt(uidtb.split('-')[3], 16) - parseInt(uidt.split('-')[3], 16) === 1,
-    'Clock regression by msec increments the clockseq'
-  );
-});
-
-test('clock regression by nsec', function() {
-  // Verify clock regression bumps clockseq
-  var uidtn = uuid.v1({msecs: TIME, nsecs: 10});
-  var uidtnb = uuid.v1({msecs: TIME, nsecs: 9});
-  assert(
-    parseInt(uidtnb.split('-')[3], 16) - parseInt(uidtn.split('-')[3], 16) === 1,
-    'Clock regression by nsec increments the clockseq'
-  );
-});
-
-test('explicit options product expected id', function() {
-  // Verify explicit options produce expected id
-  var id = uuid.v1({
-    msecs: 1321651533573,
-    nsecs: 5432,
-    clockseq: 0x385c,
-    node: [ 0x61, 0xcd, 0x3c, 0xbb, 0x32, 0x10 ]
-  });
-  assert(id == 'd9428888-122b-11e1-b85c-61cd3cbb3210', 'Explicit options produce expected id');
-});
-
-test('ids spanning 1ms boundary are 100ns apart', function() {
-  // Verify adjacent ids across a msec boundary are 1 time unit apart
-  var u0 = uuid.v1({msecs: TIME, nsecs: 9999});
-  var u1 = uuid.v1({msecs: TIME + 1, nsecs: 0});
-
-  var before = u0.split('-')[0], after = u1.split('-')[0];
-  var dt = parseInt(after, 16) - parseInt(before, 16);
-  assert(dt === 1, 'Ids spanning 1ms boundary are 100ns apart');
-});
-
-test('parse/unparse', function() {
-  var id = '00112233445566778899aabbccddeeff';
-  assert(uuid.unparse(uuid.parse(id.substr(0,10))) ==
-    '00112233-4400-0000-0000-000000000000', 'Short parse');
-  assert(uuid.unparse(uuid.parse('(this is the uuid -> ' + id + id)) ==
-    '00112233-4455-6677-8899-aabbccddeeff', 'Dirty parse');
-});
-
deleted file mode 100644
deleted file mode 100644
--- a/node_modules/ctrllr/tests/interface.spec.js
+++ /dev/null
@@ -1,62 +0,0 @@
-
-/* ==========================================================================
- Internal variables & dependencies
- ========================================================================== */
-
-var
-
-  /** ctrllr lib */
-  CTRLLR = require('../lib/ctrllr'),
-
-  /** ctrllr test interface */
-  Interface = require('../lib/interface');
-
-/* ==========================================================================
- Helper functions
- ========================================================================== */
-
-function getServer() {
-  return require('express')();
-}
-
-/* ==========================================================================
- Tests
- ========================================================================== */
-
-describe('util.js', function() {
-  var ctrllr, _interface;
-
-  /* # # # # # # # # # # # # # # # # # # # # */
-  /* # # # # # # # # # # # # # # # # # # # # */
-
-  // initialize ctrllr & interface instances before each test
-  beforeEach(function() {
-    ctrllr = new CTRLLR(getServer());
-    _interface = new Interface(ctrllr);
-  });
-
-  // delete store after each test
-  afterEach(function() {
-    ctrllr = null;
-    _interface = null;
-  });
-
-  /* # # # # # # # # # # # # # # # # # # # # */
-  /* # # # # # # # # # # # # # # # # # # # # */
-
-  it ('should increment `ctrllr._successes` on a successful assert', function() {
-    expect(ctrllr._successes).toEqual(0);
-
-    _interface.assert('true === true', true === true);
-
-    expect(ctrllr._successes).toEqual(1);
-  });
-
-  it ('should increment `ctrllr._failures` on a failed assert', function() {
-    expect(ctrllr._failures).toEqual(0);
-
-    _interface.assert('true === false', true === false);
-
-    expect(ctrllr._failures).toEqual(1);
-  });
-});
\ No newline at end of file
deleted file mode 100644
deleted file mode 100644
deleted file mode 100644
--- a/node_modules/ctrllr/tests/store.spec.js
+++ /dev/null
@@ -1,110 +0,0 @@
-
-/* ==========================================================================
- Internal variables & dependencies
- ========================================================================== */
-
-var
-
-  /** ctrllr data store */
-  Store = require('../lib/store');
-
-/* ==========================================================================
- Tests
- ========================================================================== */
-
-describe('store.js', function() {
-  var store;
-
-  /* # # # # # # # # # # # # # # # # # # # # */
-  /* # # # # # # # # # # # # # # # # # # # # */
-
-  // initialize store instance before each test
-  beforeEach(function() {
-    store = new Store();
-  });
-
-  // delete store after each test
-  afterEach(function() {
-    store = null;
-  });
-
-  /* # # # # # # # # # # # # # # # # # # # # */
-  /* # # # # # # # # # # # # # # # # # # # # */
-
-  it('it should be able to `get` and `set` strings', function() {
-    console.log('running store.js test 1');
-    var foo = 'bar';
-
-    store.set('foo', foo);
-    expect(store.get('foo')).toEqual(foo);
-  });
-
-  it('it should be able to `get` and `set` numbers', function() {
-    var foo = 3;
-
-    store.set('foo', foo);
-    expect(store.get('foo')).toEqual(foo);
-  });
-
-  it('it should be able to `get` and `set` booleans', function() {
-    var foo = true;
-
-    store.set('foo', foo);
-    expect(store.get('foo')).toEqual(foo);
-
-    foo = false;
-
-    store.set('foo', foo);
-    expect(store.get('foo')).toEqual(foo);
-  });
-
-  it('it should be able to `remove` keys', function() {
-    var foo = true;
-
-    store.set('foo', foo);
-    expect(store.get('foo')).toEqual(foo);
-
-    store.remove('foo');
-
-    expect(store.get('foo')).toBeUndefined();
-  });
-
-  it('it should be able to `clear` all keys', function() {
-    var
-      a = 'a',
-      b = 1,
-      c = true;
-
-    store.set('a', a);
-    store.set('b', b);
-    store.set('c', c);
-
-    store.clear();
-
-    expect(store.get('a')).toBeUndefined();
-    expect(store.get('b')).toBeUndefined();
-    expect(store.get('c')).toBeUndefined();
-  });
-
-  it('it should be able to `serialize` all data', function() {
-    var
-      a = 'a',
-      b = 1,
-      c = true,
-      serialized,
-      unserialized;
-
-    store.set('a', a);
-    store.set('b', b);
-    store.set('c', c);
-
-    serialized = store.serialize();
-
-    expect(typeof serialized).toEqual('string');
-    unserialized = JSON.parse(serialized);
-
-    expect(unserialized.a).toEqual(a);
-    expect(unserialized.b).toEqual(b);
-    expect(unserialized.c).toEqual(c);
-  });
-});
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/tests/test.spec.js
+++ /dev/null
@@ -1,202 +0,0 @@
-
-/* ==========================================================================
- Internal variables & dependencies
- ========================================================================== */
-
-var
-
-  /** ctrllr test manager */
-  Test = require('../lib/test'),
-
-  /** ctrllr lib */
-  CTRLLR = require('../lib/ctrllr'),
-
-  /** ctrllr test interface */
-  Interface = require('../lib/interface');
-
-/* ==========================================================================
- Helper functions
- ========================================================================== */
-
-function getServer() {
-  var
-    express = require('express'),
-    app = express();
-
-  app.post('/foo', function(req, res) {
-    return res.end('bar');
-  });
-
-  return app;
-}
-
-/* ==========================================================================
- Tests
- ========================================================================== */
-
-describe('test.js', function() {
-  var test, ctrllr, _interface, server, myObj;
-
-  /* # # # # # # # # # # # # # # # # # # # # */
-  /* # # # # # # # # # # # # # # # # # # # # */
-
-  // initialize store instance before each test
-  beforeEach(function(done) {
-    server = getServer();
-    ctrllr = new CTRLLR(server);
-    _interface = new Interface(ctrllr);
-    test = new Test(ctrllr.config, _interface);
-    myObj = {};
-
-    server.get('/foo', function(req, res, next) {
-      myObj.foo = 'bar';
-      return res.end();
-    });
-
-    server = server.listen(4040, function() {
-      done();
-    });
-  });
-
-  // delete store after each test
-  afterEach(function(done) {
-    ctrllr = null;
-    _interface = null;
-    test = null;
-    myObj = null;
-
-    server.close(function() {
-      server = null;
-      done();
-    });
-  });
-
-  /* # # # # # # # # # # # # # # # # # # # # */
-  /* # # # # # # # # # # # # # # # # # # # # */
-
-  it('should set the headers in the `request` instance if an object is provided', function(done) {
-    var headers = {
-      'Authorization': 'username:password',
-      'foo': 'bar'
-    };
-
-    test.config.headers = headers;
-
-    test.setHeaders().fin(function() {
-      var request = test.request;
-
-      expect(request).toBeDefined();
-      expect(request.config.headers).toBeDefined();
-      expect(request.config.headers.Authorization).toEqual(headers.Authorization);
-      expect(request.config.headers.foo).toEqual(headers.foo);
-
-      done();
-    });
-  });
-
-  it('should properly build a url in the `buildRequest` function', function(done) {
-    var config = {
-      path: '/foo',
-      method: 'POST',
-    };
-
-    test.config.path = config.path;
-
-    test.buildRequest().then(function() {
-      var
-        request = test.request,
-        port = ctrllr.config.port,
-        expectedUrl = 'http://localhost:4040/foo';
-
-      expect(request).toBeDefined();
-      expect(request.config.url).toBeDefined();
-      expect(request.config.url).toEqual(expectedUrl);
-    }).fail(function(err) {
-      console.log('err', err);
-      expect(err).toBeUndefined();
-    }).fin(function() {
-      done();
-    });
-  });
-
-  it('should set the method in the `buildRequest` function', function(done) {
-    var config = {
-      path: '/foo',
-      method: 'POST',
-    };
-
-    test.config.path = config.path;
-    test.config.method = config.method;
-
-    test.buildRequest().then(function() {
-      var request = test.request;
-
-      expect(request.config.method).toBeDefined();
-      expect(request.config.method).toEqual(config.method);
-    }).fail(function(err) {
-      console.log('err', err);
-      expect(err).toBeUndefined();
-    }).fin(function() {
-      done();
-    });
-  });
-
-  it('should hit the specified url in the `execute` function', function(done) {
-    var config = {
-      path: '/foo',
-      method: 'GET',
-    };
-
-    test.config.path = config.path;
-    test.config.method = config.method;
-
-    test.execute().then(function() {
-      expect(myObj).toBeDefined();
-      expect(myObj.foo).toBeDefined();
-      expect(myObj.foo).toEqual('bar');
-    }).fail(function(err) {
-      console.log('err', err);
-      expect(err).toBeUndefined();
-    }).fin(function() {
-      done();
-    });
-  });
-
-  it('should hit the specified url in the `execute` function', function(done) {
-    var config = {
-      path: '/foo',
-      method: 'GET',
-    };
-
-    test.config.path = config.path;
-    test.config.method = config.method;
-
-    test.execute().then(function() {
-      expect(myObj).toBeDefined();
-      expect(myObj.foo).toBeDefined();
-      expect(myObj.foo).toEqual('bar');
-    }).fail(function(err) {
-      console.log('err', err);
-      expect(err).toBeUndefined();
-    }).fin(function() {
-      done();
-    });
-  });
-
-  it('should execute a supplied `run` function when calling `execute`', function(done) {
-    test.config.run = function(ctrllr) {
-      myObj.foo = 'baz';
-    };
-
-    test.execute().then(function() {
-      expect(myObj).toBeDefined();
-      expect(myObj.foo).toBeDefined();
-      expect(myObj.foo).toEqual('baz');
-    }).fail(function(err) {
-      console.log('err', err);
-      expect(err).toBeUndefined();
-    }).fin(function() {
-      done();
-    });
-  });
-});
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/ctrllr/tests/util.spec.js
+++ /dev/null
@@ -1,31 +0,0 @@
-
-/* ==========================================================================
- Internal variables & dependencies
- ========================================================================== */
-
-// ...
-
-
-/* ==========================================================================
- Tests
- ========================================================================== */
-
-describe('util.js', function() {
-  var test, ctrllr, _interface;
-
-  /* # # # # # # # # # # # # # # # # # # # # */
-  /* # # # # # # # # # # # # # # # # # # # # */
-
-  // initialize store instance before each test
-  beforeEach(function() {
-    // ...
-  });
-
-  // delete store after each test
-  afterEach(function() {
-    // ...
-  });
-
-  /* # # # # # # # # # # # # # # # # # # # # */
-  /* # # # # # # # # # # # # # # # # # # # # */
-});
\ No newline at end of file
