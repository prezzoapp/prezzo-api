patch-package
deleted file mode 100644
--- a/node_modules/alfred/.gitignore
+++ /dev/null
@@ -1,137 +0,0 @@
-# env variables, credentials, etc
-config/*/*
-!config/*/keys.json
-config/*/*/*
-~secure/**
-!~secure/.gitkeep
-
-# Created by https://www.gitignore.io
-
-.DS_Store
-*/DS_Store
-
-### Intellij ###
-# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm
-
-/*.iml
-
-## Directory-based project format:
-.idea/
-# if you remove the above rule, at least ignore the follwing:
-
-# User-specific stuff:
-# .idea/workspace.xml
-# .idea/tasks.xml
-# .idea/dictionaries
-
-# Sensitive or high-churn files:
-# .idea/dataSources.ids
-# .idea/dataSources.xml
-# .idea/sqlDataSources.xml
-# .idea/dynamic.xml
-# .idea/uiDesigner.xml
-
-# Gradle:
-# .idea/gradle.xml
-# .idea/libraries
-
-# Mongo Explorer plugin:
-# .idea/mongoSettings.xml
-
-## File-based project format:
-*.ipr
-*.iws
-
-## Plugin-specific files:
-
-# IntelliJ
-out/
-
-# mpeltonen/sbt-idea plugin
-.idea_modules/
-
-# JIRA plugin
-atlassian-ide-plugin.xml
-
-# Crashlytics plugin (for Android Studio and IntelliJ)
-com_crashlytics_export_strings.xml
-
-### Node ###
-# Logs
-logs
-*.log
-
-# Runtime data
-pids
-*.pid
-*.seed
-
-# Directory for instrumented libs generated by jscoverage/JSCover
-lib-cov
-
-# Coverage directory used by tools like istanbul
-coverage
-
-# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
-.grunt
-
-# Compiled binary addons (http://nodejs.org/api/addons.html)
-build/Release
-
-# Dependency directory
-# Commenting this out is preferred by some people, see
-# https://www.npmjs.org/doc/misc/npm-faq.html#should-i-check-my-node_modules-folder-into-git-
-node_modules
-
-# Users Environment Variables
-.lock-wscript
-
-### Android ###
-# Built application files
-*.apk
-*.ap_
-
-# Files for the Dalvik VM
-*.dex
-
-# Java class files
-*.class
-
-# Generated files
-gen/
-
-# Gradle files
-.gradle/
-build/
-
-# Local configuration file (sdk path, etc)
-local.properties
-
-# Proguard folder generated by Eclipse
-proguard/
-
-# Log Files
-*.log
-
-### SublimeText ###
-# cache files for sublime text
-*.tmlanguage.cache
-*.tmPreferences.cache
-*.stTheme.cache
-
-# workspace files are user-specific
-*.sublime-workspace
-
-# project files should be checked into the repository, unless a significant
-# proportion of contributors will probably not be using SublimeText
-# *.sublime-project
-
-# sftp configuration file
-sftp-config.json
-
-### Bower ###
-bower_components
-
-TODO.md
-
-tmp
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/Gruntfile.js
+++ /dev/null
@@ -1,477 +0,0 @@
-/**
- * configuration for grunt tasks
- * @module Gruntfile
- */
-
-module.exports = function(grunt) {
-  /** load tasks */
-  require('load-grunt-tasks')(grunt);
-
-  /** paths to file on server */
-  var files = {
-
-    /** meta / non-script files */
-    meta: [
-      'README.md',
-      '**/README.md',
-      'Procfile',
-      'TODO.md',
-      'package.json',
-      '.gitignore',
-      '*.sublime-project',
-      '*.sublime-workspace',
-      '*.iml',
-      '.idea',
-      'dump.rdb'
-    ],
-
-    /** server scripts */
-    server: [
-      '*.*',
-      'bin/*.*',
-      'config/**/*.*',
-      'core/*.*',
-      'core/**/*.*',
-      'cron/*.*',
-      'cron/**/*.*',
-      'middleware/*.*',
-      'middleware/**/*.*',
-      'models/*.*',
-      'models/**/*.*',
-      'routes/*.*',
-      'routes/**/*.*',
-      'services/*.*',
-      'services/**/*.*'
-    ],
-
-    /** array of all paths */
-    all: []
-  };
-
-  /** add meta files to `files.all` */
-  files.meta.forEach(function(file) {
-    files.all.push(file);
-  });
-
-  /** add server files to `files.all` */
-  files.server.forEach(function(file) {
-    files.all.push(file);
-  });
-
-  /** ignore meta files on server */
-  files.meta.forEach(function(file) {
-    files.server.push('!' + file);
-  });
-
-  /** all grunt tasks */
-  var tasks = {
-
-    /** metadata inside `package.json` file */
-    pkg: grunt.file.readJSON('package.json'),
-
-    /** watches files for changes */
-    watch: {
-      server: {
-        /** files to watch */
-        files: files.server,
-
-        /** tasks to run on change */
-        tasks: [
-          'build'
-        ]
-      }
-    },
-
-    /** run scripts programatically */
-    nodemon: {
-      dev: {
-        /** script to run */
-        script: 'app.js',
-
-        /** configuration */
-        options: {
-          watch: files.server,
-          args: [
-            '--PORT=4242'
-          ],
-        }
-      },
-      test: {
-        script: 'app.js',
-        options: {
-          watch: files.server,
-          ignore: files.meta,
-          args: [
-            '--environment=test'
-          ]
-        }
-      }
-    },
-
-    /** runs multiple tasks */
-    concurrent: {
-      /** runs server, watches files for local development */
-      dev: {
-        options: {
-          logConcurrentOutput: true
-        },
-        tasks: [
-          // 'watch',
-          'nodemon:dev'
-        ]
-      },
-
-      /** runs server in testing env */
-      testServer: {
-        options: {
-          logConcurrentOutput: true
-        },
-        tasks: [
-          'watch',
-          'nodemon:test'
-        ]
-      }
-    },
-
-    /** lint javascript tool */
-    jshint: {
-
-      /** paths to files */
-      files: files.server,
-
-      /** options for jshint task */
-      options: {
-
-        /** options here to override JSHint defaults */
-        globals: {
-          console: true,
-          module: true
-        }
-      }
-    },
-
-    /** build TODO.md from inline comments */
-    todos: {
-      src: {
-        /** options for plugin */
-        options: {
-          priorities: {
-            low: /TODO/,
-            med: /FIXME/,
-            high: null
-          },
-          reporter: {
-            /** put at the top of the generated file */
-            header: function() {
-              return '-- BEGIN TASK LIST --\n\n';
-            },
-            /** flow for each file */
-            fileTasks: function(file, tasks, options) {
-              /** skip if no tasks or checking Gruntfile */
-              if (!tasks.length || file && file === 'Gruntfile.js') {
-                return '';
-              }
-
-              var result = '* ' + file + ' (' + tasks.length + ')\n\n';
-
-              /** iterate over tasks, add data */
-              tasks.forEach(function(task) {
-                result += '    [' + task.lineNumber + ' - ' +
-                  task.priority + '] ' + task.line.trim() + '\n';
-
-                result += '\n';
-              });
-
-              return result;
-            },
-            /** put at the bottom of the generated file */
-            footer: function() {
-              return '-- END TASK LIST --\n';
-            }
-          }
-        },
-        files: {
-          'TODO.md': files.server
-        }
-      }
-    },
-
-    bump: {
-      options: {
-        files: [
-          'package.json',
-        ],
-        updateConfigs: [],
-        commit: false, // true,
-        commitMessage: 'Release v%VERSION%',
-        commitFiles: ['package.json'],
-        createTag: false, // true,
-        tagName: 'v%VERSION%',
-        tagMessage: 'Version %VERSION%',
-        push: false, // true,
-        // pushTo: 'upstream',
-        gitDescribeOptions: '--tags --always --abbrev=1 --dirty=-d',
-        globalReplace: false,
-        prereleaseName: false,
-        regExp: false
-      }
-    },
-
-    release: {
-      options: {
-        bump: false, //default: true
-        changelog: false, //default: false
-        changelogText: '<%= version %>\n', //default: '### <%= version %> - <%= grunt.template.today("yyyy-mm-dd") %>\n'
-        file: 'package.json', // default: package.json
-        add: true, //default: true
-        commit: true, //default: true
-        tag: true, //default: true
-        push: false, //default: true
-        // pushTags: true, //default: true
-        npm: false, //default: true
-        npmtag: false, //default: no tag
-        indentation: '', //default: '  ' (two spaces)
-        // folder: 'folder/to/publish/to/npm', //default project root
-        tagName: '<%= version %>', //default: '<%= version %>'
-        commitMessage: 'release - v<%= version %>', //default: 'release <%= version %>'
-        tagMessage: 'release - v<%= version %>', //default: 'Version <%= version %>',
-        beforeBump: [], // optional grunt tasks to run before file versions are bumped
-        afterBump: [], // optional grunt tasks to run after file versions are bumped
-        beforeRelease: [
-          'shell:gitAddAll'
-        ], // optional grunt tasks to run after release version is bumped up but before release is packaged
-        afterRelease: [], // optional grunt tasks to run after release is packaged
-        updateVars: [], // optional grunt config objects to update (this will update/set the version property on the object specified)
-      },
-    },
-
-    /** shell commands */
-    shell: {
-      server: {
-        command: 'node app --port=4000'
-      },
-      worker: {
-        command: 'node worker'
-      },
-      testSetup: {
-        command: 'node tests/testSetup --environment=test'
-      },
-      testCleanup: {
-        command: 'node tests/testCleanup --environment=test'
-      },
-      documentAPI: {
-        command: 'node core/scripts/documentAPI'
-      },
-      documentModels: {
-        command: 'node core/scripts/documentModels'
-      },
-      gitAddAll: {
-        command: 'git add -A',
-      },
-      pushProduction: {
-        command: 'git push origin master && git push heroku master',
-      },
-      pushStaging: {
-        command: 'git push origin staging && git push staging staging:master',
-      },
-    },
-
-    /** testing framework */
-    jasmine_node: {
-      options: {
-        forceExit: false,
-        match: '',
-        matchall: false,
-        extensions: 'spec.js',
-        specNameMatcher: ''
-        // jUnit: {
-        //      report: true,
-        //      savePath: './reports/',
-        //      useDotNotation: true,
-        //      consolidate: true
-        // }
-      },
-      all: ['app/tests'],
-      models: ['app/tests/models'],
-      api: ['app/tests/controllers'],
-      singleFile: ['app/tests']
-      // 'app/tests/controllers/user.find.spec.js'
-    },
-
-    /** ctrllr API tests */
-    ctrllr: {
-      api: {
-        options: require('./test/ctrllr.config'),
-        src: [
-          'test/api/**/*.spec.js',
-          '!test/api/**/~*.spec.js'
-        ]
-      },
-      models: {
-        options: require('./test/ctrllr.config'),
-        src: [
-          'test/models/**/*.spec.js',
-          '!test/models/**/~*.spec.js'
-        ]
-      },
-      services: {
-        options: require('./test/ctrllr.config'),
-        src: [
-          'test/services/**/*.spec.js',
-          '!test/services/**/~*.spec.js'
-        ]
-      },
-      tasks: {
-        options: require('./test/ctrllr.config'),
-        src: [
-          'test/tasks/**/*.spec.js',
-          '!test/tasks/**/~*.spec.js',
-        ]
-      },
-    },
-
-    /** build documentation */
-    jsdoc: {
-      dist: {
-        src: files.server,
-        options: {
-          destination: 'docs'
-        }
-      }
-    }
-  };
-
-  /** merge files and task config, initialize grunt config */
-  grunt.initConfig(grunt.util._.extend(tasks, files));
-
-  /** default grunt task, ran with `grunt` */
-  grunt.registerTask('default', [
-    // 'concurrent:dev'
-    'nodemon:dev'
-  ]);
-
-  /** build server files */
-  grunt.registerTask('build', [
-    'jshint',
-    'todos'
-  ]);
-
-  /** runs all tests **/
-  grunt.registerTask('testAll', [
-    'shell:testCleanup',
-    // 'shell:testSetup',
-    'jasmine_node:all',
-    'shell:testCleanup'
-  ]);
-
-  /** setup server for tests */
-  grunt.registerTask('testServerStart', [
-    // 'concurrent:testServer'
-    'nodemon:test'
-  ]);
-
-  /** run api tests **/
-  grunt.registerTask('testApi', [
-    'shell:testCleanup',
-    // 'shell:testSetup',
-    'jasmine_node:api',
-    'shell:testCleanup'
-  ]);
-
-  /** run model tests **/
-  grunt.registerTask('testModels', [
-    'shell:testCleanup',
-    // 'shell:testSetup',
-    'jasmine_node:models',
-    'shell:testCleanup'
-  ]);
-
-  /** test a single file */
-  grunt.registerTask('testFile', [
-    'shell:testCleanup',
-    //'shell:testSetup',
-    'jasmine_node:singleFile',
-    'shell:testCleanup'
-  ]);
-
-  /** documents the server, bumps the version, tags it */
-  grunt.registerTask('prepareDeploy', [
-    'doc',
-    'shell:gitAddAll',
-    'bump',
-    'release',
-  ]);
-
-  /** pushes code to remote repo & live server */
-  grunt.registerTask('deploy', 'This task pushes the code to the remote repos.', function(path) {
-    var
-      args = Array.prototype.slice.call(arguments),
-      environment = args[0];
-
-    if (args.length > 1 || (args.length === 1 && ['staging', 'production'].indexOf(args[0]) === -1)) {
-      throw new Error('Can only deploy `staging` or `production`');
-    }
-
-    if (!args.length) {
-      // deploy to staging and production
-      console.log('deploying to staging and production');
-      grunt.task.run('shell:pushProduction');
-      grunt.task.run('shell:pushStaging');
-    } else if (args[0] === 'staging') {
-      console.log('deploying to staging');
-      grunt.task.run('shell:pushStaging');
-    } else if (args[0] === 'production') {
-      console.log('deploying to production');
-      grunt.task.run('shell:pushProduction');
-    }
-  });
-
-  /** parses command, runs unit tests */
-  grunt.registerTask('test', 'This task uses CTRLLR to run tests.', function(path) {
-    var
-      args = Array.prototype.slice.call(arguments),
-      testType = args[0],
-      filter = args[1];
-
-    if (!args.length) { // grunt test
-      throw new Error('Grunt alias `test` not implemented. Please specify what to test, i.e. `test:api`.');
-    } else if ([ 'api', 'models', 'services', 'tasks' ].indexOf(testType) === -1) {
-      throw new Error('Test alias not implemented. You entered `' + testType + '`');
-    }
-
-    if (filter) {
-      grunt.config('ctrllr.' + testType + '.options.filter', function(test) {
-        return test && test.tags && test.tags.indexOf(filter) > -1;
-      });
-    }
-
-    grunt.task.run('ctrllr:' + testType);
-  });
-
-  /** parses command, documents the server or just the models or api */
-  grunt.registerTask('doc', 'Documents the server', function(path) {
-    var args = Array.prototype.slice.call(arguments);
-
-    if (!args.length) { // document everything
-      grunt.task.run('shell:documentAPI');
-      grunt.task.run('shell:documentModels');
-      return;
-    }
-
-    switch (args[0]) {
-      case 'api':
-        grunt.task.run('shell:documentAPI');
-        break;
-      case 'models':
-        grunt.task.run('shell:documentModels');
-        break;
-      default:
-        throw new Error('grunt command not implemented. You entered `' + args[0] + '`');
-    }
-  });
-
-  /** start worker process */
-  grunt.registerTask('worker', [
-    'shell:worker'
-  ]);
-};
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/README.md
+++ /dev/null
@@ -1,84 +0,0 @@
-[![Stories in Ready](https://badge.waffle.io/ishmaelthedestroyer/node-seed.png?label=ready&title=Ready)](https://waffle.io/ishmaelthedestroyer/node-seed)
-
-Getting Started
----------------
-
-`grunt` starts the server, restarts the server when files change
-`grunt worker` - starts the worker service
-
-Testing
--------
-
-All tests are written in the `test` folder in JSON + JavaScript for the CTRLLR framework. Tests must end with `.spec.js` to be picked up by the `grunt-ctrllr` plugin.
-
-`grunt test` runs all tests
-`grunt test:models` runs all tests for the models, in the `test/models` folder
-`grunt test:models:user` runs all the tests for the user model in the `test/models/user` folder
-`grunt test:api` runs all the tests for the api in the `test/api` folder
-`grunt test:api:user` runs all the tests for the user endpoints in the `test/api/user` folder
-
-To find out more, find the README inside `test/README.md`
-
-Deploying
----------
-
-`grunt deploy` is used to deploy the server. This command:
-- documents the API and models
-- commits all changes
-- bumps the version in the `package.json` file
-- adds a tag
-- pushes the `master` and `staging` branches to GitHub
-- pushes the `master` and `staging` branches to Heroku
-- if you want to deploy to just staging, run `grunt deploy:staging`, if you want to deploy to production `grunt deploy:production`
-
-Structure
----------
-
-- Booting
-    - files in the `boot` folder are executed synchronously before the server boots
-    - to find out more, find the README inside `boot/README.md`
-- Configuration
-    - configuration files (API keys, passwords, etc) should be put in the `config`
-    - a folder should be made with the name of the service with five JSON files:
-        - `keys.json`
-        - `development.json`
-        - `staging.json`
-        - `test.json`
-        - `production.json`
-    - depending on the `NODE_ENV` environment variable, the configuration in the respective `development.json`, `staging.json`, `test.json`, or `production.json`.
-    - the `development.json`, `staging.json`, `test.json`, and `production.json` files aren't tracked in git, as they're ignored in the top level `.gitignore` file, so the production or staging variables must be set as environment variables on the remote server
-    - the `keys.json` file should be a key / value pair of each possible variable belonging to the configuration, but with an empty string as the value. this way, the configuration can be loaded into the `configLoader` service
-    - all configurations are available in the `configLoader` service. to access the Mongo configuration, the configuration can be loaded synchronously into a JSON object via `configLoader.get('mongo')`
-    - to find out more, find the README inside `config/README.md`
-- Documentation
-    - all generated documentation resides in the `docs` folder. any changes to this folder will be overriden on deploys
-    - documentation for the API resides in the `docs/api` folder
-    - documentation for the models reside in the `docs/models` folder
-- Middleware
-    - Express middleware such as logging, authentication, etc can be created and placed in the `middleware` folder
-    - to find out more, find the README inside `middleware/README.md`
-- Models
-    - database models are stored in the `models` folder. Mongoose is the ORM, used on top of Mongo
-    - the main src should be specified in a `src` folder within a folder with the name of the model
-    - Mongoose virtuals should be stored inside a `virtuals` folder within a folder with the name of the model
-    - pre and post hooks should be stored inside a `pre` folder within a folder with the name of the model
-    - class level functions on the model should be stored inside a `statics` folder within a folder with the name of the model
-    - instance methods should be stored inside a `methods` folder within a folder with the name of the model
-    - to find out more, find the README inside `models/README.md`
-- Routes
-    - API routes should be placed in the `routes` folder grouped by their type. for example, routes pertaining to the user model should go inside `routes/user`
-    - to find out more, find the README inside `routes/README.md`
-- Services
-    - wrappers for 3rd party APIs, utility methods, etc should be created as services, placed in the `services` folder
-    - to find out more, find the README inside `services/README.md`
-- Tasks (Background Jobs)
-    - background jobs, such as image resizing, video encoding, etc should be placed within the `tasks` folder
-    - to schedule a job, use the `worker` service, its `add` method followed by the name of the task and a JSON object with any parameters needed to execute the job, like so:
-    ```
-    worker.add('sendEmail', {
-      email: 'some@email.com',
-      subject: 'Hi',
-      body: 'foo bar',
-    });
-    ```
-    - to find out more, find the README inside `tasks/README.md`
\ No newline at end of file
deleted file mode 100644
deleted file mode 100644
--- a/node_modules/alfred/config/README.md
+++ /dev/null
@@ -1,29 +0,0 @@
-config
-======
-
-This directory is used to store credentials, api keys, and other service-specific configurations and authorization.
-
-Structure
-=========
-
-The `config` directory is in the root directory of the server. To add new configurations for a service, add a folder with the service name. Next, create 5 JSON files:
-- `development.json`
-- `production.json`
-- `staging.json`
-- `test.json`
-- `keys.json`
-
-All files in the directory will be ignored from git with the exception of the `keys.json` file. This file should contain JSON with all the expected keys for the different environments. 
-
-Upon starting the server, the JSON file that matches the server environment will be loaded as environmental variables accessible throughout the app as well as using the `configLoader` service.
-
-```
-/
-  / config
-    / service
-        - development.json
-        - production.json
-        - staging.json
-        - test.json
-        - keys.json
-```
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/core/generators/test/api/create.spec.js
+++ /dev/null
@@ -1,41 +0,0 @@
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** server utilities */
-  util = require(baseDir + '/services/util');
-
-function getPayload(ctrllr) {
-  return {
-    property1: 'foo',
-    property2: 'bar',
-  };
-}
-
-module.exports = [{
-  description: 'should require the `property1` field',
-  path: '/v1/models',
-  method: 'POST',
-  $$basicAuth: 'user-0',
-  $$send: function(ctrllr) {
-    var payload = getPayload(ctrllr);
-    delete payload.property1;
-    return payload;
-  },
-  expectStatus: 400,
-}, {
-  description: 'should return the model on success',
-  path: '/v1/models',
-  method: 'POST',
-  $$basicAuth: 'user-0',
-  $$send: getPayload,
-  expectStatus: 200,
-  $$expectKeyValue: {
-    property1: getPayload().property1,
-    property2: getPayload().property2,
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/core/generators/test/api/delete.spec.js
+++ /dev/null
@@ -1,33 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  $$url: '/v1/models/{{ model-0._id }}',
-  method: 'DEL',
-  expectStatus: 401,
-}, {
-  description: 'should return status 404 (resource not found) if the model doesn\'t exist',
-  $$url: '/v1/models/{{ randomObjectId }}',
-  method: 'DEL',
-  $$basicAuth: 'user-0',
-  expectStatus: 404,
-}, {
-  description: 'should return status 403 (forbidden) if the authenticated user tries to delete another user\'s model',
-  $$url: '/v1/models/{{ model-0._id }}',
-  method: 'DEL',
-  $$basicAuth: 'user-1',
-  expectStatus: 403,
-}, {
-  description: 'should remove the model on success',
-  $$url: '/v1/models/{{ model-0._id }}',
-  method: 'DEL',
-  $$basicAuth: 'user-0',
-  expectStatus: 204,
-  $$assertModel: {
-    $model: 'model',
-    $_id: '{{ model-0._id }}',
-    $then: function(model, ctrllr) {
-      ctrllr.assert('should have removed the model', function() {
-        return model ? false : true;
-      });
-    },
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/core/generators/test/api/find.spec.js
+++ /dev/null
@@ -1,18 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  $$url: '/v1/models/{{ model-0._id }}',
-  expectStatus: 401,
-}, {
-  description: 'should return status 404 (resource not found) if the model doesn\'t exist',
-  $$url: '/v1/models/{{ randomObjectId }}',
-  $$basicAuth: 'user-0',
-  expectStatus: 404,
-}, {
-  description: 'should return the specified model',
-  $$url: '/v1/models/{{ model-0._id }}',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  $$expectKeyValue: {
-    _id: '{{ model-0._id }}',
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/core/generators/test/api/findByCreator.spec.js
+++ /dev/null
@@ -1,23 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  $$url: '/v1/models/{{ resource-0._id }}',
-  expectStatus: 401,
-}, {
-  description: 'should return status 404 (resource not found) if the model doesn\'t exist',
-  $$url: '/v1/models/{{ randomObjectId }}',
-  $$basicAuth: 'user-0',
-  expectStatus: 404,
-}, {
-  description: 'should return status 403 (forbidden) if the model doesn\'t belong to the authenticated user',
-  $$url: '/v1/models/{{ model-0._id }}',
-  $$basicAuth: 'user-1',
-  expectStatus: 403,
-}, {
-  description: 'should return the specified model',
-  $$url: '/v1/models/{{ model-0._id }}',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  $$expectKeyValue: {
-    _id: '{{ model-0._id }}',
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/core/generators/test/api/list.spec.js
+++ /dev/null
@@ -1,13 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  method: 'GET',
-  path: '/v1/models',
-  expectStatus: 401,
-}, {
-  description: 'should return an array of models',
-  method: 'GET',
-  path: '/v1/models',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  expectArray: true,
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/core/generators/test/api/listByCreator.spec.js
+++ /dev/null
@@ -1,57 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  method: 'GET',
-  path: '/v1/models',
-  expectStatus: 401
-}, {
-  description: 'should only return models for the authenticated user',
-  method: 'GET',
-  path: '/v1/models',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  expectArray: true,
-  $$expectInArray: {
-    'should return at least 1 model where the authenticated user is the `creator`': function(value, ctrllr) {
-      return value.creator.toString() === ctrllr.getStore().get('user-0')._id.toString();
-    }
-  },
-  $$expectNone: {
-    'should NOT return any models where the authenticated user is NOT the `creator`': function(value, ctrllr) {
-      return value.creator.toString() !== ctrllr.getStore().get('user-0')._id.toString();
-    }
-  }
-}, {
-  description: 'should only return read models if `property1=true` is set in the query parameters',
-  method: 'GET',
-  path: '/v1/models?property1=true',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  expectArray: true,
-  $$expectInArray: {
-    'should return at least 1 model where `property1=true`': function(value, ctrllr) {
-      return value.property1 === true;
-    }
-  },
-  $$expectNone: {
-    'should NOT return any models where `property1=false`': function(value, ctrllr) {
-      return value.property1 === false;
-    }
-  }
-}, {
-  description: 'should only return unread models if `property1=false` is set in the query parameters',
-  method: 'GET',
-  path: '/v1/models?property1=false',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  expectArray: true,
-  $$expectInArray: {
-    'should return at least 1 model where `property1=false`': function(value, ctrllr) {
-      return value.property1 === false;
-    }
-  },
-  $$expectNone: {
-    'should NOT return any models where `property1=true`': function(value, ctrllr) {
-      return value.property1 === true;
-    }
-  }
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/core/generators/test/api/update.spec.js
+++ /dev/null
@@ -1,68 +0,0 @@
-/* ==========================================================================
-   Local variables, module dependencies
-   ========================================================================== */
-
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** server utilities */
-  util = require(baseDir + '/services/util');
-
-/* ==========================================================================
-   Exports - helper functions
-   ========================================================================== */
-
-function getPayload(ctrllr) {
-  return {
-    property1: util.random(10),
-  };
-}
-
-/* ==========================================================================
-   Exports - test declaration
-   ========================================================================== */
-
-module.exports = [{
-  description: 'should require authorization',
-  $$url: '/v1/models/{{ model-0._id }}',
-  method: 'PUT',
-  $$send: getPayload,
-  expectStatus: 401,
-}, {
-  description: 'should return status 404 (resource not found) if the user doesn\'t exist',
-  $$url: '/v1/models/{{ randomObjectId }}',
-  method: 'PUT',
-  $$basicAuth: 'user-0',
-  $$send: getPayload,
-  expectStatus: 404,
-}, {
-  description: 'should return status 403 (forbidden) if the authenticated user tries to update another user\'s model',
-  $$url: '/v1/models/{{ model-0._id }}',
-  method: 'PUT',
-  $$basicAuth: 'user-1',
-  $$send: getPayload,
-  expectStatus: 403,
-}, {
-  description: 'should update specified properties',
-  $$url: '/v1/models/{{ model-0._id }}',
-  method: 'PUT',
-  $$basicAuth: 'user-0',
-  $$send: getPayload,
-  expectStatus: 200,
-  $$expectKeyValue: {
-    // use "<% %>" for running custom javascript with interpolation
-    // property1: '<%"{{ payload.firstName }} {{ payload.lastName }}".toLowerCase()%>',
-    property1: '{{ payload.property1 }}',
-  },
-  /*
-  after: function(ctrllr, response) {
-    console.log('response.status', response.status);
-    console.log('response.body', response.body);
-  },
-  */
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/docs/api/auth/login.md
+++ /dev/null
@@ -1,38 +0,0 @@
-Logs in a user by creating a session.  
-  
-*method:* `POST`  
-*path:* `/v1/login`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-- *email*  
-  - type: `string`  
-- *type*  
-  - type: `string`  
-  - REQUIRED  
-  - enum  
-    - web  
-    - ios  
-    - android  
-- *facebookId*  
-  - type: `string`  
-- *facebookToken*  
-  - type: `string`  
-- *password*  
-  - type: `string`  
-- *pushToken*  
-  - type: `string`  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
-- should NOT require authorization  
-- should allow email / password login  
-- should allow setting the `pushToken` on login  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/auth/logout.md
+++ /dev/null
@@ -1,19 +0,0 @@
-Deletes a user's session.  
-  
-*method:* `GET`  
-*path:* `/v1/logout`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-`none`  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/auth/self.md
+++ /dev/null
@@ -1,19 +0,0 @@
-Returns the authenticated user.  
-  
-*method:* `GET`  
-*path:* `/v1/self`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-`none`  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/notification/list.md
+++ /dev/null
@@ -1,26 +0,0 @@
-This endpoint retrieves a user's notifications.  
-  
-*method:* `GET`  
-*path:* `/v1/notifications`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-`none`  
-  
-**Query**  
-  
-- *isRead*  
-  - enum  
-    - true  
-    - false  
-  
-Specifications  
---------------  
-  
-- should require authorization  
-- should only return notifications for the authenticated user  
-- should only return read notifications if `isRead=true` is set in the query parameters  
-- should only return unread notifications if `isRead=false` is set in the query parameters  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/notification/markAsRead.md
+++ /dev/null
@@ -1,26 +0,0 @@
-This endpoint is used to mark one or more notifications as read.  
-  
-*method:* `PATCH`  
-*path:* `/v1/notifications`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-- *ids*  
-  - REQUIRED  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
-- should require authorization  
-- should return status 403 (forbidden) if one or more of the notifications in the list don't belong to the authenticated user  
-- should return status 403 (forbidden) if all the notifications in the list don't belong to the authenticated user  
-- should return status 304 (resource not modified) if the `ids` array is empty  
-- should mark the specified notifications as read on success  
-- should NOT mark notifications not specified as read on success  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/paymentMethod/create.md
+++ /dev/null
@@ -1,31 +0,0 @@
-Creates a payment method.  
-  
-*method:* `POST`  
-*path:* `/v1/paymentMethods`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-- *nonce*  
-  - type: `string`  
-  
-**Query**  
-  
-`none`  
-  
-Returns  
-```  
-PaymentMethod  
-```  
-  
-Specifications  
---------------  
-  
-- should require authorization  
-- should create a payment method with the authenticated user as the creator  
-- should return a payment method that can be used for transactions  
-- should set the new payment method as the default payment method  
-- should set all other payment methods belonging to the user to `isDefault=false  
-- should NOT affect the default status of any other users' payment methods  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/paymentMethod/delete.md
+++ /dev/null
@@ -1,24 +0,0 @@
-Deletes a users' payment method.  
-  
-*method:* `DELETE`  
-*path:* `/v1/paymentMethods/:id`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-`none`  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
-- should require authorization  
-- should return status 404 (resource not found) if the payment method doesn't exist  
-- should return status 403 (forbidden) if a user tries to delete a payment method they don't own  
-- should delete the payment method on success  
-- should delete the payment method from braintree on success  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/paymentMethod/list.md
+++ /dev/null
@@ -1,21 +0,0 @@
-Lists all payment methods belonging to the authenticated user.  
-  
-*method:* `GET`  
-*path:* `/v1/paymentMethods`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-`none`  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
-- should require authorization  
-- should only return the authenticated users' paymentMethods  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/paymentMethod/makeDefault.md
+++ /dev/null
@@ -1,26 +0,0 @@
-This endpoint changes the authenticated user's default payment method.  
-  
-*method:* `POST`  
-*path:* `/v1/paymentMethods/:id/makeDefault`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-`none`  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
-- should require authorization  
-- should return status 404 (resource not found) if the payment method doesn't exist  
-- should return status 403 (forbidden) if a user tries to access a payment method that doesn't belong to them  
-- should return status 304 (resource not modified) if the payment method is already the default payment method  
-- should set the payment method as the default payment method  
-- should set all other payment methods belonging to the user to `isDefault=false  
-- should NOT affect the default status of any other users' payment methods  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/resource/completeUpload.md
+++ /dev/null
@@ -1,20 +0,0 @@
-Used to signify the completion of an upload of a file belonging to a resources  
-  
-*method:* `POST`  
-*path:* `/v1/resources/:id/files/:fileId/completeUpload`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-`none`  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
-- should require authorization  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/resource/create.md
+++ /dev/null
@@ -1,47 +0,0 @@
-Creates a resource.  
-  
-*method:* `POST`  
-*path:* `/v1/resources`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-- *name*  
-  - type: `string`  
-- *description*  
-  - type: `string`  
-- *type*  
-  - type: `string`  
-  - REQUIRED  
-  - enum  
-    - image/jpeg  
-    - image/png  
-    - image/gif  
-- *size*  
-  - type: `number`  
-  - REQUIRED  
-  
-**Query**  
-  
-- *acl*  
-- *addPolicy*  
-  
-Returns  
-```  
-Resource  
-```  
-  
-Specifications  
---------------  
-  
-- should require authorization  
-- should return 400 (bad request) if `type` not sent  
-- should return 400 (bad request) if `size` not sent  
-- should succeed if `name` or `description` not sent  
-- should create a resource with the specified parameters  
-- should create a resource with a nested file object  
-- should return a nested file with an `uploadUrl` that can be uploaded to  
-- should provide an aws policy when specifying the `addPolicy` query parameter  
-- should allow specifying the acl as a query parameter  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/resource/delete.md
+++ /dev/null
@@ -1,19 +0,0 @@
-Deletes a resource.  
-  
-*method:* `DELETE`  
-*path:* `/v1/resources/:id`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-`none`  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/resource/find.md
+++ /dev/null
@@ -1,19 +0,0 @@
-Finds a resource.  
-  
-*method:* `GET`  
-*path:* `/v1/resources/:id`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-`none`  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/resource/list.md
+++ /dev/null
@@ -1,21 +0,0 @@
-Lists all resources belonging to the requesting user.  
-  
-*method:* `GET`  
-*path:* `/v1/resources`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-`none`  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
-- should require authorization  
-- should only return the authenticated users' resources  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/resource/update.md
+++ /dev/null
@@ -1,20 +0,0 @@
-Updates a single resource.  
-  
-*method:* `PUT`  
-*path:* `/v1/resources/:id`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-- *name*  
-- *description*  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/self/requestBraintreeToken.md
+++ /dev/null
@@ -1,26 +0,0 @@
-This endpoint generates a Braintree client token for creating a payment method.  
-  
-*method:* `GET`  
-*path:* `/v1/self/requestPaymentToken`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-`none`  
-  
-**Query**  
-  
-`none`  
-  
-Returns  
-```  
-{ token: String }  
-```  
-  
-Specifications  
---------------  
-  
-- should NOT require authorization  
-- should return a valid Braintree token that can be used to create a payment method  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/self/updateSessionPushToken.md
+++ /dev/null
@@ -1,31 +0,0 @@
-This endpoint is used to update a session's push token.  
-  
-*method:* `PUT`  
-*path:* `/v1/self/sessions/:id`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-- *pushToken*  
-  - type: `string`  
-  - REQUIRED  
-  
-**Query**  
-  
-`none`  
-  
-Returns  
-```  
-User  
-```  
-  
-Specifications  
---------------  
-  
-- should require authorization  
-- should return status 404 (resource not found) if the session id doesn't exist  
-- should return status 404 (resource nto found) if the session id doesn't belong to the user  
-- should update the session's push token on success  
-- should NOT update any other session push tokens on the user  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/user/create.md
+++ /dev/null
@@ -1,32 +0,0 @@
-Creates a user.  
-  
-*method:* `POST`  
-*path:* `/v1/users`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-- *email*  
-  - type: `string`  
-  - REQUIRED  
-- *username*  
-  - type: `string`  
-- *password*  
-  - type: `string`  
-- *firstName*  
-- *lastName*  
-- *phone*  
-- *bio*  
-- *avatarUrl*  
-- *facebookId*  
-- *facebookToken*  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/user/delete.md
+++ /dev/null
@@ -1,19 +0,0 @@
-Deletes a single user.  
-  
-*method:* `DELETE`  
-*path:* `/v1/users/:id`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-`none`  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/user/find.md
+++ /dev/null
@@ -1,19 +0,0 @@
-Finds a single user.  
-  
-*method:* `GET`  
-*path:* `/v1/users/:id`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-`none`  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/user/list.md
+++ /dev/null
@@ -1,21 +0,0 @@
-Lists all the users.  
-  
-*method:* `GET`  
-*path:* `/v1/users`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-`none`  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
-- should require authorization  
-- should return an array of users  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/user/update.md
+++ /dev/null
@@ -1,25 +0,0 @@
-Updates a single user's account.  
-  
-*method:* `PUT`  
-*path:* `/v1/users/:id`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-- *username*  
-  - type: `string`  
-- *firstName*  
-- *lastName*  
-- *phone*  
-- *bio*  
-- *avatarUrl*  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/verify/requestPhone.md
+++ /dev/null
@@ -1,21 +0,0 @@
-Texts a user a verification code.  
-  
-*method:* `POST`  
-*path:* `/v1/self/verify/phone`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-- *phoneNumber*  
-  - type: `string`  
-  - REQUIRED  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
deleted file mode 100644
--- a/node_modules/alfred/docs/api/verify/verify.md
+++ /dev/null
@@ -1,21 +0,0 @@
-Uses a previously sent code to verify a user account.  
-  
-*method:* `POST`  
-*path:* `/v1/self/verify`  
-  
-Parameters  
------------  
-  
-**Body**  
-  
-- *code*  
-  - type: `string`  
-  - REQUIRED  
-  
-**Query**  
-  
-`none`  
-  
-Specifications  
---------------  
-  
deleted file mode 100644
--- a/node_modules/alfred/docs/models/file.md
+++ /dev/null
@@ -1,48 +0,0 @@
-**createdDate**  
--  Date  
--  defaults to `current time`  
-  
-**meta**  
--  Mixed  
-  
-**key**  
--  String  
-- *REQUIRED*  
-  
-**type**  
--  String  
-- *REQUIRED*  
--  enum  
-  - original  
-  - thumbnail  
-  - optimized  
-  - mp4  
-  - webm  
-  - png  
-  - jpg  
--  defaults to `original`  
-  
-**size**  
--  Number  
-  
-**acl**  
--  String  
-  
-**url**  
--  String  
-  
-**status**  
--  String  
--  enum  
-  - uploading  
-  - processing  
-  - ready  
-  - error  
--  defaults to `uploading`  
-  
-**_id**  
--  ObjectID  
-  
-**__v**  
--  Number  
-  
deleted file mode 100644
--- a/node_modules/alfred/docs/models/follow.md
+++ /dev/null
@@ -1,19 +0,0 @@
-**createdDate**  
--  Date  
--  defaults to `current time`  
-  
-**creator**  
--  ObjectID  
-- *REQUIRED*  
--  reference to `User`  
-  
-**targetUser**  
--  ObjectID  
--  reference to `User`  
-  
-**_id**  
--  ObjectID  
-  
-**__v**  
--  Number  
-  
deleted file mode 100644
--- a/node_modules/alfred/docs/models/notification.md
+++ /dev/null
@@ -1,28 +0,0 @@
-**createdDate**  
--  Date  
--  defaults to `current time`  
-  
-**to**  
--  ObjectID  
-- *REQUIRED*  
--  reference to `User`  
-  
-**from**  
--  ObjectID  
--  reference to `User`  
-  
-**type**  
--  String  
-- *REQUIRED*  
--  enum  
-  - follow  
-  
-**isRead**  
--  Boolean  
-  
-**_id**  
--  ObjectID  
-  
-**__v**  
--  Number  
-  
deleted file mode 100644
--- a/node_modules/alfred/docs/models/paymentMethod.md
+++ /dev/null
@@ -1,30 +0,0 @@
-**createdDate**  
--  Date  
--  defaults to `current time`  
-  
-**creator**  
--  ObjectID  
--  reference to `User`  
-  
-**isDefault**  
--  Boolean  
-  
-**imageUrl**  
--  String  
-  
-**type**  
--  String  
-  
-**identifier**  
--  String  
-  
-**braintreeToken**  
--  String  
-- *REQUIRED*  
-  
-**_id**  
--  ObjectID  
-  
-**__v**  
--  Number  
-  
deleted file mode 100644
--- a/node_modules/alfred/docs/models/resource.md
+++ /dev/null
@@ -1,25 +0,0 @@
-**creator**  
--  ObjectID  
--  reference to `User`  
-  
-**createdDate**  
--  Date  
--  defaults to `current time`  
-  
-**name**  
--  String  
-  
-**description**  
--  String  
-  
-**files**  
--  Array  
--  defaults to `empty array`  
--  reference to `File`  
-  
-**_id**  
--  ObjectID  
-  
-**__v**  
--  Number  
-  
deleted file mode 100644
--- a/node_modules/alfred/docs/models/session.md
+++ /dev/null
@@ -1,25 +0,0 @@
-**createdDate**  
--  Date  
--  defaults to `current time`  
-  
-**lastActiveDate**  
--  Date  
--  defaults to `current time`  
-  
-**type**  
--  String  
-- *REQUIRED*  
--  enum  
-  - ios  
-  - android  
-  - web  
-  
-**pushToken**  
--  String  
-  
-**_id**  
--  ObjectID  
-  
-**__v**  
--  Number  
-  
deleted file mode 100644
--- a/node_modules/alfred/docs/models/user.md
+++ /dev/null
@@ -1,75 +0,0 @@
-**createdDate**  
--  Date  
--  defaults to `current time`  
-  
-**username**  
--  String  
-  
-**email**  
--  String  
-- *REQUIRED*  
-  
-**password**  
--  String  
-  
-**firstName**  
--  String  
-  
-**lastName**  
--  String  
-  
-**fullName**  
--  String  
-- *REQUIRED*  
-  
-**phone**  
--  String  
-  
-**bio**  
--  String  
-  
-**facebookId**  
--  String  
-  
-**facebookToken**  
--  String  
-  
-**birthday**  
--  Date  
-  
-**avatarUrl**  
--  String  
-  
-**numFollowers**  
--  Number  
-  
-**numFollowing**  
--  Number  
-  
-**badges**  
--  Array  
-  
-**braintreeCustomerId**  
--  String  
-  
-**verificationCode**  
--  String  
-  
-**status**  
--  String  
--  enum  
-  - active  
-  - banned  
-  - deleted  
--  defaults to `active`  
-  
-**sessions**  
--  Array  
--  reference to `Session`  
-  
-**_id**  
--  ObjectID  
-  
-**__v**  
--  Number  
-  
deleted file mode 100644
deleted file mode 100644
--- a/node_modules/alfred/node_modules/async/CHANGELOG.md
+++ /dev/null
@@ -1,125 +0,0 @@
-# v1.5.2
-- Allow using `"consructor"` as an argument in `memoize` (#998)
-- Give a better error messsage when `auto` dependency checking fails (#994)
-- Various doc updates (#936, #956, #979, #1002)
-
-# v1.5.1
-- Fix issue with `pause` in `queue` with concurrency enabled (#946)
-- `while` and `until` now pass the final result to callback (#963)
-- `auto` will properly handle concurrency when there is no callback (#966)
-- `auto` will now  properly stop execution when an error occurs (#988, #993)
-- Various doc fixes (#971, #980)
-
-# v1.5.0
-
-- Added `transform`, analogous to [`_.transform`](http://lodash.com/docs#transform) (#892)
-- `map` now returns an object when an object is passed in, rather than array with non-numeric keys. `map` will begin always returning an array with numeric indexes in the next major release. (#873)
-- `auto` now accepts an optional `concurrency` argument to limit the number of  running tasks (#637)
-- Added `queue#workersList()`, to retrieve the list  of currently running tasks. (#891)
-- Various code simplifications (#896, #904)
-- Various doc fixes :scroll: (#890, #894, #903, #905, #912)
-
-# v1.4.2
-
-- Ensure coverage files don't get published on npm (#879)
-
-# v1.4.1
-
-- Add in overlooked `detectLimit` method (#866)
-- Removed unnecessary files from npm releases (#861)
-- Removed usage of a reserved word to prevent :boom: in older environments (#870)
-
-# v1.4.0
-
-- `asyncify` now supports promises (#840)
-- Added `Limit` versions of `filter` and `reject` (#836)
-- Add `Limit` versions of `detect`, `some` and `every` (#828, #829)
-- `some`, `every` and `detect` now short circuit early (#828, #829)
-- Improve detection of the global object (#804), enabling use in WebWorkers
-- `whilst` now called with arguments from iterator (#823)
-- `during` now gets called with arguments from iterator (#824)
-- Code simplifications and optimizations aplenty ([diff](https://github.com/caolan/async/compare/v1.3.0...v1.4.0))
-
-
-# v1.3.0
-
-New Features:
-- Added `constant`
-- Added `asyncify`/`wrapSync` for making sync functions work with callbacks. (#671, #806)
-- Added `during` and `doDuring`, which are like `whilst` with an async truth test. (#800)
-- `retry` now accepts an `interval` parameter to specify a delay between retries. (#793)
-- `async` should work better in Web Workers due to better `root` detection (#804)
-- Callbacks are now optional in `whilst`, `doWhilst`, `until`, and `doUntil` (#642)
-- Various internal updates (#786, #801, #802, #803)
-- Various doc fixes (#790, #794)
-
-Bug Fixes:
-- `cargo` now exposes the `payload` size, and `cargo.payload` can be changed on the fly after the `cargo` is created. (#740, #744, #783)
-
-
-# v1.2.1
-
-Bug Fix:
-
-- Small regression with synchronous iterator behavior in `eachSeries` with a 1-element array.  Before 1.1.0, `eachSeries`'s callback was called on the same tick, which this patch restores.  In 2.0.0, it will be called on the next tick.  (#782)
-
-
-# v1.2.0
-
-New Features:
-
-- Added `timesLimit` (#743)
-- `concurrency` can be changed after initialization in `queue` by setting `q.concurrency`.  The new concurrency will be reflected the next time a task is processed. (#747, #772)
-
-Bug Fixes:
-
-- Fixed a regression in `each` and family with empty arrays that have additional properties. (#775, #777)
-
-
-# v1.1.1
-
-Bug Fix:
-
-- Small regression with synchronous iterator behavior in `eachSeries` with a 1-element array.  Before 1.1.0, `eachSeries`'s callback was called on the same tick, which this patch restores.  In 2.0.0, it will be called on the next tick.  (#782) 
-
-
-# v1.1.0
-
-New Features:
-
-- `cargo` now supports all of the same methods and event callbacks as `queue`.
-- Added `ensureAsync` - A wrapper that ensures an async function calls its callback on a later tick. (#769)
-- Optimized `map`, `eachOf`, and `waterfall` families of functions
-- Passing a `null` or `undefined` array to `map`, `each`, `parallel` and families will be treated as an empty array (#667).
-- The callback is now optional for the composed results of `compose` and `seq`. (#618)
-- Reduced file size by 4kb, (minified version by 1kb) 
-- Added code coverage through `nyc` and `coveralls` (#768)
-
-Bug Fixes:
-
-- `forever` will no longer stack overflow with a synchronous iterator (#622)
-- `eachLimit` and other limit functions will stop iterating once an error occurs (#754)
-- Always pass `null` in callbacks when there is no error (#439)
-- Ensure proper conditions when calling `drain()` after pushing an empty data set to a queue (#668)
-- `each` and family will properly handle an empty array (#578)
-- `eachSeries` and family will finish if the underlying array is modified during execution (#557)
-- `queue` will throw if a non-function is passed to `q.push()` (#593)
-- Doc fixes (#629, #766)
-
-
-# v1.0.0
-
-No known breaking changes, we are simply complying with semver from here on out.
-
-Changes:
-
-- Start using a changelog!
-- Add `forEachOf` for iterating over Objects (or to iterate Arrays with indexes available) (#168 #704 #321)
-- Detect deadlocks in `auto` (#663)
-- Better support for require.js (#527)
-- Throw if queue created with concurrency `0` (#714)
-- Fix unneeded iteration in `queue.resume()` (#758)
-- Guard against timer mocking overriding `setImmediate` (#609 #611)
-- Miscellaneous doc fixes (#542 #596 #615 #628 #631 #690 #729)
-- Use single noop function internally (#546)
-- Optimize internal `_each`, `_map` and `_keys` functions.
deleted file mode 100644
--- a/node_modules/alfred/node_modules/async/README.md
+++ /dev/null
@@ -1,1877 +0,0 @@
-# Async.js
-
-[![Build Status via Travis CI](https://travis-ci.org/caolan/async.svg?branch=master)](https://travis-ci.org/caolan/async)
-[![NPM version](http://img.shields.io/npm/v/async.svg)](https://www.npmjs.org/package/async)
-[![Coverage Status](https://coveralls.io/repos/caolan/async/badge.svg?branch=master)](https://coveralls.io/r/caolan/async?branch=master)
-[![Join the chat at https://gitter.im/caolan/async](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/caolan/async?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
-
-
-Async is a utility module which provides straight-forward, powerful functions
-for working with asynchronous JavaScript. Although originally designed for
-use with [Node.js](http://nodejs.org) and installable via `npm install async`,
-it can also be used directly in the browser.
-
-Async is also installable via:
-
-- [bower](http://bower.io/): `bower install async`
-- [component](https://github.com/component/component): `component install
-  caolan/async`
-- [jam](http://jamjs.org/): `jam install async`
-- [spm](http://spmjs.io/): `spm install async`
-
-Async provides around 20 functions that include the usual 'functional'
-suspects (`map`, `reduce`, `filter`, `each`…) as well as some common patterns
-for asynchronous control flow (`parallel`, `series`, `waterfall`…). All these
-functions assume you follow the Node.js convention of providing a single
-callback as the last argument of your `async` function.
-
-
-## Quick Examples
-
-```javascript
-async.map(['file1','file2','file3'], fs.stat, function(err, results){
-    // results is now an array of stats for each file
-});
-
-async.filter(['file1','file2','file3'], fs.exists, function(results){
-    // results now equals an array of the existing files
-});
-
-async.parallel([
-    function(){ ... },
-    function(){ ... }
-], callback);
-
-async.series([
-    function(){ ... },
-    function(){ ... }
-]);
-```
-
-There are many more functions available so take a look at the docs below for a
-full list. This module aims to be comprehensive, so if you feel anything is
-missing please create a GitHub issue for it.
-
-## Common Pitfalls <sub>[(StackOverflow)](http://stackoverflow.com/questions/tagged/async.js)</sub>
-### Synchronous iteration functions
-
-If you get an error like `RangeError: Maximum call stack size exceeded.` or other stack overflow issues when using async, you are likely using a synchronous iterator.  By *synchronous* we mean a function that calls its callback on the same tick in the javascript event loop, without doing any I/O or using any timers.  Calling many callbacks iteratively will quickly overflow the stack. If you run into this issue, just defer your callback with `async.setImmediate` to start a new call stack on the next tick of the event loop.
-
-This can also arise by accident if you callback early in certain cases:
-
-```js
-async.eachSeries(hugeArray, function iterator(item, callback) {
-  if (inCache(item)) {
-    callback(null, cache[item]); // if many items are cached, you'll overflow
-  } else {
-    doSomeIO(item, callback);
-  }
-}, function done() {
-  //...
-});
-```
-
-Just change it to:
-
-```js
-async.eachSeries(hugeArray, function iterator(item, callback) {
-  if (inCache(item)) {
-    async.setImmediate(function () {
-      callback(null, cache[item]);
-    });
-  } else {
-    doSomeIO(item, callback);
-  //...
-```
-
-Async guards against synchronous functions in some, but not all, cases.  If you are still running into stack overflows, you can defer as suggested above, or wrap functions with [`async.ensureAsync`](#ensureAsync)  Functions that are asynchronous by their nature do not have this problem and don't need the extra callback deferral.
-
-If JavaScript's event loop is still a bit nebulous, check out [this article](http://blog.carbonfive.com/2013/10/27/the-javascript-event-loop-explained/) or [this talk](http://2014.jsconf.eu/speakers/philip-roberts-what-the-heck-is-the-event-loop-anyway.html) for more detailed information about how it works.
-
-
-### Multiple callbacks
-
-Make sure to always `return` when calling a callback early, otherwise you will cause multiple callbacks and unpredictable behavior in many cases.
-
-```js
-async.waterfall([
-    function (callback) {
-        getSomething(options, function (err, result) {
-          if (err) {
-            callback(new Error("failed getting something:" + err.message));
-            // we should return here
-          }
-          // since we did not return, this callback still will be called and
-          // `processData` will be called twice
-          callback(null, result);
-        });
-    },
-    processData
-], done)
-```
-
-It is always good practice to `return callback(err, result)`  whenever a callback call is not the last statement of a function.
-
-
-### Binding a context to an iterator
-
-This section is really about `bind`, not about `async`. If you are wondering how to
-make `async` execute your iterators in a given context, or are confused as to why
-a method of another library isn't working as an iterator, study this example:
-
-```js
-// Here is a simple object with an (unnecessarily roundabout) squaring method
-var AsyncSquaringLibrary = {
-  squareExponent: 2,
-  square: function(number, callback){
-    var result = Math.pow(number, this.squareExponent);
-    setTimeout(function(){
-      callback(null, result);
-    }, 200);
-  }
-};
-
-async.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){
-  // result is [NaN, NaN, NaN]
-  // This fails because the `this.squareExponent` expression in the square
-  // function is not evaluated in the context of AsyncSquaringLibrary, and is
-  // therefore undefined.
-});
-
-async.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){
-  // result is [1, 4, 9]
-  // With the help of bind we can attach a context to the iterator before
-  // passing it to async. Now the square function will be executed in its
-  // 'home' AsyncSquaringLibrary context and the value of `this.squareExponent`
-  // will be as expected.
-});
-```
-
-## Download
-
-The source is available for download from
-[GitHub](https://github.com/caolan/async/blob/master/lib/async.js).
-Alternatively, you can install using Node Package Manager (`npm`):
-
-    npm install async
-
-As well as using Bower:
-
-    bower install async
-
-__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed
-
-## In the Browser
-
-So far it's been tested in IE6, IE7, IE8, FF3.6 and Chrome 5.
-
-Usage:
-
-```html
-<script type="text/javascript" src="async.js"></script>
-<script type="text/javascript">
-
-    async.map(data, asyncProcess, function(err, results){
-        alert(results);
-    });
-
-</script>
-```
-
-## Documentation
-
-Some functions are also available in the following forms:
-* `<name>Series` - the same as `<name>` but runs only a single async operation at a time
-* `<name>Limit` - the same as `<name>` but runs a maximum of `limit` async operations at a time
-
-### Collections
-
-* [`each`](#each), `eachSeries`, `eachLimit`
-* [`forEachOf`](#forEachOf), `forEachOfSeries`, `forEachOfLimit`
-* [`map`](#map), `mapSeries`, `mapLimit`
-* [`filter`](#filter), `filterSeries`, `filterLimit`
-* [`reject`](#reject), `rejectSeries`, `rejectLimit`
-* [`reduce`](#reduce), [`reduceRight`](#reduceRight)
-* [`detect`](#detect), `detectSeries`, `detectLimit`
-* [`sortBy`](#sortBy)
-* [`some`](#some), `someLimit`
-* [`every`](#every), `everyLimit`
-* [`concat`](#concat), `concatSeries`
-
-### Control Flow
-
-* [`series`](#seriestasks-callback)
-* [`parallel`](#parallel), `parallelLimit`
-* [`whilst`](#whilst), [`doWhilst`](#doWhilst)
-* [`until`](#until), [`doUntil`](#doUntil)
-* [`during`](#during), [`doDuring`](#doDuring)
-* [`forever`](#forever)
-* [`waterfall`](#waterfall)
-* [`compose`](#compose)
-* [`seq`](#seq)
-* [`applyEach`](#applyEach), `applyEachSeries`
-* [`queue`](#queue), [`priorityQueue`](#priorityQueue)
-* [`cargo`](#cargo)
-* [`auto`](#auto)
-* [`retry`](#retry)
-* [`iterator`](#iterator)
-* [`times`](#times), `timesSeries`, `timesLimit`
-
-### Utils
-
-* [`apply`](#apply)
-* [`nextTick`](#nextTick)
-* [`memoize`](#memoize)
-* [`unmemoize`](#unmemoize)
-* [`ensureAsync`](#ensureAsync)
-* [`constant`](#constant)
-* [`asyncify`](#asyncify)
-* [`wrapSync`](#wrapSync)
-* [`log`](#log)
-* [`dir`](#dir)
-* [`noConflict`](#noConflict)
-
-## Collections
-
-<a name="forEach" />
-<a name="each" />
-### each(arr, iterator, [callback])
-
-Applies the function `iterator` to each item in `arr`, in parallel.
-The `iterator` is called with an item from the list, and a callback for when it
-has finished. If the `iterator` passes an error to its `callback`, the main
-`callback` (for the `each` function) is immediately called with the error.
-
-Note, that since this function applies `iterator` to each item in parallel,
-there is no guarantee that the iterator functions will complete in order.
-
-__Arguments__
-
-* `arr` - An array to iterate over.
-* `iterator(item, callback)` - A function to apply to each item in `arr`.
-  The iterator is passed a `callback(err)` which must be called once it has
-  completed. If no error has occurred, the `callback` should be run without
-  arguments or with an explicit `null` argument.  The array index is not passed
-  to the iterator.  If you need the index, use [`forEachOf`](#forEachOf).
-* `callback(err)` - *Optional* A callback which is called when all `iterator` functions
-  have finished, or an error occurs.
-
-__Examples__
-
-
-```js
-// assuming openFiles is an array of file names and saveFile is a function
-// to save the modified contents of that file:
-
-async.each(openFiles, saveFile, function(err){
-    // if any of the saves produced an error, err would equal that error
-});
-```
-
-```js
-// assuming openFiles is an array of file names
-
-async.each(openFiles, function(file, callback) {
-
-  // Perform operation on file here.
-  console.log('Processing file ' + file);
-
-  if( file.length > 32 ) {
-    console.log('This file name is too long');
-    callback('File name too long');
-  } else {
-    // Do work to process file here
-    console.log('File processed');
-    callback();
-  }
-}, function(err){
-    // if any of the file processing produced an error, err would equal that error
-    if( err ) {
-      // One of the iterations produced an error.
-      // All processing will now stop.
-      console.log('A file failed to process');
-    } else {
-      console.log('All files have been processed successfully');
-    }
-});
-```
-
-__Related__
-
-* eachSeries(arr, iterator, [callback])
-* eachLimit(arr, limit, iterator, [callback])
-
----------------------------------------
-
-<a name="forEachOf" />
-<a name="eachOf" />
-
-### forEachOf(obj, iterator, [callback])
-
-Like `each`, except that it iterates over objects, and passes the key as the second argument to the iterator.
-
-__Arguments__
-
-* `obj` - An object or array to iterate over.
-* `iterator(item, key, callback)` - A function to apply to each item in `obj`.
-The `key` is the item's key, or index in the case of an array. The iterator is
-passed a `callback(err)` which must be called once it has completed. If no
-error has occurred, the callback should be run without arguments or with an
-explicit `null` argument.
-* `callback(err)` - *Optional* A callback which is called when all `iterator` functions have finished, or an error occurs.
-
-__Example__
-
-```js
-var obj = {dev: "/dev.json", test: "/test.json", prod: "/prod.json"};
-var configs = {};
-
-async.forEachOf(obj, function (value, key, callback) {
-  fs.readFile(__dirname + value, "utf8", function (err, data) {
-    if (err) return callback(err);
-    try {
-      configs[key] = JSON.parse(data);
-    } catch (e) {
-      return callback(e);
-    }
-    callback();
-  })
-}, function (err) {
-  if (err) console.error(err.message);
-  // configs is now a map of JSON data
-  doSomethingWith(configs);
-})
-```
-
-__Related__
-
-* forEachOfSeries(obj, iterator, [callback])
-* forEachOfLimit(obj, limit, iterator, [callback])
-
----------------------------------------
-
-<a name="map" />
-### map(arr, iterator, [callback])
-
-Produces a new array of values by mapping each value in `arr` through
-the `iterator` function. The `iterator` is called with an item from `arr` and a
-callback for when it has finished processing. Each of these callback takes 2 arguments:
-an `error`, and the transformed item from `arr`. If `iterator` passes an error to its
-callback, the main `callback` (for the `map` function) is immediately called with the error.
-
-Note, that since this function applies the `iterator` to each item in parallel,
-there is no guarantee that the `iterator` functions will complete in order.
-However, the results array will be in the same order as the original `arr`.
-
-__Arguments__
-
-* `arr` - An array to iterate over.
-* `iterator(item, callback)` - A function to apply to each item in `arr`.
-  The iterator is passed a `callback(err, transformed)` which must be called once
-  it has completed with an error (which can be `null`) and a transformed item.
-* `callback(err, results)` - *Optional* A callback which is called when all `iterator`
-  functions have finished, or an error occurs. Results is an array of the
-  transformed items from the `arr`.
-
-__Example__
-
-```js
-async.map(['file1','file2','file3'], fs.stat, function(err, results){
-    // results is now an array of stats for each file
-});
-```
-
-__Related__
-* mapSeries(arr, iterator, [callback])
-* mapLimit(arr, limit, iterator, [callback])
-
----------------------------------------
-
-<a name="select" />
-<a name="filter" />
-### filter(arr, iterator, [callback])
-
-__Alias:__ `select`
-
-Returns a new array of all the values in `arr` which pass an async truth test.
-_The callback for each `iterator` call only accepts a single argument of `true` or
-`false`; it does not accept an error argument first!_ This is in-line with the
-way node libraries work with truth tests like `fs.exists`. This operation is
-performed in parallel, but the results array will be in the same order as the
-original.
-
-__Arguments__
-
-* `arr` - An array to iterate over.
-* `iterator(item, callback)` - A truth test to apply to each item in `arr`.
-  The `iterator` is passed a `callback(truthValue)`, which must be called with a
-  boolean argument once it has completed.
-* `callback(results)` - *Optional* A callback which is called after all the `iterator`
-  functions have finished.
-
-__Example__
-
-```js
-async.filter(['file1','file2','file3'], fs.exists, function(results){
-    // results now equals an array of the existing files
-});
-```
-
-__Related__
-
-* filterSeries(arr, iterator, [callback])
-* filterLimit(arr, limit, iterator, [callback])
-
----------------------------------------
-
-<a name="reject" />
-### reject(arr, iterator, [callback])
-
-The opposite of [`filter`](#filter). Removes values that pass an `async` truth test.
-
-__Related__
-
-* rejectSeries(arr, iterator, [callback])
-* rejectLimit(arr, limit, iterator, [callback])
-
----------------------------------------
-
-<a name="reduce" />
-### reduce(arr, memo, iterator, [callback])
-
-__Aliases:__ `inject`, `foldl`
-
-Reduces `arr` into a single value using an async `iterator` to return
-each successive step. `memo` is the initial state of the reduction.
-This function only operates in series.
-
-For performance reasons, it may make sense to split a call to this function into
-a parallel map, and then use the normal `Array.prototype.reduce` on the results.
-This function is for situations where each step in the reduction needs to be async;
-if you can get the data before reducing it, then it's probably a good idea to do so.
-
-__Arguments__
-
-* `arr` - An array to iterate over.
-* `memo` - The initial state of the reduction.
-* `iterator(memo, item, callback)` - A function applied to each item in the
-  array to produce the next step in the reduction. The `iterator` is passed a
-  `callback(err, reduction)` which accepts an optional error as its first
-  argument, and the state of the reduction as the second. If an error is
-  passed to the callback, the reduction is stopped and the main `callback` is
-  immediately called with the error.
-* `callback(err, result)` - *Optional* A callback which is called after all the `iterator`
-  functions have finished. Result is the reduced value.
-
-__Example__
-
-```js
-async.reduce([1,2,3], 0, function(memo, item, callback){
-    // pointless async:
-    process.nextTick(function(){
-        callback(null, memo + item)
-    });
-}, function(err, result){
-    // result is now equal to the last value of memo, which is 6
-});
-```
-
----------------------------------------
-
-<a name="reduceRight" />
-### reduceRight(arr, memo, iterator, [callback])
-
-__Alias:__ `foldr`
-
-Same as [`reduce`](#reduce), only operates on `arr` in reverse order.
-
-
----------------------------------------
-
-<a name="detect" />
-### detect(arr, iterator, [callback])
-
-Returns the first value in `arr` that passes an async truth test. The
-`iterator` is applied in parallel, meaning the first iterator to return `true` will
-fire the detect `callback` with that result. That means the result might not be
-the first item in the original `arr` (in terms of order) that passes the test.
-
-If order within the original `arr` is important, then look at [`detectSeries`](#detectSeries).
-
-__Arguments__
-
-* `arr` - An array to iterate over.
-* `iterator(item, callback)` - A truth test to apply to each item in `arr`.
-  The iterator is passed a `callback(truthValue)` which must be called with a
-  boolean argument once it has completed. **Note: this callback does not take an error as its first argument.**
-* `callback(result)` - *Optional* A callback which is called as soon as any iterator returns
-  `true`, or after all the `iterator` functions have finished. Result will be
-  the first item in the array that passes the truth test (iterator) or the
-  value `undefined` if none passed.  **Note: this callback does not take an error as its first argument.**
-
-__Example__
-
-```js
-async.detect(['file1','file2','file3'], fs.exists, function(result){
-    // result now equals the first file in the list that exists
-});
-```
-
-__Related__
-
-* detectSeries(arr, iterator, [callback])
-* detectLimit(arr, limit, iterator, [callback])
-
----------------------------------------
-
-<a name="sortBy" />
-### sortBy(arr, iterator, [callback])
-
-Sorts a list by the results of running each `arr` value through an async `iterator`.
-
-__Arguments__
-
-* `arr` - An array to iterate over.
-* `iterator(item, callback)` - A function to apply to each item in `arr`.
-  The iterator is passed a `callback(err, sortValue)` which must be called once it
-  has completed with an error (which can be `null`) and a value to use as the sort
-  criteria.
-* `callback(err, results)` - *Optional* A callback which is called after all the `iterator`
-  functions have finished, or an error occurs. Results is the items from
-  the original `arr` sorted by the values returned by the `iterator` calls.
-
-__Example__
-
-```js
-async.sortBy(['file1','file2','file3'], function(file, callback){
-    fs.stat(file, function(err, stats){
-        callback(err, stats.mtime);
-    });
-}, function(err, results){
-    // results is now the original array of files sorted by
-    // modified date
-});
-```
-
-__Sort Order__
-
-By modifying the callback parameter the sorting order can be influenced:
-
-```js
-//ascending order
-async.sortBy([1,9,3,5], function(x, callback){
-    callback(null, x);
-}, function(err,result){
-    //result callback
-} );
-
-//descending order
-async.sortBy([1,9,3,5], function(x, callback){
-    callback(null, x*-1);    //<- x*-1 instead of x, turns the order around
-}, function(err,result){
-    //result callback
-} );
-```
-
----------------------------------------
-
-<a name="some" />
-### some(arr, iterator, [callback])
-
-__Alias:__ `any`
-
-Returns `true` if at least one element in the `arr` satisfies an async test.
-_The callback for each iterator call only accepts a single argument of `true` or
-`false`; it does not accept an error argument first!_ This is in-line with the
-way node libraries work with truth tests like `fs.exists`. Once any iterator
-call returns `true`, the main `callback` is immediately called.
-
-__Arguments__
-
-* `arr` - An array to iterate over.
-* `iterator(item, callback)` - A truth test to apply to each item in the array
-  in parallel. The iterator is passed a `callback(truthValue)`` which must be
-  called with a boolean argument once it has completed.
-* `callback(result)` - *Optional* A callback which is called as soon as any iterator returns
-  `true`, or after all the iterator functions have finished. Result will be
-  either `true` or `false` depending on the values of the async tests.
-
- **Note: the callbacks do not take an error as their first argument.**
-__Example__
-
-```js
-async.some(['file1','file2','file3'], fs.exists, function(result){
-    // if result is true then at least one of the files exists
-});
-```
-
-__Related__
-
-* someLimit(arr, limit, iterator, callback)
-
----------------------------------------
-
-<a name="every" />
-### every(arr, iterator, [callback])
-
-__Alias:__ `all`
-
-Returns `true` if every element in `arr` satisfies an async test.
-_The callback for each `iterator` call only accepts a single argument of `true` or
-`false`; it does not accept an error argument first!_ This is in-line with the
-way node libraries work with truth tests like `fs.exists`.
-
-__Arguments__
-
-* `arr` - An array to iterate over.
-* `iterator(item, callback)` - A truth test to apply to each item in the array
-  in parallel. The iterator is passed a `callback(truthValue)` which must be
-  called with a  boolean argument once it has completed.
-* `callback(result)` - *Optional* A callback which is called as soon as any iterator returns
-  `false`, or after all the iterator functions have finished. Result will be
-  either `true` or `false` depending on the values of the async tests.
-
- **Note: the callbacks do not take an error as their first argument.**
-
-__Example__
-
-```js
-async.every(['file1','file2','file3'], fs.exists, function(result){
-    // if result is true then every file exists
-});
-```
-
-__Related__
-
-* everyLimit(arr, limit, iterator, callback)
-
----------------------------------------
-
-<a name="concat" />
-### concat(arr, iterator, [callback])
-
-Applies `iterator` to each item in `arr`, concatenating the results. Returns the
-concatenated list. The `iterator`s are called in parallel, and the results are
-concatenated as they return. There is no guarantee that the results array will
-be returned in the original order of `arr` passed to the `iterator` function.
-
-__Arguments__
-
-* `arr` - An array to iterate over.
-* `iterator(item, callback)` - A function to apply to each item in `arr`.
-  The iterator is passed a `callback(err, results)` which must be called once it
-  has completed with an error (which can be `null`) and an array of results.
-* `callback(err, results)` - *Optional* A callback which is called after all the `iterator`
-  functions have finished, or an error occurs. Results is an array containing
-  the concatenated results of the `iterator` function.
-
-__Example__
-
-```js
-async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files){
-    // files is now a list of filenames that exist in the 3 directories
-});
-```
-
-__Related__
-
-* concatSeries(arr, iterator, [callback])
-
-
-## Control Flow
-
-<a name="series" />
-### series(tasks, [callback])
-
-Run the functions in the `tasks` array in series, each one running once the previous
-function has completed. If any functions in the series pass an error to its
-callback, no more functions are run, and `callback` is immediately called with the value of the error.
-Otherwise, `callback` receives an array of results when `tasks` have completed.
-
-It is also possible to use an object instead of an array. Each property will be
-run as a function, and the results will be passed to the final `callback` as an object
-instead of an array. This can be a more readable way of handling results from
-[`series`](#series).
-
-**Note** that while many implementations preserve the order of object properties, the
-[ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)
-explicitly states that
-
-> The mechanics and order of enumerating the properties is not specified.
-
-So if you rely on the order in which your series of functions are executed, and want
-this to work on all platforms, consider using an array.
-
-__Arguments__
-
-* `tasks` - An array or object containing functions to run, each function is passed
-  a `callback(err, result)` it must call on completion with an error `err` (which can
-  be `null`) and an optional `result` value.
-* `callback(err, results)` - An optional callback to run once all the functions
-  have completed. This function gets a results array (or object) containing all
-  the result arguments passed to the `task` callbacks.
-
-__Example__
-
-```js
-async.series([
-    function(callback){
-        // do some stuff ...
-        callback(null, 'one');
-    },
-    function(callback){
-        // do some more stuff ...
-        callback(null, 'two');
-    }
-],
-// optional callback
-function(err, results){
-    // results is now equal to ['one', 'two']
-});
-
-
-// an example using an object instead of an array
-async.series({
-    one: function(callback){
-        setTimeout(function(){
-            callback(null, 1);
-        }, 200);
-    },
-    two: function(callback){
-        setTimeout(function(){
-            callback(null, 2);
-        }, 100);
-    }
-},
-function(err, results) {
-    // results is now equal to: {one: 1, two: 2}
-});
-```
-
----------------------------------------
-
-<a name="parallel" />
-### parallel(tasks, [callback])
-
-Run the `tasks` array of functions in parallel, without waiting until the previous
-function has completed. If any of the functions pass an error to its
-callback, the main `callback` is immediately called with the value of the error.
-Once the `tasks` have completed, the results are passed to the final `callback` as an
-array.
-
-**Note:** `parallel` is about kicking-off I/O tasks in parallel, not about parallel execution of code.  If your tasks do not use any timers or perform any I/O, they will actually be executed in series.  Any synchronous setup sections for each task will happen one after the other.  JavaScript remains single-threaded.
-
-It is also possible to use an object instead of an array. Each property will be
-run as a function and the results will be passed to the final `callback` as an object
-instead of an array. This can be a more readable way of handling results from
-[`parallel`](#parallel).
-
-
-__Arguments__
-
-* `tasks` - An array or object containing functions to run. Each function is passed
-  a `callback(err, result)` which it must call on completion with an error `err`
-  (which can be `null`) and an optional `result` value.
-* `callback(err, results)` - An optional callback to run once all the functions
-  have completed successfully. This function gets a results array (or object) containing all
-  the result arguments passed to the task callbacks.
-
-__Example__
-
-```js
-async.parallel([
-    function(callback){
-        setTimeout(function(){
-            callback(null, 'one');
-        }, 200);
-    },
-    function(callback){
-        setTimeout(function(){
-            callback(null, 'two');
-        }, 100);
-    }
-],
-// optional callback
-function(err, results){
-    // the results array will equal ['one','two'] even though
-    // the second function had a shorter timeout.
-});
-
-
-// an example using an object instead of an array
-async.parallel({
-    one: function(callback){
-        setTimeout(function(){
-            callback(null, 1);
-        }, 200);
-    },
-    two: function(callback){
-        setTimeout(function(){
-            callback(null, 2);
-        }, 100);
-    }
-},
-function(err, results) {
-    // results is now equals to: {one: 1, two: 2}
-});
-```
-
-__Related__
-
-* parallelLimit(tasks, limit, [callback])
-
----------------------------------------
-
-<a name="whilst" />
-### whilst(test, fn, callback)
-
-Repeatedly call `fn`, while `test` returns `true`. Calls `callback` when stopped,
-or an error occurs.
-
-__Arguments__
-
-* `test()` - synchronous truth test to perform before each execution of `fn`.
-* `fn(callback)` - A function which is called each time `test` passes. The function is
-  passed a `callback(err)`, which must be called once it has completed with an
-  optional `err` argument.
-* `callback(err, [results])` - A callback which is called after the test
-  function has failed and repeated execution of `fn` has stopped. `callback`
-  will be passed an error and any arguments passed to the final `fn`'s callback.
-
-__Example__
-
-```js
-var count = 0;
-
-async.whilst(
-    function () { return count < 5; },
-    function (callback) {
-        count++;
-        setTimeout(function () {
-            callback(null, count);
-        }, 1000);
-    },
-    function (err, n) {
-        // 5 seconds have passed, n = 5
-    }
-);
-```
-
----------------------------------------
-
-<a name="doWhilst" />
-### doWhilst(fn, test, callback)
-
-The post-check version of [`whilst`](#whilst). To reflect the difference in
-the order of operations, the arguments `test` and `fn` are switched.
-
-`doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.
-
----------------------------------------
-
-<a name="until" />
-### until(test, fn, callback)
-
-Repeatedly call `fn` until `test` returns `true`. Calls `callback` when stopped,
-or an error occurs. `callback` will be passed an error and any arguments passed
-to the final `fn`'s callback.
-
-The inverse of [`whilst`](#whilst).
-
----------------------------------------
-
-<a name="doUntil" />
-### doUntil(fn, test, callback)
-
-Like [`doWhilst`](#doWhilst), except the `test` is inverted. Note the argument ordering differs from `until`.
-
----------------------------------------
-
-<a name="during" />
-### during(test, fn, callback)
-
-Like [`whilst`](#whilst), except the `test` is an asynchronous function that is passed a callback in the form of `function (err, truth)`. If error is passed to `test` or `fn`, the main callback is immediately called with the value of the error.
-
-__Example__
-
-```js
-var count = 0;
-
-async.during(
-    function (callback) {
-      return callback(null, count < 5);
-    },
-    function (callback) {
-        count++;
-        setTimeout(callback, 1000);
-    },
-    function (err) {
-        // 5 seconds have passed
-    }
-);
-```
-
----------------------------------------
-
-<a name="doDuring" />
-### doDuring(fn, test, callback)
-
-The post-check version of [`during`](#during). To reflect the difference in
-the order of operations, the arguments `test` and `fn` are switched.
-
-Also a version of [`doWhilst`](#doWhilst) with asynchronous `test` function.
-
----------------------------------------
-
-<a name="forever" />
-### forever(fn, [errback])
-
-Calls the asynchronous function `fn` with a callback parameter that allows it to
-call itself again, in series, indefinitely.
-
-If an error is passed to the callback then `errback` is called with the
-error, and execution stops, otherwise it will never be called.
-
-```js
-async.forever(
-    function(next) {
-        // next is suitable for passing to things that need a callback(err [, whatever]);
-        // it will result in this function being called again.
-    },
-    function(err) {
-        // if next is called with a value in its first parameter, it will appear
-        // in here as 'err', and execution will stop.
-    }
-);
-```
-
----------------------------------------
-
-<a name="waterfall" />
-### waterfall(tasks, [callback])
-
-Runs the `tasks` array of functions in series, each passing their results to the next in
-the array. However, if any of the `tasks` pass an error to their own callback, the
-next function is not executed, and the main `callback` is immediately called with
-the error.
-
-__Arguments__
-
-* `tasks` - An array of functions to run, each function is passed a
-  `callback(err, result1, result2, ...)` it must call on completion. The first
-  argument is an error (which can be `null`) and any further arguments will be
-  passed as arguments in order to the next task.
-* `callback(err, [results])` - An optional callback to run once all the functions
-  have completed. This will be passed the results of the last task's callback.
-
-
-
-__Example__
-
-```js
-async.waterfall([
-    function(callback) {
-        callback(null, 'one', 'two');
-    },
-    function(arg1, arg2, callback) {
-      // arg1 now equals 'one' and arg2 now equals 'two'
-        callback(null, 'three');
-    },
-    function(arg1, callback) {
-        // arg1 now equals 'three'
-        callback(null, 'done');
-    }
-], function (err, result) {
-    // result now equals 'done'
-});
-```
-Or, with named functions:
-
-```js
-async.waterfall([
-    myFirstFunction,
-    mySecondFunction,
-    myLastFunction,
-], function (err, result) {
-    // result now equals 'done'
-});
-function myFirstFunction(callback) {
-  callback(null, 'one', 'two');
-}
-function mySecondFunction(arg1, arg2, callback) {
-  // arg1 now equals 'one' and arg2 now equals 'two'
-  callback(null, 'three');
-}
-function myLastFunction(arg1, callback) {
-  // arg1 now equals 'three'
-  callback(null, 'done');
-}
-```
-
-Or, if you need to pass any argument to the first function:
-
-```js
-async.waterfall([
-    async.apply(myFirstFunction, 'zero'),
-    mySecondFunction,
-    myLastFunction,
-], function (err, result) {
-    // result now equals 'done'
-});
-function myFirstFunction(arg1, callback) {
-  // arg1 now equals 'zero'
-  callback(null, 'one', 'two');
-}
-function mySecondFunction(arg1, arg2, callback) {
-  // arg1 now equals 'one' and arg2 now equals 'two'
-  callback(null, 'three');
-}
-function myLastFunction(arg1, callback) {
-  // arg1 now equals 'three'
-  callback(null, 'done');
-}
-```
-
----------------------------------------
-<a name="compose" />
-### compose(fn1, fn2...)
-
-Creates a function which is a composition of the passed asynchronous
-functions. Each function consumes the return value of the function that
-follows. Composing functions `f()`, `g()`, and `h()` would produce the result of
-`f(g(h()))`, only this version uses callbacks to obtain the return values.
-
-Each function is executed with the `this` binding of the composed function.
-
-__Arguments__
-
-* `functions...` - the asynchronous functions to compose
-
-
-__Example__
-
-```js
-function add1(n, callback) {
-    setTimeout(function () {
-        callback(null, n + 1);
-    }, 10);
-}
-
-function mul3(n, callback) {
-    setTimeout(function () {
-        callback(null, n * 3);
-    }, 10);
-}
-
-var add1mul3 = async.compose(mul3, add1);
-
-add1mul3(4, function (err, result) {
-   // result now equals 15
-});
-```
-
----------------------------------------
-<a name="seq" />
-### seq(fn1, fn2...)
-
-Version of the compose function that is more natural to read.
-Each function consumes the return value of the previous function.
-It is the equivalent of [`compose`](#compose) with the arguments reversed.
-
-Each function is executed with the `this` binding of the composed function.
-
-__Arguments__
-
-* `functions...` - the asynchronous functions to compose
-
-
-__Example__
-
-```js
-// Requires lodash (or underscore), express3 and dresende's orm2.
-// Part of an app, that fetches cats of the logged user.
-// This example uses `seq` function to avoid overnesting and error
-// handling clutter.
-app.get('/cats', function(request, response) {
-  var User = request.models.User;
-  async.seq(
-    _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))
-    function(user, fn) {
-      user.getCats(fn);      // 'getCats' has signature (callback(err, data))
-    }
-  )(req.session.user_id, function (err, cats) {
-    if (err) {
-      console.error(err);
-      response.json({ status: 'error', message: err.message });
-    } else {
-      response.json({ status: 'ok', message: 'Cats found', data: cats });
-    }
-  });
-});
-```
-
----------------------------------------
-<a name="applyEach" />
-### applyEach(fns, args..., callback)
-
-Applies the provided arguments to each function in the array, calling
-`callback` after all functions have completed. If you only provide the first
-argument, then it will return a function which lets you pass in the
-arguments as if it were a single function call.
-
-__Arguments__
-
-* `fns` - the asynchronous functions to all call with the same arguments
-* `args...` - any number of separate arguments to pass to the function
-* `callback` - the final argument should be the callback, called when all
-  functions have completed processing
-
-
-__Example__
-
-```js
-async.applyEach([enableSearch, updateSchema], 'bucket', callback);
-
-// partial application example:
-async.each(
-    buckets,
-    async.applyEach([enableSearch, updateSchema]),
-    callback
-);
-```
-
-__Related__
-
-* applyEachSeries(tasks, args..., [callback])
-
----------------------------------------
-
-<a name="queue" />
-### queue(worker, [concurrency])
-
-Creates a `queue` object with the specified `concurrency`. Tasks added to the
-`queue` are processed in parallel (up to the `concurrency` limit). If all
-`worker`s are in progress, the task is queued until one becomes available.
-Once a `worker` completes a `task`, that `task`'s callback is called.
-
-__Arguments__
-
-* `worker(task, callback)` - An asynchronous function for processing a queued
-  task, which must call its `callback(err)` argument when finished, with an
-  optional `error` as an argument.  If you want to handle errors from an individual task, pass a callback to `q.push()`.
-* `concurrency` - An `integer` for determining how many `worker` functions should be
-  run in parallel.  If omitted, the concurrency defaults to `1`.  If the concurrency is `0`, an error is thrown.
-
-__Queue objects__
-
-The `queue` object returned by this function has the following properties and
-methods:
-
-* `length()` - a function returning the number of items waiting to be processed.
-* `started` - a function returning whether or not any items have been pushed and processed by the queue
-* `running()` - a function returning the number of items currently being processed.
-* `workersList()` - a function returning the array of items currently being processed.
-* `idle()` - a function returning false if there are items waiting or being processed, or true if not.
-* `concurrency` - an integer for determining how many `worker` functions should be
-  run in parallel. This property can be changed after a `queue` is created to
-  alter the concurrency on-the-fly.
-* `push(task, [callback])` - add a new task to the `queue`. Calls `callback` once
-  the `worker` has finished processing the task. Instead of a single task, a `tasks` array
-  can be submitted. The respective callback is used for every task in the list.
-* `unshift(task, [callback])` - add a new task to the front of the `queue`.
-* `saturated` - a callback that is called when the `queue` length hits the `concurrency` limit,
-   and further tasks will be queued.
-* `empty` - a callback that is called when the last item from the `queue` is given to a `worker`.
-* `drain` - a callback that is called when the last item from the `queue` has returned from the `worker`.
-* `paused` - a boolean for determining whether the queue is in a paused state
-* `pause()` - a function that pauses the processing of tasks until `resume()` is called.
-* `resume()` - a function that resumes the processing of queued tasks when the queue is paused.
-* `kill()` - a function that removes the `drain` callback and empties remaining tasks from the queue forcing it to go idle.
-
-__Example__
-
-```js
-// create a queue object with concurrency 2
-
-var q = async.queue(function (task, callback) {
-    console.log('hello ' + task.name);
-    callback();
-}, 2);
-
-
-// assign a callback
-q.drain = function() {
-    console.log('all items have been processed');
-}
-
-// add some items to the queue
-
-q.push({name: 'foo'}, function (err) {
-    console.log('finished processing foo');
-});
-q.push({name: 'bar'}, function (err) {
-    console.log('finished processing bar');
-});
-
-// add some items to the queue (batch-wise)
-
-q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function (err) {
-    console.log('finished processing item');
-});
-
-// add some items to the front of the queue
-
-q.unshift({name: 'bar'}, function (err) {
-    console.log('finished processing bar');
-});
-```
-
-
----------------------------------------
-
-<a name="priorityQueue" />
-### priorityQueue(worker, concurrency)
-
-The same as [`queue`](#queue) only tasks are assigned a priority and completed in ascending priority order. There are two differences between `queue` and `priorityQueue` objects:
-
-* `push(task, priority, [callback])` - `priority` should be a number. If an array of
-  `tasks` is given, all tasks will be assigned the same priority.
-* The `unshift` method was removed.
-
----------------------------------------
-
-<a name="cargo" />
-### cargo(worker, [payload])
-
-Creates a `cargo` object with the specified payload. Tasks added to the
-cargo will be processed altogether (up to the `payload` limit). If the
-`worker` is in progress, the task is queued until it becomes available. Once
-the `worker` has completed some tasks, each callback of those tasks is called.
-Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966) for how `cargo` and `queue` work.
-
-While [queue](#queue) passes only one task to one of a group of workers
-at a time, cargo passes an array of tasks to a single worker, repeating
-when the worker is finished.
-
-__Arguments__
-
-* `worker(tasks, callback)` - An asynchronous function for processing an array of
-  queued tasks, which must call its `callback(err)` argument when finished, with
-  an optional `err` argument.
-* `payload` - An optional `integer` for determining how many tasks should be
-  processed per round; if omitted, the default is unlimited.
-
-__Cargo objects__
-
-The `cargo` object returned by this function has the following properties and
-methods:
-
-* `length()` - A function returning the number of items waiting to be processed.
-* `payload` - An `integer` for determining how many tasks should be
-  process per round. This property can be changed after a `cargo` is created to
-  alter the payload on-the-fly.
-* `push(task, [callback])` - Adds `task` to the `queue`. The callback is called
-  once the `worker` has finished processing the task. Instead of a single task, an array of `tasks`
-  can be submitted. The respective callback is used for every task in the list.
-* `saturated` - A callback that is called when the `queue.length()` hits the concurrency and further tasks will be queued.
-* `empty` - A callback that is called when the last item from the `queue` is given to a `worker`.
-* `drain` - A callback that is called when the last item from the `queue` has returned from the `worker`.
-* `idle()`, `pause()`, `resume()`, `kill()` - cargo inherits all of the same methods and event calbacks as [`queue`](#queue)
-
-__Example__
-
-```js
-// create a cargo object with payload 2
-
-var cargo = async.cargo(function (tasks, callback) {
-    for(var i=0; i<tasks.length; i++){
-      console.log('hello ' + tasks[i].name);
-    }
-    callback();
-}, 2);
-
-
-// add some items
-
-cargo.push({name: 'foo'}, function (err) {
-    console.log('finished processing foo');
-});
-cargo.push({name: 'bar'}, function (err) {
-    console.log('finished processing bar');
-});
-cargo.push({name: 'baz'}, function (err) {
-    console.log('finished processing baz');
-});
-```
-
----------------------------------------
-
-<a name="auto" />
-### auto(tasks, [concurrency], [callback])
-
-Determines the best order for running the functions in `tasks`, based on their requirements. Each function can optionally depend on other functions being completed first, and each function is run as soon as its requirements are satisfied.
-
-If any of the functions pass an error to their callback, the `auto` sequence will stop. Further tasks will not execute (so any other functions depending on it will not run), and the main `callback` is immediately called with the error.  Functions also receive an object containing the results of functions which have completed so far.
-
-Note, all functions are called with a `results` object as a second argument,
-so it is unsafe to pass functions in the `tasks` object which cannot handle the
-extra argument.
-
-For example, this snippet of code:
-
-```js
-async.auto({
-  readData: async.apply(fs.readFile, 'data.txt', 'utf-8')
-}, callback);
-```
-
-will have the effect of calling `readFile` with the results object as the last
-argument, which will fail:
-
-```js
-fs.readFile('data.txt', 'utf-8', cb, {});
-```
-
-Instead, wrap the call to `readFile` in a function which does not forward the
-`results` object:
-
-```js
-async.auto({
-  readData: function(cb, results){
-    fs.readFile('data.txt', 'utf-8', cb);
-  }
-}, callback);
-```
-
-__Arguments__
-
-* `tasks` - An object. Each of its properties is either a function or an array of
-  requirements, with the function itself the last item in the array. The object's key
-  of a property serves as the name of the task defined by that property,
-  i.e. can be used when specifying requirements for other tasks.
-  The function receives two arguments: (1) a `callback(err, result)` which must be
-  called when finished, passing an `error` (which can be `null`) and the result of
-  the function's execution, and (2) a `results` object, containing the results of
-  the previously executed functions.
-* `concurrency` - An optional `integer` for determining the maximum number of tasks that can be run in parallel. By default, as many as possible.
-* `callback(err, results)` - An optional callback which is called when all the
-  tasks have been completed. It receives the `err` argument if any `tasks`
-  pass an error to their callback. Results are always returned; however, if
-  an error occurs, no further `tasks` will be performed, and the results
-  object will only contain partial results.
-
-
-__Example__
-
-```js
-async.auto({
-    get_data: function(callback){
-        console.log('in get_data');
-        // async code to get some data
-        callback(null, 'data', 'converted to array');
-    },
-    make_folder: function(callback){
-        console.log('in make_folder');
-        // async code to create a directory to store a file in
-        // this is run at the same time as getting the data
-        callback(null, 'folder');
-    },
-    write_file: ['get_data', 'make_folder', function(callback, results){
-        console.log('in write_file', JSON.stringify(results));
-        // once there is some data and the directory exists,
-        // write the data to a file in the directory
-        callback(null, 'filename');
-    }],
-    email_link: ['write_file', function(callback, results){
-        console.log('in email_link', JSON.stringify(results));
-        // once the file is written let's email a link to it...
-        // results.write_file contains the filename returned by write_file.
-        callback(null, {'file':results.write_file, 'email':'user@example.com'});
-    }]
-}, function(err, results) {
-    console.log('err = ', err);
-    console.log('results = ', results);
-});
-```
-
-This is a fairly trivial example, but to do this using the basic parallel and
-series functions would look like this:
-
-```js
-async.parallel([
-    function(callback){
-        console.log('in get_data');
-        // async code to get some data
-        callback(null, 'data', 'converted to array');
-    },
-    function(callback){
-        console.log('in make_folder');
-        // async code to create a directory to store a file in
-        // this is run at the same time as getting the data
-        callback(null, 'folder');
-    }
-],
-function(err, results){
-    async.series([
-        function(callback){
-            console.log('in write_file', JSON.stringify(results));
-            // once there is some data and the directory exists,
-            // write the data to a file in the directory
-            results.push('filename');
-            callback(null);
-        },
-        function(callback){
-            console.log('in email_link', JSON.stringify(results));
-            // once the file is written let's email a link to it...
-            callback(null, {'file':results.pop(), 'email':'user@example.com'});
-        }
-    ]);
-});
-```
-
-For a complicated series of `async` tasks, using the [`auto`](#auto) function makes adding
-new tasks much easier (and the code more readable).
-
-
----------------------------------------
-
-<a name="retry" />
-### retry([opts = {times: 5, interval: 0}| 5], task, [callback])
-
-Attempts to get a successful response from `task` no more than `times` times before
-returning an error. If the task is successful, the `callback` will be passed the result
-of the successful task. If all attempts fail, the callback will be passed the error and
-result (if any) of the final attempt.
-
-__Arguments__
-
-* `opts` - Can be either an object with `times` and `interval` or a number.
-  * `times` - The number of attempts to make before giving up.  The default is `5`.
-  * `interval` - The time to wait between retries, in milliseconds.  The default is `0`.
-  * If `opts` is a number, the number specifies the number of times to retry, with the default interval of `0`. 
-* `task(callback, results)` - A function which receives two arguments: (1) a `callback(err, result)`
-  which must be called when finished, passing `err` (which can be `null`) and the `result` of
-  the function's execution, and (2) a `results` object, containing the results of
-  the previously executed functions (if nested inside another control flow).
-* `callback(err, results)` - An optional callback which is called when the
-  task has succeeded, or after the final failed attempt. It receives the `err` and `result` arguments of the last attempt at completing the `task`.
-
-The [`retry`](#retry) function can be used as a stand-alone control flow by passing a callback, as shown below:
-
-```js
-// try calling apiMethod 3 times
-async.retry(3, apiMethod, function(err, result) {
-    // do something with the result
-});
-```
-
-```js
-// try calling apiMethod 3 times, waiting 200 ms between each retry 
-async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {
-    // do something with the result
-});
-```
-
-```js
-// try calling apiMethod the default 5 times no delay between each retry 
-async.retry(apiMethod, function(err, result) {
-    // do something with the result
-});
-```
-
-It can also be embedded within other control flow functions to retry individual methods
-that are not as reliable, like this:
-
-```js
-async.auto({
-    users: api.getUsers.bind(api),
-    payments: async.retry(3, api.getPayments.bind(api))
-}, function(err, results) {
-  // do something with the results
-});
-```
-
-
----------------------------------------
-
-<a name="iterator" />
-### iterator(tasks)
-
-Creates an iterator function which calls the next function in the `tasks` array,
-returning a continuation to call the next one after that. It's also possible to
-“peek” at the next iterator with `iterator.next()`.
-
-This function is used internally by the `async` module, but can be useful when
-you want to manually control the flow of functions in series.
-
-__Arguments__
-
-* `tasks` - An array of functions to run.
-
-__Example__
-
-```js
-var iterator = async.iterator([
-    function(){ sys.p('one'); },
-    function(){ sys.p('two'); },
-    function(){ sys.p('three'); }
-]);
-
-node> var iterator2 = iterator();
-'one'
-node> var iterator3 = iterator2();
-'two'
-node> iterator3();
-'three'
-node> var nextfn = iterator2.next();
-node> nextfn();
-'three'
-```
-
----------------------------------------
-
-<a name="apply" />
-### apply(function, arguments..)
-
-Creates a continuation function with some arguments already applied.
-
-Useful as a shorthand when combined with other control flow functions. Any arguments
-passed to the returned function are added to the arguments originally passed
-to apply.
-
-__Arguments__
-
-* `function` - The function you want to eventually apply all arguments to.
-* `arguments...` - Any number of arguments to automatically apply when the
-  continuation is called.
-
-__Example__
-
-```js
-// using apply
-
-async.parallel([
-    async.apply(fs.writeFile, 'testfile1', 'test1'),
-    async.apply(fs.writeFile, 'testfile2', 'test2'),
-]);
-
-
-// the same process without using apply
-
-async.parallel([
-    function(callback){
-        fs.writeFile('testfile1', 'test1', callback);
-    },
-    function(callback){
-        fs.writeFile('testfile2', 'test2', callback);
-    }
-]);
-```
-
-It's possible to pass any number of additional arguments when calling the
-continuation:
-
-```js
-node> var fn = async.apply(sys.puts, 'one');
-node> fn('two', 'three');
-one
-two
-three
-```
-
----------------------------------------
-
-<a name="nextTick" />
-### nextTick(callback), setImmediate(callback)
-
-Calls `callback` on a later loop around the event loop. In Node.js this just
-calls `process.nextTick`; in the browser it falls back to `setImmediate(callback)`
-if available, otherwise `setTimeout(callback, 0)`, which means other higher priority
-events may precede the execution of `callback`.
-
-This is used internally for browser-compatibility purposes.
-
-__Arguments__
-
-* `callback` - The function to call on a later loop around the event loop.
-
-__Example__
-
-```js
-var call_order = [];
-async.nextTick(function(){
-    call_order.push('two');
-    // call_order now equals ['one','two']
-});
-call_order.push('one')
-```
-
-<a name="times" />
-### times(n, iterator, [callback])
-
-Calls the `iterator` function `n` times, and accumulates results in the same manner
-you would use with [`map`](#map).
-
-__Arguments__
-
-* `n` - The number of times to run the function.
-* `iterator` - The function to call `n` times.
-* `callback` - see [`map`](#map)
-
-__Example__
-
-```js
-// Pretend this is some complicated async factory
-var createUser = function(id, callback) {
-  callback(null, {
-    id: 'user' + id
-  })
-}
-// generate 5 users
-async.times(5, function(n, next){
-    createUser(n, function(err, user) {
-      next(err, user)
-    })
-}, function(err, users) {
-  // we should now have 5 users
-});
-```
-
-__Related__
-
-* timesSeries(n, iterator, [callback])
-* timesLimit(n, limit, iterator, [callback])
-
-
-## Utils
-
-<a name="memoize" />
-### memoize(fn, [hasher])
-
-Caches the results of an `async` function. When creating a hash to store function
-results against, the callback is omitted from the hash and an optional hash
-function can be used.
-
-If no hash function is specified, the first argument is used as a hash key, which may work reasonably if it is a string or a data type that converts to a distinct string. Note that objects and arrays will not behave reasonably. Neither will cases where the other arguments are significant. In such cases, specify your own hash function.
-
-The cache of results is exposed as the `memo` property of the function returned
-by `memoize`.
-
-__Arguments__
-
-* `fn` - The function to proxy and cache results from.
-* `hasher` - An optional function for generating a custom hash for storing
-  results. It has all the arguments applied to it apart from the callback, and
-  must be synchronous.
-
-__Example__
-
-```js
-var slow_fn = function (name, callback) {
-    // do something
-    callback(null, result);
-};
-var fn = async.memoize(slow_fn);
-
-// fn can now be used as if it were slow_fn
-fn('some name', function () {
-    // callback
-});
-```
-
-<a name="unmemoize" />
-### unmemoize(fn)
-
-Undoes a [`memoize`](#memoize)d function, reverting it to the original, unmemoized
-form. Handy for testing.
-
-__Arguments__
-
-* `fn` - the memoized function
-
----------------------------------------
-
-<a name="ensureAsync" />
-### ensureAsync(fn)
-
-Wrap an async function and ensure it calls its callback on a later tick of the event loop.  If the function already calls its callback on a next tick, no extra deferral is added. This is useful for preventing stack overflows (`RangeError: Maximum call stack size exceeded`) and generally keeping [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony) contained.
-
-__Arguments__
-
-* `fn` - an async function, one that expects a node-style callback as its last argument
-
-Returns a wrapped function with the exact same call signature as the function passed in.
-
-__Example__
-
-```js
-function sometimesAsync(arg, callback) {
-  if (cache[arg]) {
-    return callback(null, cache[arg]); // this would be synchronous!!
-  } else {
-    doSomeIO(arg, callback); // this IO would be asynchronous
-  }
-}
-
-// this has a risk of stack overflows if many results are cached in a row
-async.mapSeries(args, sometimesAsync, done);
-
-// this will defer sometimesAsync's callback if necessary,
-// preventing stack overflows
-async.mapSeries(args, async.ensureAsync(sometimesAsync), done);
-
-```
-
----------------------------------------
-
-<a name="constant">
-### constant(values...)
-
-Returns a function that when called, calls-back with the values provided.  Useful as the first function in a `waterfall`, or for plugging values in to `auto`.
-
-__Example__
-
-```js
-async.waterfall([
-  async.constant(42),
-  function (value, next) {
-    // value === 42
-  },
-  //...
-], callback);
-
-async.waterfall([
-  async.constant(filename, "utf8"),
-  fs.readFile,
-  function (fileData, next) {
-    //...
-  }
-  //...
-], callback);
-
-async.auto({
-  hostname: async.constant("https://server.net/"),
-  port: findFreePort,
-  launchServer: ["hostname", "port", function (cb, options) {
-    startServer(options, cb);
-  }],
-  //...
-}, callback);
-
-```
-
----------------------------------------
-
-<a name="asyncify">
-<a name="wrapSync">
-### asyncify(func)
-
-__Alias:__ `wrapSync`
-
-Take a sync function and make it async, passing its return value to a callback. This is useful for plugging sync functions into a waterfall, series, or other async functions. Any arguments passed to the generated function will be passed to the wrapped function (except for the final callback argument). Errors thrown will be passed to the callback.
-
-__Example__
-
-```js
-async.waterfall([
-  async.apply(fs.readFile, filename, "utf8"),
-  async.asyncify(JSON.parse),
-  function (data, next) {
-    // data is the result of parsing the text.
-    // If there was a parsing error, it would have been caught.
-  }
-], callback)
-```
-
-If the function passed to `asyncify` returns a Promise, that promises's resolved/rejected state will be used to call the callback, rather than simply the synchronous return value.  Example:
-
-```js
-async.waterfall([
-  async.apply(fs.readFile, filename, "utf8"),
-  async.asyncify(function (contents) {
-    return db.model.create(contents);
-  }),
-  function (model, next) {
-    // `model` is the instantiated model object. 
-    // If there was an error, this function would be skipped.
-  }
-], callback)
-```
-
-This also means you can asyncify ES2016 `async` functions.
-
-```js
-var q = async.queue(async.asyncify(async function (file) {
-  var intermediateStep = await processFile(file);
-  return await somePromise(intermediateStep)
-}));
-
-q.push(files);
-```
-
----------------------------------------
-
-<a name="log" />
-### log(function, arguments)
-
-Logs the result of an `async` function to the `console`. Only works in Node.js or
-in browsers that support `console.log` and `console.error` (such as FF and Chrome).
-If multiple arguments are returned from the async function, `console.log` is
-called on each argument in order.
-
-__Arguments__
-
-* `function` - The function you want to eventually apply all arguments to.
-* `arguments...` - Any number of arguments to apply to the function.
-
-__Example__
-
-```js
-var hello = function(name, callback){
-    setTimeout(function(){
-        callback(null, 'hello ' + name);
-    }, 1000);
-};
-```
-```js
-node> async.log(hello, 'world');
-'hello world'
-```
-
----------------------------------------
-
-<a name="dir" />
-### dir(function, arguments)
-
-Logs the result of an `async` function to the `console` using `console.dir` to
-display the properties of the resulting object. Only works in Node.js or
-in browsers that support `console.dir` and `console.error` (such as FF and Chrome).
-If multiple arguments are returned from the async function, `console.dir` is
-called on each argument in order.
-
-__Arguments__
-
-* `function` - The function you want to eventually apply all arguments to.
-* `arguments...` - Any number of arguments to apply to the function.
-
-__Example__
-
-```js
-var hello = function(name, callback){
-    setTimeout(function(){
-        callback(null, {hello: name});
-    }, 1000);
-};
-```
-```js
-node> async.dir(hello, 'world');
-{hello: 'world'}
-```
-
----------------------------------------
-
-<a name="noConflict" />
-### noConflict()
-
-Changes the value of `async` back to its original value, returning a reference to the
-`async` object.
deleted file mode 100644
--- a/node_modules/alfred/node_modules/cookiejar/.npmignore
+++ /dev/null
@@ -1 +0,0 @@
-node_modules
deleted file mode 100644
--- a/node_modules/alfred/node_modules/cookiejar/readme.md
+++ /dev/null
@@ -1,57 +0,0 @@
-#CookieJar
-
-Simple robust cookie library
-
-##Exports
-
-###CookieAccessInfo(domain,path,secure,script)
-
-    class to determine matching qualities of a cookie
-
-#####Properties
-
-* String domain - domain to match
-* String path - path to match
-* Boolean secure - access is secure (ssl generally)
-* Boolean script - access is from a script
-
-
-###Cookie(cookiestr_or_cookie, request_domain, request_path)
-
-    turns input into a Cookie (singleton if given a Cookie)
-    the `request_domain` argument is used to default the domain if it is not explicit in the cookie string 
-    the `request_path` argument is used to set the path if it is not explicit in a cookie String.
-
-    explicit domains/paths will cascade, implied domains/paths must *exactly* match (see http://en.wikipedia.org/wiki/HTTP_cookie#Domain_and_Pat)
-
-#####Properties
-
-* String name - name of the cookie
-* String value - string associated with the cookie
-* String domain - domain to match (on a cookie a '.' at the start means a wildcard matching anything ending in the rest)
-* Boolean explicit_domain - if the domain was explicitly set via the cookie string
-* String path - base path to match (matches any path starting with this '/' is root)
-* Boolean explicit_path - if the path was explicitly set via the cookie string
-* Boolean noscript - if it should be kept from scripts
-* Boolean secure - should it only be transmitted over secure means
-* Number expiration_date - number of millis since 1970 at which this should be removed
-
-#####Methods
-
-* String toString() - the __set-cookie:__ string for this cookie
-* String toValueString() - the __cookie:__ string for this cookie
-* Cookie parse(cookiestr, request_domain, request_path) - parses the string onto this cookie or a new one if called directly
-* Boolean matches(access_info) - returns true if the access_info allows retrieval of this cookie
-* Boolean collidesWith(cookie) - returns true if the cookies cannot exist in the same space (domain and path match)
-
-
-###CookieJar()
-
-    class to hold numerous cookies from multiple domains correctly
-
-#####Methods
-
-* Cookie setCookie(cookie, request_domain, request_path) - add a cookie to the jar
-* Cookie[] setCookies(cookiestr_or_list, request_domain, request_path) - add a large number of cookies to the jar
-* Cookie getCookie(cookie_name,access_info) - get a cookie with the name and access_info matching
-* Cookie[] getCookies(access_info) - grab all cookies matching this access_info
deleted file mode 100755
--- a/node_modules/alfred/node_modules/cookiejar/tests/test.js
+++ /dev/null
@@ -1,82 +0,0 @@
-#!/usr/bin/env node
-var Cookie=require("../cookiejar"),
-    CookieAccessInfo = Cookie.CookieAccessInfo,
-    CookieJar = Cookie.CookieJar,
-    Cookie = Cookie.Cookie;
-
-var assert = require('assert');
-
-// Test Cookie
-var cookie = new Cookie("a=1;domain=.test.com;path=/");
-assert.equal(cookie.name, "a");
-assert.equal(cookie.value, "1");
-assert.equal(cookie.domain, ".test.com");
-assert.equal(cookie.path, "/");
-assert.equal(cookie.secure, false);
-assert.equal(cookie.expiration_date, Infinity);
-
-assert.deepEqual(cookie, new Cookie("a=1;domain=.test.com;path=/"));
-assert.ok(cookie.collidesWith(new Cookie("a=1;domain=.test.com;path=/")));
-
-var cookie = new Cookie("a=1;path=/", ".test.com");
-assert.equal(cookie.domain, ".test.com");
-
-
-// Test CookieJar
-var test_jar = CookieJar();
-test_jar.setCookies(
- "a=1;domain=.test.com;path=/"
- +":b=2;domain=test.com;path=/"
- +":c=3;domain=test.com;path=/;expires=January 1, 1970");
-var cookies=test_jar.getCookies(CookieAccessInfo("test.com","/"))
-assert.equal(cookies.length, 2, "Expires on setCookies fail\n" + cookies.toString());
-assert.equal(cookies.toValueString(), 'a=1;b=2', "Cannot get value string of multiple cookies");
-
-cookies=test_jar.getCookies(CookieAccessInfo("www.test.com","/"))
-assert.equal(cookies.length, 2, "Wildcard domain fail\n" + cookies.toString());
-
-test_jar.setCookies("b=2;domain=test.com;path=/;expires=January 1, 1970");
-cookies=test_jar.getCookies(CookieAccessInfo("test.com","/"))
-assert.equal(cookies.length, 1, "Delete cookie fail\n" + cookies.toString());
-assert.equal(String(test_jar.getCookies(CookieAccessInfo("test.com","/"))), "a=1; domain=.test.com; path=/");
-
-cookie=Cookie("a=1;domain=test.com;path=/;HttpOnly");
-assert.ok(cookie.noscript, "HttpOnly flag parsing failed\n" + cookie.toString());
-
-var test_jar = CookieJar();
-test_jar.setCookies([
-	"a=1;domain=.test.com;path=/"
-	, "a=1;domain=.test.com;path=/"
-	, "a=2;domain=.test.com;path=/"
-	, "b=3;domain=.test.com;path=/"]);
-var cookies=test_jar.getCookies(CookieAccessInfo("test.com","/"))
-assert.equal(cookies.length, 2);
-assert.equal(cookies[0].value, 2);
-
-// Test Ignore Trailing Semicolons (Github Issue #6)
-var cookie = new Cookie("a=1;domain=.test.com;path=/;;;;");
-assert.equal(cookie.name, "a");
-assert.equal(cookie.value, "1");
-assert.equal(cookie.domain, ".test.com");
-assert.equal(cookie.path, "/");
-assert.deepEqual(cookie, new Cookie("a=1;domain=.test.com;path=/"));
-
-// Test request_path and request_domain
-test_jar.setCookie(new Cookie("sub=4;path=/", "test.com"));
-var cookie = test_jar.getCookie("sub", CookieAccessInfo("sub.test.com", "/"));
-assert.equal(cookie, undefined);
-
-var cookie = test_jar.getCookie("sub", CookieAccessInfo("test.com", "/"));
-assert.equal(cookie.name, "sub");
-assert.equal(cookie.domain, "test.com");
-
-test_jar.setCookie(new Cookie("sub=4;path=/accounts", "test.com", "/accounts"));
-var cookie = test_jar.getCookie("sub", CookieAccessInfo("test.com", "/foo"));
-assert.equal(cookie, undefined);
-
-var cookie = test_jar.getCookie("sub", CookieAccessInfo("test.com", "/accounts"));
-assert.equal(cookie.path, "/accounts");
-
-test_jar.setCookie(new Cookie("sub=5;path=/", "test.com", "/accounts"));
-var cookies = test_jar.getCookies(CookieAccessInfo("test.com"));
-assert.equal(cookies.length, 3);
deleted file mode 100644
--- a/node_modules/alfred/node_modules/extend/.eslintrc
+++ /dev/null
@@ -1,192 +0,0 @@
-{
-	"env": {
-		"browser": false,
-		"node": true,
-		"amd": false,
-		"mocha": false,
-		"jasmine": false
-	},
-
-	"rules": {
-		"accessor-pairs": [2, { getWithoutSet: false, setWithoutGet: true }],
-		"array-bracket-spacing": [2, "never", {
-			"singleValue": false,
-			"objectsInArrays": false,
-			"arraysInArrays": false
-		}],
-		"block-scoped-var": [0],
-		"brace-style": [2, "1tbs", { "allowSingleLine": true }],
-		"camelcase": [2],
-		"comma-dangle": [2, "never"],
-		"comma-spacing": [2],
-		"comma-style": [2, "last"],
-		"complexity": [2, 15],
-		"computed-property-spacing": [2, "never"],
-		"consistent-return": [2],
-		"consistent-this": [0, "that"],
-		"constructor-super": [2],
-		"curly": [2, "all"],
-		"default-case": [2],
-		"dot-notation": [2, { "allowKeywords": true }],
-		"eol-last": [2],
-		"eqeqeq": [2],
-		"func-names": [0],
-		"func-style": [2, "expression"],
-		"generator-star-spacing": [2, { "before": false, "after": true }],
-		"global-strict": [0, "never"],
-		"guard-for-in": [0],
-		"handle-callback-err": [0],
-		"key-spacing": [2, { "beforeColon": false, "afterColon": true }],
-		"linebreak-style": [2, "unix"],
-		"lines-around-comment": [2, {
-			"beforeBlockComment": false,
-			"afterBlockComment": false,
-			"beforeLineComment": false,
-			"beforeLineComment": false,
-			"allowBlockStart": true,
-			"allowBlockEnd": true
-		}],
-		"quotes": [2, "single", "avoid-escape"],
-		"max-depth": [1, 4],
-		"max-len": [0, 80, 4],
-		"max-nested-callbacks": [2, 2],
-		"max-params": [2, 2],
-		"max-statements": [2, 21],
-		"new-parens": [2],
-		"new-cap": [2],
-		"newline-after-var": [0],
-		"no-alert": [2],
-		"no-array-constructor": [2],
-		"no-bitwise": [0],
-		"no-caller": [2],
-		"no-catch-shadow": [2],
-		"no-cond-assign": [2],
-		"no-console": [2],
-		"no-constant-condition": [2],
-		"no-continue": [2],
-		"no-control-regex": [2],
-		"no-debugger": [2],
-		"no-delete-var": [2],
-		"no-div-regex": [0],
-		"no-dupe-args": [2],
-		"no-dupe-keys": [2],
-		"no-duplicate-case": [2],
-		"no-else-return": [0],
-		"no-empty": [2],
-		"no-empty-character-class": [2],
-		"no-empty-label": [2],
-		"no-eq-null": [0],
-		"no-eval": [2],
-		"no-ex-assign": [2],
-		"no-extend-native": [2],
-		"no-extra-bind": [2],
-		"no-extra-boolean-cast": [2],
-		"no-extra-parens": [0],
-		"no-extra-semi": [2],
-		"no-fallthrough": [2],
-		"no-floating-decimal": [2],
-		"no-func-assign": [2],
-		"no-implied-eval": [2],
-		"no-inline-comments": [0],
-		"no-inner-declarations": [2, "functions"],
-		"no-invalid-regexp": [2],
-		"no-irregular-whitespace": [2],
-		"no-iterator": [2],
-		"no-label-var": [2],
-		"no-labels": [2],
-		"no-lone-blocks": [2],
-		"no-lonely-if": [2],
-		"no-loop-func": [2],
-		"no-mixed-requires": [0, false],
-		"no-mixed-spaces-and-tabs": [2, false],
-		"no-multi-spaces": [2],
-		"no-multi-str": [2],
-		"no-multiple-empty-lines": [2, {"max": 1}],
-		"no-native-reassign": [2],
-		"no-negated-in-lhs": [2],
-		"no-nested-ternary": [0],
-		"no-new": [2],
-		"no-new-func": [2],
-		"no-new-object": [2],
-		"no-new-require": [0],
-		"no-new-wrappers": [2],
-		"no-obj-calls": [2],
-		"no-octal": [2],
-		"no-octal-escape": [2],
-		"no-param-reassign": [2],
-		"no-path-concat": [0],
-		"no-plusplus": [0],
-		"no-process-env": [0],
-		"no-process-exit": [2],
-		"no-proto": [2],
-		"no-redeclare": [2],
-		"no-regex-spaces": [2],
-		"no-reserved-keys": [2],
-		"no-restricted-modules": [0],
-		"no-return-assign": [2, "always"],
-		"no-script-url": [2],
-		"no-self-compare": [0],
-		"no-sequences": [2],
-		"no-shadow": [2],
-		"no-shadow-restricted-names": [2],
-		"no-space-before-semi": [2],
-		"no-spaced-func": [2],
-		"no-sparse-arrays": [2],
-		"no-sync": [0],
-		"no-ternary": [0],
-		"no-this-before-super": [2],
-		"no-throw-literal": [2],
-		"no-trailing-spaces": [2, { "skipBlankLines": false }],
-		"no-undef": [2],
-		"no-undef-init": [2],
-		"no-undefined": [0],
-		"no-underscore-dangle": [2],
-		"no-unexpected-multiline": [2],
-		"no-unneeded-ternary": [2],
-		"no-unreachable": [2],
-		"no-unused-expressions": [2],
-		"no-unused-vars": [2, { "vars": "all", "args": "after-used" }],
-		"no-use-before-define": [2],
-		"no-void": [0],
-		"no-warning-comments": [0, { "terms": ["todo", "fixme", "xxx"], "location": "start" }],
-		"no-with": [2],
-		"no-wrap-func": [2],
-		"object-curly-spacing": [2, "always"],
-		"object-shorthand": [2, "never"],
-		"one-var": [0],
-		"operator-assignment": [0, "always"],
-		"operator-linebreak": [2, "none"],
-		"padded-blocks": [0],
-		"prefer-const": [0],
-		"quote-props": [0],
-		"radix": [0],
-		"semi": [2],
-		"semi-spacing": [2, { "before": false, "after": true }],
-		"sort-vars": [0],
-		"space-after-keywords": [2, "always"],
-		"space-before-function-paren": [2, { "anonymous": "always", "named": "never" }],
-		"space-before-blocks": [0, "always"],
-		"space-in-brackets": [0, "never", {
-			"singleValue": true,
-			"arraysInArrays": false,
-			"arraysInObjects": false,
-			"objectsInArrays": true,
-			"objectsInObjects": true,
-			"propertyName": false
-		}],
-		"space-in-parens": [2, "never"],
-		"space-infix-ops": [2],
-		"space-return-throw-case": [2],
-		"space-unary-ops": [2, { "words": true, "nonwords": false }],
-		"spaced-comment": [2, "always"],
-		"spaced-line-comment": [0, "always"],
-		"strict": [2, "global"],
-		"use-isnan": [2],
-		"valid-jsdoc": [0],
-		"valid-typeof": [2],
-		"vars-on-top": [0],
-		"wrap-iife": [2],
-		"wrap-regex": [2],
-		"yoda": [2, "never", { "exceptRange": true, "onlyEquality": false }]
-	}
-}
deleted file mode 100644
--- a/node_modules/alfred/node_modules/extend/.npmignore
+++ /dev/null
@@ -1 +0,0 @@
-test
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/node_modules/extend/.travis.yml
+++ /dev/null
@@ -1,44 +0,0 @@
-language: node_js
-node_js:
-  - "iojs-v2.3"
-  - "iojs-v2.2"
-  - "iojs-v2.1"
-  - "iojs-v2.0"
-  - "iojs-v1.8"
-  - "iojs-v1.7"
-  - "iojs-v1.6"
-  - "iojs-v1.5"
-  - "iojs-v1.4"
-  - "iojs-v1.3"
-  - "iojs-v1.2"
-  - "iojs-v1.1"
-  - "iojs-v1.0"
-  - "0.12"
-  - "0.11"
-  - "0.10"
-  - "0.9"
-  - "0.8"
-  - "0.6"
-  - "0.4"
-before_install:
-  - '[ "${TRAVIS_NODE_VERSION}" = "0.6" ] || npm install -g npm@1.4.28 && npm install -g npm'
-sudo: false
-matrix:
-  fast_finish: true
-  allow_failures:
-    - node_js: "iojs-v2.2"
-    - node_js: "iojs-v2.1"
-    - node_js: "iojs-v2.0"
-    - node_js: "iojs-v1.7"
-    - node_js: "iojs-v1.6"
-    - node_js: "iojs-v1.5"
-    - node_js: "iojs-v1.4"
-    - node_js: "iojs-v1.3"
-    - node_js: "iojs-v1.2"
-    - node_js: "iojs-v1.1"
-    - node_js: "iojs-v1.0"
-    - node_js: "0.11"
-    - node_js: "0.9"
-    - node_js: "0.8"
-    - node_js: "0.6"
-    - node_js: "0.4"
deleted file mode 100644
--- a/node_modules/alfred/node_modules/extend/CHANGELOG.md
+++ /dev/null
@@ -1,69 +0,0 @@
-3.0.0 / 2015-07-01
-==================
-  * [Possible breaking change] Use global "strict" directive (#32)
-  * [Tests] `int` is an ES3 reserved word
-  * [Tests] Test up to `io.js` `v2.3`
-  * [Tests] Add `npm run eslint`
-  * [Dev Deps] Update `covert`, `jscs`
-
-2.0.1 / 2015-04-25
-==================
-  * Use an inline `isArray` check, for ES3 browsers. (#27)
-  * Some old browsers fail when an identifier is `toString`
-  * Test latest `node` and `io.js` versions on `travis-ci`; speed up builds
-  * Add license info to package.json (#25)
-  * Update `tape`, `jscs`
-  * Adding a CHANGELOG
-
-2.0.0 / 2014-10-01
-==================
-  * Increase code coverage to 100%; run code coverage as part of tests
-  * Add `npm run lint`; Run linter as part of tests
-  * Remove nodeType and setInterval checks in isPlainObject
-  * Updating `tape`, `jscs`, `covert`
-  * General style and README cleanup
-
-1.3.0 / 2014-06-20
-==================
-  * Add component.json for browser support (#18)
-  * Use SVG for badges in README (#16)
-  * Updating `tape`, `covert`
-  * Updating travis-ci to work with multiple node versions
-  * Fix `deep === false` bug (returning target as {}) (#14)
-  * Fixing constructor checks in isPlainObject
-  * Adding additional test coverage
-  * Adding `npm run coverage`
-  * Add LICENSE (#13)
-  * Adding a warning about `false`, per #11
-  * General style and whitespace cleanup
-
-1.2.1 / 2013-09-14
-==================
-  * Fixing hasOwnProperty bugs that would only have shown up in specific browsers. Fixes #8
-  * Updating `tape`
-
-1.2.0 / 2013-09-02
-==================
-  * Updating the README: add badges
-  * Adding a missing variable reference.
-  * Using `tape` instead of `buster` for tests; add more tests (#7)
-  * Adding node 0.10 to Travis CI (#6)
-  * Enabling "npm test" and cleaning up package.json (#5)
-  * Add Travis CI.
-
-1.1.3 / 2012-12-06
-==================
-  * Added unit tests.
-  * Ensure extend function is named. (Looks nicer in a stack trace.)
-  * README cleanup.
-
-1.1.1 / 2012-11-07
-==================
-  * README cleanup.
-  * Added installation instructions.
-  * Added a missing semicolon
-
-1.0.0 / 2012-04-08
-==================
-  * Initial commit
-
deleted file mode 100644
--- a/node_modules/alfred/node_modules/extend/README.md
+++ /dev/null
@@ -1,62 +0,0 @@
-[![Build Status][travis-svg]][travis-url]
-[![dependency status][deps-svg]][deps-url]
-[![dev dependency status][dev-deps-svg]][dev-deps-url]
-
-# extend() for Node.js <sup>[![Version Badge][npm-version-png]][npm-url]</sup>
-
-`node-extend` is a port of the classic extend() method from jQuery. It behaves as you expect. It is simple, tried and true.
-
-## Installation
-
-This package is available on [npm][npm-url] as: `extend`
-
-``` sh
-npm install extend
-```
-
-## Usage
-
-**Syntax:** extend **(** [`deep`], `target`, `object1`, [`objectN`] **)**
-
-*Extend one object with one or more others, returning the modified object.*
-
-Keep in mind that the target object will be modified, and will be returned from extend().
-
-If a boolean true is specified as the first argument, extend performs a deep copy, recursively copying any objects it finds. Otherwise, the copy will share structure with the original object(s).
-Undefined properties are not copied. However, properties inherited from the object's prototype will be copied over.
-Warning: passing `false` as the first argument is not supported.
-
-### Arguments
-
-* `deep` *Boolean* (optional)
-If set, the merge becomes recursive (i.e. deep copy).
-* `target`	*Object*
-The object to extend.
-* `object1`	*Object*
-The object that will be merged into the first.
-* `objectN` *Object* (Optional)
-More objects to merge into the first.
-
-## License
-
-`node-extend` is licensed under the [MIT License][mit-license-url].
-
-## Acknowledgements
-
-All credit to the jQuery authors for perfecting this amazing utility.
-
-Ported to Node.js by [Stefan Thomas][github-justmoon] with contributions by [Jonathan Buchanan][github-insin] and [Jordan Harband][github-ljharb].
-
-[travis-svg]: https://travis-ci.org/justmoon/node-extend.svg
-[travis-url]: https://travis-ci.org/justmoon/node-extend
-[npm-url]: https://npmjs.org/package/extend
-[mit-license-url]: http://opensource.org/licenses/MIT
-[github-justmoon]: https://github.com/justmoon
-[github-insin]: https://github.com/insin
-[github-ljharb]: https://github.com/ljharb
-[npm-version-png]: http://vb.teelaun.ch/justmoon/node-extend.svg
-[deps-svg]: https://david-dm.org/justmoon/node-extend.svg
-[deps-url]: https://david-dm.org/justmoon/node-extend
-[dev-deps-svg]: https://david-dm.org/justmoon/node-extend/dev-status.svg
-[dev-deps-url]: https://david-dm.org/justmoon/node-extend#info=devDependencies
-
deleted file mode 100644
--- a/node_modules/alfred/node_modules/formidable/.npmignore
+++ /dev/null
@@ -1,7 +0,0 @@
-/test
-/tool
-/example
-/benchmark
-*.upload
-*.un~
-*.http
deleted file mode 100644
--- a/node_modules/alfred/node_modules/formidable/.travis.yml
+++ /dev/null
@@ -1,5 +0,0 @@
-language: node_js
-node_js:
-  - 0.8
-  - "0.10"
-  - 0.11
deleted file mode 100644
--- a/node_modules/alfred/node_modules/formidable/Readme.md
+++ /dev/null
@@ -1,425 +0,0 @@
-# Formidable
-
-[![Build Status](https://secure.travis-ci.org/felixge/node-formidable.png?branch=master)](http://travis-ci.org/felixge/node-formidable)
-
-## Purpose
-
-A node.js module for parsing form data, especially file uploads.
-
-## Current status
-
-This module was developed for [Transloadit](http://transloadit.com/), a service focused on uploading
-and encoding images and videos. It has been battle-tested against hundreds of GB of file uploads from
-a large variety of clients and is considered production-ready.
-
-## Features
-
-* Fast (~500mb/sec), non-buffering multipart parser
-* Automatically writing file uploads to disk
-* Low memory footprint
-* Graceful error handling
-* Very high test coverage
-
-## Installation
-
-This is a low level package, and if you're using a high level framework such as Express, chances are it's already included in it. You can [read this discussion](http://stackoverflow.com/questions/11295554/how-to-disable-express-bodyparser-for-file-uploads-node-js) about how Formidable is integrated with Express.
-
-Via [npm](http://github.com/isaacs/npm):
-```
-npm install formidable@latest
-```
-Manually:
-```
-git clone git://github.com/felixge/node-formidable.git formidable
-vim my.js
-# var formidable = require('./formidable');
-```
-
-Note: Formidable requires [gently](http://github.com/felixge/node-gently) to run the unit tests, but you won't need it for just using the library.
-
-## Example
-
-Parse an incoming file upload.
-```javascript
-var formidable = require('formidable'),
-    http = require('http'),
-    util = require('util');
-
-http.createServer(function(req, res) {
-  if (req.url == '/upload' && req.method.toLowerCase() == 'post') {
-    // parse a file upload
-    var form = new formidable.IncomingForm();
-
-    form.parse(req, function(err, fields, files) {
-      res.writeHead(200, {'content-type': 'text/plain'});
-      res.write('received upload:\n\n');
-      res.end(util.inspect({fields: fields, files: files}));
-    });
-
-    return;
-  }
-
-  // show a file upload form
-  res.writeHead(200, {'content-type': 'text/html'});
-  res.end(
-    '<form action="/upload" enctype="multipart/form-data" method="post">'+
-    '<input type="text" name="title"><br>'+
-    '<input type="file" name="upload" multiple="multiple"><br>'+
-    '<input type="submit" value="Upload">'+
-    '</form>'
-  );
-}).listen(8080);
-```
-## API
-
-### Formidable.IncomingForm
-```javascript
-var form = new formidable.IncomingForm()
-```
-Creates a new incoming form.
-
-```javascript
-form.encoding = 'utf-8';
-```
-Sets encoding for incoming form fields.
-
-```javascript
-form.uploadDir = "/my/dir";
-```
-Sets the directory for placing file uploads in. You can move them later on using
-`fs.rename()`. The default is `os.tmpDir()`.
-
-```javascript
-form.keepExtensions = false;
-```
-If you want the files written to `form.uploadDir` to include the extensions of the original files, set this property to `true`.
-
-```javascript
-form.type
-```
-Either 'multipart' or 'urlencoded' depending on the incoming request.
-
-```javascript
-form.maxFieldsSize = 2 * 1024 * 1024;
-```
-Limits the amount of memory all fields together (except files) can allocate in bytes.
-If this value is exceeded, an `'error'` event is emitted. The default
-size is 2MB.
-
-```javascript
-form.maxFields = 1000;
-```
-Limits the number of fields that the querystring parser will decode. Defaults
-to 1000 (0 for unlimited).
-
-```javascript
-form.hash = false;
-```
-If you want checksums calculated for incoming files, set this to either `'sha1'` or `'md5'`.
-
-```javascript
-form.multiples = false;
-```
-If this option is enabled, when you call `form.parse`, the `files` argument will contain arrays of files for inputs which submit multiple files using the HTML5 `multiple` attribute.
-
-```javascript
-form.bytesReceived
-```
-The amount of bytes received for this form so far.
-
-```javascript
-form.bytesExpected
-```
-The expected number of bytes in this form.
-
-```javascript
-form.parse(request, [cb]);
-```
-Parses an incoming node.js `request` containing form data. If `cb` is provided, all fields and files are collected and passed to the callback:
-
-
-```javascript
-form.parse(req, function(err, fields, files) {
-  // ...
-});
-
-form.onPart(part);
-```
-You may overwrite this method if you are interested in directly accessing the multipart stream. Doing so will disable any `'field'` / `'file'` events  processing which would occur otherwise, making you fully responsible for handling the processing.
-
-```javascript
-form.onPart = function(part) {
-  part.addListener('data', function() {
-    // ...
-  });
-}
-```
-If you want to use formidable to only handle certain parts for you, you can do so:
-```javascript
-form.onPart = function(part) {
-  if (!part.filename) {
-    // let formidable handle all non-file parts
-    form.handlePart(part);
-  }
-}
-```
-Check the code in this method for further inspiration.
-
-
-### Formidable.File
-```javascript
-file.size = 0
-```
-The size of the uploaded file in bytes. If the file is still being uploaded (see `'fileBegin'` event), this property says how many bytes of the file have been written to disk yet.
-```javascript
-file.path = null
-```
-The path this file is being written to. You can modify this in the `'fileBegin'` event in
-case you are unhappy with the way formidable generates a temporary path for your files.
-```javascript
-file.name = null
-```
-The name this file had according to the uploading client.
-```javascript
-file.type = null
-```
-The mime type of this file, according to the uploading client.
-```javascript
-file.lastModifiedDate = null
-```
-A date object (or `null`) containing the time this file was last written to. Mostly
-here for compatibility with the [W3C File API Draft](http://dev.w3.org/2006/webapi/FileAPI/).
-```javascript
-file.hash = null
-```
-If hash calculation was set, you can read the hex digest out of this var.
-
-#### Formidable.File#toJSON()
-
-  This method returns a JSON-representation of the file, allowing you to
-  `JSON.stringify()` the file which is useful for logging and responding
-  to requests.
-
-### Events
-
-
-#### 'progress'
-```javascript
-form.on('progress', function(bytesReceived, bytesExpected) {
-});
-```
-Emitted after each incoming chunk of data that has been parsed. Can be used to roll your own progress bar.
-
-
-
-#### 'field'
-```javascript
-form.on('field', function(name, value) {
-});
-```
-
-#### 'fileBegin'
-
-Emitted whenever a field / value pair has been received.
-```javascript
-form.on('fileBegin', function(name, file) {
-});
-```
-
-#### 'file'
-
-Emitted whenever a new file is detected in the upload stream. Use this even if
-you want to stream the file to somewhere else while buffering the upload on
-the file system.
-
-Emitted whenever a field / file pair has been received. `file` is an instance of `File`.
-```javascript
-form.on('file', function(name, file) {
-});
-```
-
-#### 'error'
-
-Emitted when there is an error processing the incoming form. A request that experiences an error is automatically paused, you will have to manually call `request.resume()` if you want the request to continue firing `'data'` events.
-```javascript
-form.on('error', function(err) {
-});
-```
-
-#### 'aborted'
-
-
-Emitted when the request was aborted by the user. Right now this can be due to a 'timeout' or 'close' event on the socket. After this event is emitted, an `error` event will follow. In the future there will be a separate 'timeout' event (needs a change in the node core).
-```javascript
-form.on('aborted', function() {
-});
-```
-
-##### 'end'
-```javascript
-form.on('end', function() {
-});
-```
-Emitted when the entire request has been received, and all contained files have finished flushing to disk. This is a great place for you to send your response.
-
-
-
-## Changelog
-
-### v1.0.14
-
-* Add failing hash tests. (Ben Trask)
-* Enable hash calculation again (Eugene Girshov)
-* Test for immediate data events (Tim Smart)
-* Re-arrange IncomingForm#parse (Tim Smart)
-
-### v1.0.13
-
-* Only update hash if update method exists (Sven Lito)
-* According to travis v0.10 needs to go quoted (Sven Lito)
-* Bumping build node versions (Sven Lito)
-* Additional fix for empty requests (Eugene Girshov)
-* Change the default to 1000, to match the new Node behaviour. (OrangeDog)
-* Add ability to control maxKeys in the querystring parser. (OrangeDog)
-* Adjust test case to work with node 0.9.x (Eugene Girshov)
-* Update package.json (Sven Lito)
-* Path adjustment according to eb4468b (Markus Ast)
-
-### v1.0.12
-
-* Emit error on aborted connections (Eugene Girshov)
-* Add support for empty requests (Eugene Girshov)
-* Fix name/filename handling in Content-Disposition (jesperp)
-* Tolerate malformed closing boundary in multipart (Eugene Girshov)
-* Ignore preamble in multipart messages (Eugene Girshov)
-* Add support for application/json (Mike Frey, Carlos Rodriguez)
-* Add support for Base64 encoding (Elmer Bulthuis)
-* Add File#toJSON (TJ Holowaychuk)
-* Remove support for Node.js 0.4 & 0.6 (Andrew Kelley)
-* Documentation improvements (Sven Lito, Andre Azevedo)
-* Add support for application/octet-stream (Ion Lupascu, Chris Scribner)
-* Use os.tmpDir() to get tmp directory (Andrew Kelley)
-* Improve package.json (Andrew Kelley, Sven Lito)
-* Fix benchmark script (Andrew Kelley)
-* Fix scope issue in incoming_forms (Sven Lito)
-* Fix file handle leak on error (OrangeDog)
-
-### v1.0.11
-
-* Calculate checksums for incoming files (sreuter)
-* Add definition parameters to "IncomingForm" as an argument (Math-)
-
-### v1.0.10
-
-* Make parts to be proper Streams (Matt Robenolt)
-
-### v1.0.9
-
-* Emit progress when content length header parsed (Tim Koschützki)
-* Fix Readme syntax due to GitHub changes (goob)
-* Replace references to old 'sys' module in Readme with 'util' (Peter Sugihara)
-
-### v1.0.8
-
-* Strip potentially unsafe characters when using `keepExtensions: true`.
-* Switch to utest / urun for testing
-* Add travis build
-
-### v1.0.7
-
-* Remove file from package that was causing problems when installing on windows. (#102)
-* Fix typos in Readme (Jason Davies).
-
-### v1.0.6
-
-* Do not default to the default to the field name for file uploads where
-  filename="".
-
-### v1.0.5
-
-* Support filename="" in multipart parts
-* Explain unexpected end() errors in parser better
-
-**Note:** Starting with this version, formidable emits 'file' events for empty
-file input fields. Previously those were incorrectly emitted as regular file
-input fields with value = "".
-
-### v1.0.4
-
-* Detect a good default tmp directory regardless of platform. (#88)
-
-### v1.0.3
-
-* Fix problems with utf8 characters (#84) / semicolons in filenames (#58)
-* Small performance improvements
-* New test suite and fixture system
-
-### v1.0.2
-
-* Exclude node\_modules folder from git
-* Implement new `'aborted'` event
-* Fix files in example folder to work with recent node versions
-* Make gently a devDependency
-
-[See Commits](https://github.com/felixge/node-formidable/compare/v1.0.1...v1.0.2)
-
-### v1.0.1
-
-* Fix package.json to refer to proper main directory. (#68, Dean Landolt)
-
-[See Commits](https://github.com/felixge/node-formidable/compare/v1.0.0...v1.0.1)
-
-### v1.0.0
-
-* Add support for multipart boundaries that are quoted strings. (Jeff Craig)
-
-This marks the beginning of development on version 2.0 which will include
-several architectural improvements.
-
-[See Commits](https://github.com/felixge/node-formidable/compare/v0.9.11...v1.0.0)
-
-### v0.9.11
-
-* Emit `'progress'` event when receiving data, regardless of parsing it. (Tim Koschützki)
-* Use [W3C FileAPI Draft](http://dev.w3.org/2006/webapi/FileAPI/) properties for File class
-
-**Important:** The old property names of the File class will be removed in a
-future release.
-
-[See Commits](https://github.com/felixge/node-formidable/compare/v0.9.10...v0.9.11)
-
-### Older releases
-
-These releases were done before starting to maintain the above Changelog:
-
-* [v0.9.10](https://github.com/felixge/node-formidable/compare/v0.9.9...v0.9.10)
-* [v0.9.9](https://github.com/felixge/node-formidable/compare/v0.9.8...v0.9.9)
-* [v0.9.8](https://github.com/felixge/node-formidable/compare/v0.9.7...v0.9.8)
-* [v0.9.7](https://github.com/felixge/node-formidable/compare/v0.9.6...v0.9.7)
-* [v0.9.6](https://github.com/felixge/node-formidable/compare/v0.9.5...v0.9.6)
-* [v0.9.5](https://github.com/felixge/node-formidable/compare/v0.9.4...v0.9.5)
-* [v0.9.4](https://github.com/felixge/node-formidable/compare/v0.9.3...v0.9.4)
-* [v0.9.3](https://github.com/felixge/node-formidable/compare/v0.9.2...v0.9.3)
-* [v0.9.2](https://github.com/felixge/node-formidable/compare/v0.9.1...v0.9.2)
-* [v0.9.1](https://github.com/felixge/node-formidable/compare/v0.9.0...v0.9.1)
-* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)
-* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)
-* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)
-* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)
-* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)
-* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)
-* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)
-* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)
-* [v0.1.0](https://github.com/felixge/node-formidable/commits/v0.1.0)
-
-## License
-
-Formidable is licensed under the MIT license.
-
-## Ports
-
-* [multipart-parser](http://github.com/FooBarWidget/multipart-parser): a C++ parser based on formidable
-
-## Credits
-
-* [Ryan Dahl](http://twitter.com/ryah) for his work on [http-parser](http://github.com/ry/http-parser) which heavily inspired multipart_parser.js
deleted file mode 100644
--- a/node_modules/alfred/node_modules/isarray/README.md
+++ /dev/null
@@ -1,54 +0,0 @@
-
-# isarray
-
-`Array#isArray` for older browsers.
-
-## Usage
-
-```js
-var isArray = require('isarray');
-
-console.log(isArray([])); // => true
-console.log(isArray({})); // => false
-```
-
-## Installation
-
-With [npm](http://npmjs.org) do
-
-```bash
-$ npm install isarray
-```
-
-Then bundle for the browser with
-[browserify](https://github.com/substack/browserify).
-
-With [component](http://component.io) do
-
-```bash
-$ component install juliangruber/isarray
-```
-
-## License
-
-(MIT)
-
-Copyright (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;
-
-Permission is hereby granted, free of charge, to any person obtaining a copy of
-this software and associated documentation files (the "Software"), to deal in
-the Software without restriction, including without limitation the rights to
-use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
-of the Software, and to permit persons to whom the Software is furnished to do
-so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
deleted file mode 100644
deleted file mode 100644
--- a/node_modules/alfred/node_modules/mime/README.md
+++ /dev/null
@@ -1,90 +0,0 @@
-# mime
-
-Comprehensive MIME type mapping API based on mime-db module.
-
-## Install
-
-Install with [npm](http://github.com/isaacs/npm):
-
-    npm install mime
-
-## Contributing / Testing
-
-    npm run test
-
-## Command Line
-
-    mime [path_string]
-
-E.g.
-
-    > mime scripts/jquery.js
-    application/javascript
-
-## API - Queries
-
-### mime.lookup(path)
-Get the mime type associated with a file, if no mime type is found `application/octet-stream` is returned. Performs a case-insensitive lookup using the extension in `path` (the substring after the last '/' or '.').  E.g.
-
-```js
-var mime = require('mime');
-
-mime.lookup('/path/to/file.txt');         // => 'text/plain'
-mime.lookup('file.txt');                  // => 'text/plain'
-mime.lookup('.TXT');                      // => 'text/plain'
-mime.lookup('htm');                       // => 'text/html'
-```
-
-### mime.default_type
-Sets the mime type returned when `mime.lookup` fails to find the extension searched for. (Default is `application/octet-stream`.)
-
-### mime.extension(type)
-Get the default extension for `type`
-
-```js
-mime.extension('text/html');                 // => 'html'
-mime.extension('application/octet-stream');  // => 'bin'
-```
-
-### mime.charsets.lookup()
-
-Map mime-type to charset
-
-```js
-mime.charsets.lookup('text/plain');        // => 'UTF-8'
-```
-
-(The logic for charset lookups is pretty rudimentary.  Feel free to suggest improvements.)
-
-## API - Defining Custom Types
-
-Custom type mappings can be added on a per-project basis via the following APIs.
-
-### mime.define()
-
-Add custom mime/extension mappings
-
-```js
-mime.define({
-    'text/x-some-format': ['x-sf', 'x-sft', 'x-sfml'],
-    'application/x-my-type': ['x-mt', 'x-mtt'],
-    // etc ...
-});
-
-mime.lookup('x-sft');                 // => 'text/x-some-format'
-```
-
-The first entry in the extensions array is returned by `mime.extension()`. E.g.
-
-```js
-mime.extension('text/x-some-format'); // => 'x-sf'
-```
-
-### mime.load(filepath)
-
-Load mappings from an Apache ".types" format file
-
-```js
-mime.load('./my_project.types');
-```
-The .types file format is simple -  See the `types` dir for examples.
deleted file mode 100644
--- a/node_modules/alfred/node_modules/qs/.jshintignore
+++ /dev/null
@@ -1 +0,0 @@
-node_modules
deleted file mode 100644
--- a/node_modules/alfred/node_modules/qs/.jshintrc
+++ /dev/null
@@ -1,10 +0,0 @@
-{
-  "node": true,
-
-  "curly": true,
-  "latedef": true,
-  "quotmark": true,
-  "undef": true,
-  "unused": true,
-  "trailing": true
-}
deleted file mode 100644
--- a/node_modules/alfred/node_modules/qs/.npmignore
+++ /dev/null
@@ -1,18 +0,0 @@
-.idea
-*.iml
-npm-debug.log
-dump.rdb
-node_modules
-results.tap
-results.xml
-npm-shrinkwrap.json
-config.json
-.DS_Store
-*/.DS_Store
-*/*/.DS_Store
-._*
-*/._*
-*/*/._*
-coverage.*
-lib-cov
-complexity.md
deleted file mode 100644
--- a/node_modules/alfred/node_modules/qs/.travis.yml
+++ /dev/null
@@ -1,4 +0,0 @@
-language: node_js
-
-node_js:
-  - 0.10
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/node_modules/qs/CHANGELOG.md
+++ /dev/null
@@ -1,68 +0,0 @@
-
-## [**2.3.3**](https://github.com/hapijs/qs/issues?milestone=18&state=open)
-- [**#59**](https://github.com/hapijs/qs/issues/59) make sure array indexes are &gt;= 0, closes #57
-- [**#58**](https://github.com/hapijs/qs/issues/58) make qs usable for browser loader
-
-## [**2.3.2**](https://github.com/hapijs/qs/issues?milestone=17&state=closed)
-- [**#55**](https://github.com/hapijs/qs/issues/55) allow merging a string into an object
-
-## [**2.3.1**](https://github.com/hapijs/qs/issues?milestone=16&state=closed)
-- [**#52**](https://github.com/hapijs/qs/issues/52) Return &quot;undefined&quot; and &quot;false&quot; instead of throwing &quot;TypeError&quot;.
-
-## [**2.3.0**](https://github.com/hapijs/qs/issues?milestone=15&state=closed)
-- [**#50**](https://github.com/hapijs/qs/issues/50) add option to omit array indices, closes #46
-
-## [**2.2.5**](https://github.com/hapijs/qs/issues?milestone=14&state=closed)
-- [**#39**](https://github.com/hapijs/qs/issues/39) Is there an alternative to Buffer.isBuffer?
-- [**#49**](https://github.com/hapijs/qs/issues/49) refactor utils.merge, fixes #45
-- [**#41**](https://github.com/hapijs/qs/issues/41) avoid browserifying Buffer, for #39
-
-## [**2.2.4**](https://github.com/hapijs/qs/issues?milestone=13&state=closed)
-- [**#38**](https://github.com/hapijs/qs/issues/38) how to handle object keys beginning with a number
-
-## [**2.2.3**](https://github.com/hapijs/qs/issues?milestone=12&state=closed)
-- [**#37**](https://github.com/hapijs/qs/issues/37) parser discards first empty value in array
-- [**#36**](https://github.com/hapijs/qs/issues/36) Update to lab 4.x
-
-## [**2.2.2**](https://github.com/hapijs/qs/issues?milestone=11&state=closed)
-- [**#33**](https://github.com/hapijs/qs/issues/33) Error when plain object in a value
-- [**#34**](https://github.com/hapijs/qs/issues/34) use Object.prototype.hasOwnProperty.call instead of obj.hasOwnProperty
-- [**#24**](https://github.com/hapijs/qs/issues/24) Changelog? Semver?
-
-## [**2.2.1**](https://github.com/hapijs/qs/issues?milestone=10&state=closed)
-- [**#32**](https://github.com/hapijs/qs/issues/32) account for circular references properly, closes #31
-- [**#31**](https://github.com/hapijs/qs/issues/31) qs.parse stackoverflow on circular objects
-
-## [**2.2.0**](https://github.com/hapijs/qs/issues?milestone=9&state=closed)
-- [**#26**](https://github.com/hapijs/qs/issues/26) Don&#39;t use Buffer global if it&#39;s not present
-- [**#30**](https://github.com/hapijs/qs/issues/30) Bug when merging non-object values into arrays
-- [**#29**](https://github.com/hapijs/qs/issues/29) Don&#39;t call Utils.clone at the top of Utils.merge
-- [**#23**](https://github.com/hapijs/qs/issues/23) Ability to not limit parameters?
-
-## [**2.1.0**](https://github.com/hapijs/qs/issues?milestone=8&state=closed)
-- [**#22**](https://github.com/hapijs/qs/issues/22) Enable using a RegExp as delimiter
-
-## [**2.0.0**](https://github.com/hapijs/qs/issues?milestone=7&state=closed)
-- [**#18**](https://github.com/hapijs/qs/issues/18) Why is there arrayLimit?
-- [**#20**](https://github.com/hapijs/qs/issues/20) Configurable parametersLimit
-- [**#21**](https://github.com/hapijs/qs/issues/21) make all limits optional, for #18, for #20
-
-## [**1.2.2**](https://github.com/hapijs/qs/issues?milestone=6&state=closed)
-- [**#19**](https://github.com/hapijs/qs/issues/19) Don&#39;t overwrite null values
-
-## [**1.2.1**](https://github.com/hapijs/qs/issues?milestone=5&state=closed)
-- [**#16**](https://github.com/hapijs/qs/issues/16) ignore non-string delimiters
-- [**#15**](https://github.com/hapijs/qs/issues/15) Close code block
-
-## [**1.2.0**](https://github.com/hapijs/qs/issues?milestone=4&state=closed)
-- [**#12**](https://github.com/hapijs/qs/issues/12) Add optional delim argument
-- [**#13**](https://github.com/hapijs/qs/issues/13) fix #11: flattened keys in array are now correctly parsed
-
-## [**1.1.0**](https://github.com/hapijs/qs/issues?milestone=3&state=closed)
-- [**#7**](https://github.com/hapijs/qs/issues/7) Empty values of a POST array disappear after being submitted
-- [**#9**](https://github.com/hapijs/qs/issues/9) Should not omit equals signs (=) when value is null
-- [**#6**](https://github.com/hapijs/qs/issues/6) Minor grammar fix in README
-
-## [**1.0.2**](https://github.com/hapijs/qs/issues?milestone=2&state=closed)
-- [**#5**](https://github.com/hapijs/qs/issues/5) array holes incorrectly copied into object on large index
-
deleted file mode 100644
--- a/node_modules/alfred/node_modules/qs/CONTRIBUTING.md
+++ /dev/null
@@ -1 +0,0 @@
-Please view our [hapijs contributing guide](https://github.com/hapijs/hapi/blob/master/CONTRIBUTING.md).
deleted file mode 100644
--- a/node_modules/alfred/node_modules/qs/Makefile
+++ /dev/null
@@ -1,8 +0,0 @@
-test:
-	@node node_modules/lab/bin/lab -a code -L
-test-cov:
-	@node node_modules/lab/bin/lab -a code -t 100 -L
-test-cov-html:
-	@node node_modules/lab/bin/lab -a code -L -r html -o coverage.html
-
-.PHONY: test test-cov test-cov-html
deleted file mode 100755
--- a/node_modules/alfred/node_modules/qs/README.md
+++ /dev/null
@@ -1,222 +0,0 @@
-# qs
-
-A querystring parsing and stringifying library with some added security.
-
-[![Build Status](https://secure.travis-ci.org/hapijs/qs.svg)](http://travis-ci.org/hapijs/qs)
-
-Lead Maintainer: [Nathan LaFreniere](https://github.com/nlf)
-
-The **qs** module was originally created and maintained by [TJ Holowaychuk](https://github.com/visionmedia/node-querystring).
-
-## Usage
-
-```javascript
-var Qs = require('qs');
-
-var obj = Qs.parse('a=c');    // { a: 'c' }
-var str = Qs.stringify(obj);  // 'a=c'
-```
-
-### Parsing Objects
-
-```javascript
-Qs.parse(string, [options]);
-```
-
-**qs** allows you to create nested objects within your query strings, by surrounding the name of sub-keys with square brackets `[]`.
-For example, the string `'foo[bar]=baz'` converts to:
-
-```javascript
-{
-  foo: {
-    bar: 'baz'
-  }
-}
-```
-
-URI encoded strings work too:
-
-```javascript
-Qs.parse('a%5Bb%5D=c');
-// { a: { b: 'c' } }
-```
-
-You can also nest your objects, like `'foo[bar][baz]=foobarbaz'`:
-
-```javascript
-{
-  foo: {
-    bar: {
-      baz: 'foobarbaz'
-    }
-  }
-}
-```
-
-By default, when nesting objects **qs** will only parse up to 5 children deep. This means if you attempt to parse a string like
-`'a[b][c][d][e][f][g][h][i]=j'` your resulting object will be:
-
-```javascript
-{
-  a: {
-    b: {
-      c: {
-        d: {
-          e: {
-            f: {
-              '[g][h][i]': 'j'
-            }
-          }
-        }
-      }
-    }
-  }
-}
-```
-
-This depth can be overridden by passing a `depth` option to `Qs.parse(string, [options])`:
-
-```javascript
-Qs.parse('a[b][c][d][e][f][g][h][i]=j', { depth: 1 });
-// { a: { b: { '[c][d][e][f][g][h][i]': 'j' } } }
-```
-
-The depth limit helps mitigate abuse when **qs** is used to parse user input, and it is recommended to keep it a reasonably small number.
-
-For similar reasons, by default **qs** will only parse up to 1000 parameters. This can be overridden by passing a `parameterLimit` option:
-
-```javascript
-Qs.parse('a=b&c=d', { parameterLimit: 1 });
-// { a: 'b' }
-```
-
-An optional delimiter can also be passed:
-
-```javascript
-Qs.parse('a=b;c=d', { delimiter: ';' });
-// { a: 'b', c: 'd' }
-```
-
-Delimiters can be a regular expression too:
-
-```javascript
-Qs.parse('a=b;c=d,e=f', { delimiter: /[;,]/ });
-// { a: 'b', c: 'd', e: 'f' }
-```
-
-### Parsing Arrays
-
-**qs** can also parse arrays using a similar `[]` notation:
-
-```javascript
-Qs.parse('a[]=b&a[]=c');
-// { a: ['b', 'c'] }
-```
-
-You may specify an index as well:
-
-```javascript
-Qs.parse('a[1]=c&a[0]=b');
-// { a: ['b', 'c'] }
-```
-
-Note that the only difference between an index in an array and a key in an object is that the value between the brackets must be a number
-to create an array. When creating arrays with specific indices, **qs** will compact a sparse array to only the existing values preserving
-their order:
-
-```javascript
-Qs.parse('a[1]=b&a[15]=c');
-// { a: ['b', 'c'] }
-```
-
-Note that an empty string is also a value, and will be preserved:
-
-```javascript
-Qs.parse('a[]=&a[]=b');
-// { a: ['', 'b'] }
-Qs.parse('a[0]=b&a[1]=&a[2]=c');
-// { a: ['b', '', 'c'] }
-```
-
-**qs** will also limit specifying indices in an array to a maximum index of `20`. Any array members with an index of greater than `20` will
-instead be converted to an object with the index as the key:
-
-```javascript
-Qs.parse('a[100]=b');
-// { a: { '100': 'b' } }
-```
-
-This limit can be overridden by passing an `arrayLimit` option:
-
-```javascript
-Qs.parse('a[1]=b', { arrayLimit: 0 });
-// { a: { '1': 'b' } }
-```
-
-To disable array parsing entirely, set `arrayLimit` to `-1`.
-
-If you mix notations, **qs** will merge the two items into an object:
-
-```javascript
-Qs.parse('a[0]=b&a[b]=c');
-// { a: { '0': 'b', b: 'c' } }
-```
-
-You can also create arrays of objects:
-
-```javascript
-Qs.parse('a[][b]=c');
-// { a: [{ b: 'c' }] }
-```
-
-### Stringifying
-
-```javascript
-Qs.stringify(object, [options]);
-```
-
-When stringifying, **qs** always URI encodes output. Objects are stringified as you would expect:
-
-```javascript
-Qs.stringify({ a: 'b' });
-// 'a=b'
-Qs.stringify({ a: { b: 'c' } });
-// 'a%5Bb%5D=c'
-```
-
-Examples beyond this point will be shown as though the output is not URI encoded for clarity. Please note that the return values in these cases *will* be URI encoded during real usage.
-
-When arrays are stringified, by default they are given explicit indices:
-
-```javascript
-Qs.stringify({ a: ['b', 'c', 'd'] });
-// 'a[0]=b&a[1]=c&a[2]=d'
-```
-
-You may override this by setting the `indices` option to `false`:
-
-```javascript
-Qs.stringify({ a: ['b', 'c', 'd'] }, { indices: false });
-// 'a=b&a=c&a=d'
-```
-
-Empty strings and null values will omit the value, but the equals sign (=) remains in place:
-
-```javascript
-Qs.stringify({ a: '' });
-// 'a='
-```
-
-Properties that are set to `undefined` will be omitted entirely:
-
-```javascript
-Qs.stringify({ a: null, b: undefined });
-// 'a='
-```
-
-The delimiter may be overridden with stringify as well:
-
-```javascript
-Qs.stringify({ a: 'b', c: 'd' }, { delimiter: ';' });
-// 'a=b;c=d'
-```
deleted file mode 100755
--- a/node_modules/alfred/node_modules/qs/test/parse.js
+++ /dev/null
@@ -1,413 +0,0 @@
-/* eslint no-extend-native:0 */
-// Load modules
-
-var Code = require('code');
-var Lab = require('lab');
-var Qs = require('../');
-
-
-// Declare internals
-
-var internals = {};
-
-
-// Test shortcuts
-
-var lab = exports.lab = Lab.script();
-var expect = Code.expect;
-var describe = lab.experiment;
-var it = lab.test;
-
-
-describe('parse()', function () {
-
-    it('parses a simple string', function (done) {
-
-        expect(Qs.parse('0=foo')).to.deep.equal({ '0': 'foo' });
-        expect(Qs.parse('foo=c++')).to.deep.equal({ foo: 'c  ' });
-        expect(Qs.parse('a[>=]=23')).to.deep.equal({ a: { '>=': '23' } });
-        expect(Qs.parse('a[<=>]==23')).to.deep.equal({ a: { '<=>': '=23' } });
-        expect(Qs.parse('a[==]=23')).to.deep.equal({ a: { '==': '23' } });
-        expect(Qs.parse('foo')).to.deep.equal({ foo: '' });
-        expect(Qs.parse('foo=bar')).to.deep.equal({ foo: 'bar' });
-        expect(Qs.parse(' foo = bar = baz ')).to.deep.equal({ ' foo ': ' bar = baz ' });
-        expect(Qs.parse('foo=bar=baz')).to.deep.equal({ foo: 'bar=baz' });
-        expect(Qs.parse('foo=bar&bar=baz')).to.deep.equal({ foo: 'bar', bar: 'baz' });
-        expect(Qs.parse('foo=bar&baz')).to.deep.equal({ foo: 'bar', baz: '' });
-        expect(Qs.parse('cht=p3&chd=t:60,40&chs=250x100&chl=Hello|World')).to.deep.equal({
-            cht: 'p3',
-            chd: 't:60,40',
-            chs: '250x100',
-            chl: 'Hello|World'
-        });
-        done();
-    });
-
-    it('parses a single nested string', function (done) {
-
-        expect(Qs.parse('a[b]=c')).to.deep.equal({ a: { b: 'c' } });
-        done();
-    });
-
-    it('parses a double nested string', function (done) {
-
-        expect(Qs.parse('a[b][c]=d')).to.deep.equal({ a: { b: { c: 'd' } } });
-        done();
-    });
-
-    it('defaults to a depth of 5', function (done) {
-
-        expect(Qs.parse('a[b][c][d][e][f][g][h]=i')).to.deep.equal({ a: { b: { c: { d: { e: { f: { '[g][h]': 'i' } } } } } } });
-        done();
-    });
-
-    it('only parses one level when depth = 1', function (done) {
-
-        expect(Qs.parse('a[b][c]=d', { depth: 1 })).to.deep.equal({ a: { b: { '[c]': 'd' } } });
-        expect(Qs.parse('a[b][c][d]=e', { depth: 1 })).to.deep.equal({ a: { b: { '[c][d]': 'e' } } });
-        done();
-    });
-
-    it('parses a simple array', function (done) {
-
-        expect(Qs.parse('a=b&a=c')).to.deep.equal({ a: ['b', 'c'] });
-        done();
-    });
-
-    it('parses an explicit array', function (done) {
-
-        expect(Qs.parse('a[]=b')).to.deep.equal({ a: ['b'] });
-        expect(Qs.parse('a[]=b&a[]=c')).to.deep.equal({ a: ['b', 'c'] });
-        expect(Qs.parse('a[]=b&a[]=c&a[]=d')).to.deep.equal({ a: ['b', 'c', 'd'] });
-        done();
-    });
-
-    it('parses a mix of simple and explicit arrays', function (done) {
-
-        expect(Qs.parse('a=b&a[]=c')).to.deep.equal({ a: ['b', 'c'] });
-        expect(Qs.parse('a[]=b&a=c')).to.deep.equal({ a: ['b', 'c'] });
-        expect(Qs.parse('a[0]=b&a=c')).to.deep.equal({ a: ['b', 'c'] });
-        expect(Qs.parse('a=b&a[0]=c')).to.deep.equal({ a: ['b', 'c'] });
-        expect(Qs.parse('a[1]=b&a=c')).to.deep.equal({ a: ['b', 'c'] });
-        expect(Qs.parse('a=b&a[1]=c')).to.deep.equal({ a: ['b', 'c'] });
-        done();
-    });
-
-    it('parses a nested array', function (done) {
-
-        expect(Qs.parse('a[b][]=c&a[b][]=d')).to.deep.equal({ a: { b: ['c', 'd'] } });
-        expect(Qs.parse('a[>=]=25')).to.deep.equal({ a: { '>=': '25' } });
-        done();
-    });
-
-    it('allows to specify array indices', function (done) {
-
-        expect(Qs.parse('a[1]=c&a[0]=b&a[2]=d')).to.deep.equal({ a: ['b', 'c', 'd'] });
-        expect(Qs.parse('a[1]=c&a[0]=b')).to.deep.equal({ a: ['b', 'c'] });
-        expect(Qs.parse('a[1]=c')).to.deep.equal({ a: ['c'] });
-        done();
-    });
-
-    it('limits specific array indices to 20', function (done) {
-
-        expect(Qs.parse('a[20]=a')).to.deep.equal({ a: ['a'] });
-        expect(Qs.parse('a[21]=a')).to.deep.equal({ a: { '21': 'a' } });
-        done();
-    });
-
-    it('supports keys that begin with a number', function (done) {
-
-        expect(Qs.parse('a[12b]=c')).to.deep.equal({ a: { '12b': 'c' } });
-        done();
-    });
-
-    it('supports encoded = signs', function (done) {
-
-        expect(Qs.parse('he%3Dllo=th%3Dere')).to.deep.equal({ 'he=llo': 'th=ere' });
-        done();
-    });
-
-    it('is ok with url encoded strings', function (done) {
-
-        expect(Qs.parse('a[b%20c]=d')).to.deep.equal({ a: { 'b c': 'd' } });
-        expect(Qs.parse('a[b]=c%20d')).to.deep.equal({ a: { b: 'c d' } });
-        done();
-    });
-
-    it('allows brackets in the value', function (done) {
-
-        expect(Qs.parse('pets=["tobi"]')).to.deep.equal({ pets: '["tobi"]' });
-        expect(Qs.parse('operators=[">=", "<="]')).to.deep.equal({ operators: '[">=", "<="]' });
-        done();
-    });
-
-    it('allows empty values', function (done) {
-
-        expect(Qs.parse('')).to.deep.equal({});
-        expect(Qs.parse(null)).to.deep.equal({});
-        expect(Qs.parse(undefined)).to.deep.equal({});
-        done();
-    });
-
-    it('transforms arrays to objects', function (done) {
-
-        expect(Qs.parse('foo[0]=bar&foo[bad]=baz')).to.deep.equal({ foo: { '0': 'bar', bad: 'baz' } });
-        expect(Qs.parse('foo[bad]=baz&foo[0]=bar')).to.deep.equal({ foo: { bad: 'baz', '0': 'bar' } });
-        expect(Qs.parse('foo[bad]=baz&foo[]=bar')).to.deep.equal({ foo: { bad: 'baz', '0': 'bar' } });
-        expect(Qs.parse('foo[]=bar&foo[bad]=baz')).to.deep.equal({ foo: { '0': 'bar', bad: 'baz' } });
-        expect(Qs.parse('foo[bad]=baz&foo[]=bar&foo[]=foo')).to.deep.equal({ foo: { bad: 'baz', '0': 'bar', '1': 'foo' } });
-        expect(Qs.parse('foo[0][a]=a&foo[0][b]=b&foo[1][a]=aa&foo[1][b]=bb')).to.deep.equal({foo: [ {a: 'a', b: 'b'}, {a: 'aa', b: 'bb'} ]});
-        done();
-    });
-
-    it('can add keys to objects', function (done) {
-
-        expect(Qs.parse('a[b]=c&a=d')).to.deep.equal({ a: { b: 'c', d: true } });
-        done();
-    });
-
-    it('correctly prunes undefined values when converting an array to an object', function (done) {
-
-        expect(Qs.parse('a[2]=b&a[99999999]=c')).to.deep.equal({ a: { '2': 'b', '99999999': 'c' } });
-        done();
-    });
-
-    it('supports malformed uri characters', function (done) {
-
-        expect(Qs.parse('{%:%}')).to.deep.equal({ '{%:%}': '' });
-        expect(Qs.parse('foo=%:%}')).to.deep.equal({ foo: '%:%}' });
-        done();
-    });
-
-    it('doesn\'t produce empty keys', function (done) {
-
-        expect(Qs.parse('_r=1&')).to.deep.equal({ '_r': '1' });
-        done();
-    });
-
-    it('cannot override prototypes', function (done) {
-
-        var obj = Qs.parse('toString=bad&bad[toString]=bad&constructor=bad');
-        expect(typeof obj.toString).to.equal('function');
-        expect(typeof obj.bad.toString).to.equal('function');
-        expect(typeof obj.constructor).to.equal('function');
-        done();
-    });
-
-    it('cannot access Object prototype', function (done) {
-
-        Qs.parse('constructor[prototype][bad]=bad');
-        Qs.parse('bad[constructor][prototype][bad]=bad');
-        expect(typeof Object.prototype.bad).to.equal('undefined');
-        done();
-    });
-
-    it('parses arrays of objects', function (done) {
-
-        expect(Qs.parse('a[][b]=c')).to.deep.equal({ a: [{ b: 'c' }] });
-        expect(Qs.parse('a[0][b]=c')).to.deep.equal({ a: [{ b: 'c' }] });
-        done();
-    });
-
-    it('allows for empty strings in arrays', function (done) {
-
-        expect(Qs.parse('a[]=b&a[]=&a[]=c')).to.deep.equal({ a: ['b', '', 'c'] });
-        expect(Qs.parse('a[0]=b&a[1]=&a[2]=c&a[19]=')).to.deep.equal({ a: ['b', '', 'c', ''] });
-        expect(Qs.parse('a[]=&a[]=b&a[]=c')).to.deep.equal({ a: ['', 'b', 'c'] });
-        done();
-    });
-
-    it('compacts sparse arrays', function (done) {
-
-        expect(Qs.parse('a[10]=1&a[2]=2')).to.deep.equal({ a: ['2', '1'] });
-        done();
-    });
-
-    it('parses semi-parsed strings', function (done) {
-
-        expect(Qs.parse({ 'a[b]': 'c' })).to.deep.equal({ a: { b: 'c' } });
-        expect(Qs.parse({ 'a[b]': 'c', 'a[d]': 'e' })).to.deep.equal({ a: { b: 'c', d: 'e' } });
-        done();
-    });
-
-    it('parses buffers correctly', function (done) {
-
-        var b = new Buffer('test');
-        expect(Qs.parse({ a: b })).to.deep.equal({ a: b });
-        done();
-    });
-
-    it('continues parsing when no parent is found', function (done) {
-
-        expect(Qs.parse('[]&a=b')).to.deep.equal({ '0': '', a: 'b' });
-        expect(Qs.parse('[foo]=bar')).to.deep.equal({ foo: 'bar' });
-        done();
-    });
-
-    it('does not error when parsing a very long array', function (done) {
-
-        var str = 'a[]=a';
-        while (Buffer.byteLength(str) < 128 * 1024) {
-            str += '&' + str;
-        }
-
-        expect(function () {
-
-            Qs.parse(str);
-        }).to.not.throw();
-
-        done();
-    });
-
-    it('should not throw when a native prototype has an enumerable property', { parallel: false }, function (done) {
-
-        Object.prototype.crash = '';
-        Array.prototype.crash = '';
-        expect(Qs.parse.bind(null, 'a=b')).to.not.throw();
-        expect(Qs.parse('a=b')).to.deep.equal({ a: 'b' });
-        expect(Qs.parse.bind(null, 'a[][b]=c')).to.not.throw();
-        expect(Qs.parse('a[][b]=c')).to.deep.equal({ a: [{ b: 'c' }] });
-        delete Object.prototype.crash;
-        delete Array.prototype.crash;
-        done();
-    });
-
-    it('parses a string with an alternative string delimiter', function (done) {
-
-        expect(Qs.parse('a=b;c=d', { delimiter: ';' })).to.deep.equal({ a: 'b', c: 'd' });
-        done();
-    });
-
-    it('parses a string with an alternative RegExp delimiter', function (done) {
-
-        expect(Qs.parse('a=b; c=d', { delimiter: /[;,] */ })).to.deep.equal({ a: 'b', c: 'd' });
-        done();
-    });
-
-    it('does not use non-splittable objects as delimiters', function (done) {
-
-        expect(Qs.parse('a=b&c=d', { delimiter: true })).to.deep.equal({ a: 'b', c: 'd' });
-        done();
-    });
-
-    it('allows overriding parameter limit', function (done) {
-
-        expect(Qs.parse('a=b&c=d', { parameterLimit: 1 })).to.deep.equal({ a: 'b' });
-        done();
-    });
-
-    it('allows setting the parameter limit to Infinity', function (done) {
-
-        expect(Qs.parse('a=b&c=d', { parameterLimit: Infinity })).to.deep.equal({ a: 'b', c: 'd' });
-        done();
-    });
-
-    it('allows overriding array limit', function (done) {
-
-        expect(Qs.parse('a[0]=b', { arrayLimit: -1 })).to.deep.equal({ a: { '0': 'b' } });
-        expect(Qs.parse('a[-1]=b', { arrayLimit: -1 })).to.deep.equal({ a: { '-1': 'b' } });
-        expect(Qs.parse('a[0]=b&a[1]=c', { arrayLimit: 0 })).to.deep.equal({ a: { '0': 'b', '1': 'c' } });
-        done();
-    });
-
-    it('parses an object', function (done) {
-
-        var input = {
-            'user[name]': {'pop[bob]': 3},
-            'user[email]': null
-        };
-
-        var expected = {
-            'user': {
-                'name': {'pop[bob]': 3},
-                'email': null
-            }
-        };
-
-        var result = Qs.parse(input);
-
-        expect(result).to.deep.equal(expected);
-        done();
-    });
-
-    it('parses an object and not child values', function (done) {
-
-        var input = {
-            'user[name]': {'pop[bob]': { 'test': 3 }},
-            'user[email]': null
-        };
-
-        var expected = {
-            'user': {
-                'name': {'pop[bob]': { 'test': 3 }},
-                'email': null
-            }
-        };
-
-        var result = Qs.parse(input);
-
-        expect(result).to.deep.equal(expected);
-        done();
-    });
-
-    it('does not blow up when Buffer global is missing', function (done) {
-
-        var tempBuffer = global.Buffer;
-        delete global.Buffer;
-        var result = Qs.parse('a=b&c=d');
-        global.Buffer = tempBuffer;
-        expect(result).to.deep.equal({ a: 'b', c: 'd' });
-        done();
-    });
-
-    it('does not crash when using invalid dot notation', function (done) {
-
-        expect(Qs.parse('roomInfoList[0].childrenAges[0]=15&roomInfoList[0].numberOfAdults=2')).to.deep.equal({ roomInfoList: [['15', '2']] });
-        done();
-    });
-
-    it('does not crash when parsing circular references', function (done) {
-
-        var a = {};
-        a.b = a;
-
-        var parsed;
-
-        expect(function () {
-
-            parsed = Qs.parse({ 'foo[bar]': 'baz', 'foo[baz]': a });
-        }).to.not.throw();
-
-        expect(parsed).to.contain('foo');
-        expect(parsed.foo).to.contain('bar', 'baz');
-        expect(parsed.foo.bar).to.equal('baz');
-        expect(parsed.foo.baz).to.deep.equal(a);
-        done();
-    });
-
-    it('parses plain objects correctly', function (done) {
-
-        var a = Object.create(null);
-        a.b = 'c';
-
-        expect(Qs.parse(a)).to.deep.equal({ b: 'c' });
-        var result = Qs.parse({ a: a });
-        expect(result).to.contain('a');
-        expect(result.a).to.deep.equal(a);
-        done();
-    });
-
-    it('parses dates correctly', function (done) {
-
-        var now = new Date();
-        expect(Qs.parse({ a: now })).to.deep.equal({ a: now });
-        done();
-    });
-
-    it('parses regular expressions correctly', function (done) {
-
-        var re = /^test$/;
-        expect(Qs.parse({ a: re })).to.deep.equal({ a: re });
-        done();
-    });
-});
deleted file mode 100755
--- a/node_modules/alfred/node_modules/qs/test/stringify.js
+++ /dev/null
@@ -1,179 +0,0 @@
-/* eslint no-extend-native:0 */
-// Load modules
-
-var Code = require('code');
-var Lab = require('lab');
-var Qs = require('../');
-
-
-// Declare internals
-
-var internals = {};
-
-
-// Test shortcuts
-
-var lab = exports.lab = Lab.script();
-var expect = Code.expect;
-var describe = lab.experiment;
-var it = lab.test;
-
-
-describe('stringify()', function () {
-
-    it('stringifies a querystring object', function (done) {
-
-        expect(Qs.stringify({ a: 'b' })).to.equal('a=b');
-        expect(Qs.stringify({ a: 1 })).to.equal('a=1');
-        expect(Qs.stringify({ a: 1, b: 2 })).to.equal('a=1&b=2');
-        done();
-    });
-
-    it('stringifies a nested object', function (done) {
-
-        expect(Qs.stringify({ a: { b: 'c' } })).to.equal('a%5Bb%5D=c');
-        expect(Qs.stringify({ a: { b: { c: { d: 'e' } } } })).to.equal('a%5Bb%5D%5Bc%5D%5Bd%5D=e');
-        done();
-    });
-
-    it('stringifies an array value', function (done) {
-
-        expect(Qs.stringify({ a: ['b', 'c', 'd'] })).to.equal('a%5B0%5D=b&a%5B1%5D=c&a%5B2%5D=d');
-        done();
-    });
-
-    it('omits array indices when asked', function (done) {
-
-        expect(Qs.stringify({ a: ['b', 'c', 'd'] }, { indices: false })).to.equal('a=b&a=c&a=d');
-        done();
-    });
-
-    it('stringifies a nested array value', function (done) {
-
-        expect(Qs.stringify({ a: { b: ['c', 'd'] } })).to.equal('a%5Bb%5D%5B0%5D=c&a%5Bb%5D%5B1%5D=d');
-        done();
-    });
-
-    it('stringifies an object inside an array', function (done) {
-
-        expect(Qs.stringify({ a: [{ b: 'c' }] })).to.equal('a%5B0%5D%5Bb%5D=c');
-        expect(Qs.stringify({ a: [{ b: { c: [1] } }] })).to.equal('a%5B0%5D%5Bb%5D%5Bc%5D%5B0%5D=1');
-        done();
-    });
-
-    it('does not omit object keys when indices = false', function (done) {
-
-        expect(Qs.stringify({ a: [{ b: 'c' }] }, { indices: false })).to.equal('a%5Bb%5D=c');
-        done();
-    });
-
-    it('stringifies a complicated object', function (done) {
-
-        expect(Qs.stringify({ a: { b: 'c', d: 'e' } })).to.equal('a%5Bb%5D=c&a%5Bd%5D=e');
-        done();
-    });
-
-    it('stringifies an empty value', function (done) {
-
-        expect(Qs.stringify({ a: '' })).to.equal('a=');
-        expect(Qs.stringify({ a: '', b: '' })).to.equal('a=&b=');
-        expect(Qs.stringify({ a: null })).to.equal('a=');
-        expect(Qs.stringify({ a: { b: null } })).to.equal('a%5Bb%5D=');
-        done();
-    });
-
-    it('stringifies an empty object', function (done) {
-
-        var obj = Object.create(null);
-        obj.a = 'b';
-        expect(Qs.stringify(obj)).to.equal('a=b');
-        done();
-    });
-
-    it('returns an empty string for invalid input', function (done) {
-
-        expect(Qs.stringify(undefined)).to.equal('');
-        expect(Qs.stringify(false)).to.equal('');
-        expect(Qs.stringify(null)).to.equal('');
-        expect(Qs.stringify('')).to.equal('');
-        done();
-    });
-
-    it('stringifies an object with an empty object as a child', function (done) {
-
-        var obj = {
-            a: Object.create(null)
-        };
-
-        obj.a.b = 'c';
-        expect(Qs.stringify(obj)).to.equal('a%5Bb%5D=c');
-        done();
-    });
-
-    it('drops keys with a value of undefined', function (done) {
-
-        expect(Qs.stringify({ a: undefined })).to.equal('');
-        expect(Qs.stringify({ a: { b: undefined, c: null } })).to.equal('a%5Bc%5D=');
-        done();
-    });
-
-    it('url encodes values', function (done) {
-
-        expect(Qs.stringify({ a: 'b c' })).to.equal('a=b%20c');
-        done();
-    });
-
-    it('stringifies a date', function (done) {
-
-        var now = new Date();
-        var str = 'a=' + encodeURIComponent(now.toISOString());
-        expect(Qs.stringify({ a: now })).to.equal(str);
-        done();
-    });
-
-    it('stringifies the weird object from qs', function (done) {
-
-        expect(Qs.stringify({ 'my weird field': 'q1!2"\'w$5&7/z8)?' })).to.equal('my%20weird%20field=q1!2%22\'w%245%267%2Fz8)%3F');
-        done();
-    });
-
-    it('skips properties that are part of the object prototype', function (done) {
-
-        Object.prototype.crash = 'test';
-        expect(Qs.stringify({ a: 'b'})).to.equal('a=b');
-        expect(Qs.stringify({ a: { b: 'c' } })).to.equal('a%5Bb%5D=c');
-        delete Object.prototype.crash;
-        done();
-    });
-
-    it('stringifies boolean values', function (done) {
-
-        expect(Qs.stringify({ a: true })).to.equal('a=true');
-        expect(Qs.stringify({ a: { b: true } })).to.equal('a%5Bb%5D=true');
-        expect(Qs.stringify({ b: false })).to.equal('b=false');
-        expect(Qs.stringify({ b: { c: false } })).to.equal('b%5Bc%5D=false');
-        done();
-    });
-
-    it('stringifies buffer values', function (done) {
-
-        expect(Qs.stringify({ a: new Buffer('test') })).to.equal('a=test');
-        expect(Qs.stringify({ a: { b: new Buffer('test') } })).to.equal('a%5Bb%5D=test');
-        done();
-    });
-
-    it('stringifies an object using an alternative delimiter', function (done) {
-
-        expect(Qs.stringify({ a: 'b', c: 'd' }, { delimiter: ';' })).to.equal('a=b;c=d');
-        done();
-    });
-
-    it('doesn\'t blow up when Buffer global is missing', function (done) {
-
-        var tempBuffer = global.Buffer;
-        delete global.Buffer;
-        expect(Qs.stringify({ a: 'b', c: 'd' })).to.equal('a=b&c=d');
-        global.Buffer = tempBuffer;
-        done();
-    });
-});
deleted file mode 100644
--- a/node_modules/alfred/node_modules/readable-stream/.npmignore
+++ /dev/null
@@ -1,5 +0,0 @@
-build/
-test/
-examples/
-fs.js
-zlib.js
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/node_modules/readable-stream/README.md
+++ /dev/null
@@ -1,15 +0,0 @@
-# readable-stream
-
-***Node-core streams for userland***
-
-[![NPM](https://nodei.co/npm/readable-stream.png?downloads=true)](https://nodei.co/npm/readable-stream/)
-[![NPM](https://nodei.co/npm-dl/readable-stream.png)](https://nodei.co/npm/readable-stream/)
-
-This package is a mirror of the Streams2 and Streams3 implementations in Node-core.
-
-If you want to guarantee a stable streams base, regardless of what version of Node you, or the users of your libraries are using, use **readable-stream** *only* and avoid the *"stream"* module in Node-core.
-
-**readable-stream** comes in two major versions, v1.0.x and v1.1.x. The former tracks the Streams2 implementation in Node 0.10, including bug-fixes and minor improvements as they are added. The latter tracks Streams3 as it develops in Node 0.11; we will likely see a v1.2.x branch for Node 0.12.
-
-**readable-stream** uses proper patch-level versioning so if you pin to `"~1.0.0"` you’ll get the latest Node 0.10 Streams2 implementation, including any fixes and minor non-breaking improvements. The patch-level versions of 1.0.x and 1.1.x should mirror the patch-level versions of Node-core releases. You should prefer the **1.0.x** releases for now and when you’re ready to start using Streams3, pin to `"~1.1.0"`
-
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/CHANGELOG.md
+++ /dev/null
@@ -1,709 +0,0 @@
-## Change Log
-
-### v2.87.0 (2018/05/21)
-- [#2943](https://github.com/request/request/pull/2943) Replace hawk dependency with a local implemenation (#2943) (@hueniverse)
-
-### v2.86.0 (2018/05/15)
-- [#2885](https://github.com/request/request/pull/2885) Remove redundant code (for Node.js 0.9.4 and below) and dependency (@ChALkeR)
-- [#2942](https://github.com/request/request/pull/2942) Make Test GREEN Again! (@simov)
-- [#2923](https://github.com/request/request/pull/2923) Alterations for failing CI tests (@gareth-robinson)
-
-### v2.85.0 (2018/03/12)
-- [#2880](https://github.com/request/request/pull/2880) Revert "Update hawk to 7.0.7 (#2880)" (@simov)
-
-### v2.84.0 (2018/03/12)
-- [#2793](https://github.com/request/request/pull/2793) Fixed calculation of oauth_body_hash, issue #2792 (@dvishniakov)
-- [#2880](https://github.com/request/request/pull/2880) Update hawk to 7.0.7 (#2880) (@kornel-kedzierski)
-
-### v2.83.0 (2017/09/27)
-- [#2776](https://github.com/request/request/pull/2776) Updating tough-cookie due to security fix. (#2776) (@karlnorling)
-
-### v2.82.0 (2017/09/19)
-- [#2703](https://github.com/request/request/pull/2703) Add Node.js v8 to Travis CI (@ryysud)
-- [#2751](https://github.com/request/request/pull/2751) Update of hawk and qs to latest version (#2751) (@Olivier-Moreau)
-- [#2658](https://github.com/request/request/pull/2658) Fixed some text in README.md (#2658) (@Marketionist)
-- [#2635](https://github.com/request/request/pull/2635) chore(package): update aws-sign2 to version 0.7.0 (#2635) (@greenkeeperio-bot)
-- [#2641](https://github.com/request/request/pull/2641) Update README to simplify & update convenience methods (#2641) (@FredKSchott)
-- [#2541](https://github.com/request/request/pull/2541) Add convenience method for HTTP OPTIONS (#2541) (@jamesseanwright)
-- [#2605](https://github.com/request/request/pull/2605) Add promise support section to README (#2605) (@FredKSchott)
-- [#2579](https://github.com/request/request/pull/2579) refactor(lint): replace eslint with standard (#2579) (@ahmadnassri)
-- [#2598](https://github.com/request/request/pull/2598) Update codecov to version 2.0.2 🚀 (@greenkeeperio-bot)
-- [#2590](https://github.com/request/request/pull/2590) Adds test-timing keepAlive test (@nicjansma)
-- [#2589](https://github.com/request/request/pull/2589) fix tabulation on request example README.MD (@odykyi)
-- [#2594](https://github.com/request/request/pull/2594) chore(dependencies): har-validator to 5.x [removes babel dep] (@ahmadnassri)
-
-### v2.81.0 (2017/03/09)
-- [#2584](https://github.com/request/request/pull/2584) Security issue: Upgrade qs to version 6.4.0 (@sergejmueller)
-- [#2578](https://github.com/request/request/pull/2578) safe-buffer doesn't zero-fill by default, its just a polyfill. (#2578) (@mikeal)
-- [#2566](https://github.com/request/request/pull/2566) Timings: Tracks 'lookup', adds 'wait' time, fixes connection re-use (#2566) (@nicjansma)
-- [#2574](https://github.com/request/request/pull/2574) Migrating to safe-buffer for improved security. (@mikeal)
-- [#2573](https://github.com/request/request/pull/2573) fixes #2572 (@ahmadnassri)
-
-### v2.80.0 (2017/03/04)
-- [#2571](https://github.com/request/request/pull/2571) Correctly format the Host header for IPv6 addresses (@JamesMGreene)
-- [#2558](https://github.com/request/request/pull/2558) Update README.md example snippet (@FredKSchott)
-- [#2221](https://github.com/request/request/pull/2221) Adding a simple Response object reference in argument specification (@calamarico)
-- [#2452](https://github.com/request/request/pull/2452) Adds .timings array with DNC, TCP, request and response times (@nicjansma)
-- [#2553](https://github.com/request/request/pull/2553) add ISSUE_TEMPLATE, move PR template (@FredKSchott)
-- [#2539](https://github.com/request/request/pull/2539) Create PULL_REQUEST_TEMPLATE.md (@FredKSchott)
-- [#2524](https://github.com/request/request/pull/2524) Update caseless to version 0.12.0 🚀 (@greenkeeperio-bot)
-- [#2460](https://github.com/request/request/pull/2460) Fix wrong MIME type in example (@OwnageIsMagic)
-- [#2514](https://github.com/request/request/pull/2514) Change tags to keywords in package.json (@humphd)
-- [#2492](https://github.com/request/request/pull/2492) More lenient gzip decompression (@addaleax)
-
-### v2.79.0 (2016/11/18)
-- [#2368](https://github.com/request/request/pull/2368) Fix typeof check in test-pool.js (@forivall)
-- [#2394](https://github.com/request/request/pull/2394) Use `files` in package.json (@SimenB)
-- [#2463](https://github.com/request/request/pull/2463) AWS support for session tokens for temporary credentials (@simov)
-- [#2467](https://github.com/request/request/pull/2467) Migrate to uuid (@simov, @antialias)
-- [#2459](https://github.com/request/request/pull/2459) Update taper to version 0.5.0 🚀 (@greenkeeperio-bot)
-- [#2448](https://github.com/request/request/pull/2448) Make other connect timeout test more reliable too (@mscdex)
-
-### v2.78.0 (2016/11/03)
-- [#2447](https://github.com/request/request/pull/2447) Always set request timeout on keep-alive connections (@mscdex)
-
-### v2.77.0 (2016/11/03)
-- [#2439](https://github.com/request/request/pull/2439) Fix socket 'connect' listener handling (@mscdex)
-- [#2442](https://github.com/request/request/pull/2442) 👻😱 Node.js 0.10 is unmaintained 😱👻 (@greenkeeperio-bot)
-- [#2435](https://github.com/request/request/pull/2435) Add followOriginalHttpMethod to redirect to original HTTP method (@kirrg001)
-- [#2414](https://github.com/request/request/pull/2414) Improve test-timeout reliability (@mscdex)
-
-### v2.76.0 (2016/10/25)
-- [#2424](https://github.com/request/request/pull/2424) Handle buffers directly instead of using "bl" (@zertosh)
-- [#2415](https://github.com/request/request/pull/2415) Re-enable timeout tests on Travis + other fixes (@mscdex)
-- [#2431](https://github.com/request/request/pull/2431) Improve timeouts accuracy and node v6.8.0+ compatibility (@mscdex, @greenkeeperio-bot)
-- [#2428](https://github.com/request/request/pull/2428) Update qs to version 6.3.0 🚀 (@greenkeeperio-bot)
-- [#2420](https://github.com/request/request/pull/2420) change .on to .once, remove possible memory leaks (@duereg)
-- [#2426](https://github.com/request/request/pull/2426) Remove "isFunction" helper in favor of "typeof" check (@zertosh)
-- [#2425](https://github.com/request/request/pull/2425) Simplify "defer" helper creation (@zertosh)
-- [#2402](https://github.com/request/request/pull/2402) form-data@2.1.1 breaks build 🚨 (@greenkeeperio-bot)
-- [#2393](https://github.com/request/request/pull/2393) Update form-data to version 2.1.0 🚀 (@greenkeeperio-bot)
-
-### v2.75.0 (2016/09/17)
-- [#2381](https://github.com/request/request/pull/2381) Drop support for Node 0.10 (@simov)
-- [#2377](https://github.com/request/request/pull/2377) Update form-data to version 2.0.0 🚀 (@greenkeeperio-bot)
-- [#2353](https://github.com/request/request/pull/2353) Add greenkeeper ignored packages (@simov)
-- [#2351](https://github.com/request/request/pull/2351) Update karma-tap to version 3.0.1 🚀 (@greenkeeperio-bot)
-- [#2348](https://github.com/request/request/pull/2348) form-data@1.0.1 breaks build 🚨 (@greenkeeperio-bot)
-- [#2349](https://github.com/request/request/pull/2349) Check error type instead of string (@scotttrinh)
-
-### v2.74.0 (2016/07/22)
-- [#2295](https://github.com/request/request/pull/2295) Update tough-cookie to 2.3.0 (@stash-sfdc)
-- [#2280](https://github.com/request/request/pull/2280) Update karma-tap to version 2.0.1 🚀 (@greenkeeperio-bot)
-
-### v2.73.0 (2016/07/09)
-- [#2240](https://github.com/request/request/pull/2240) Remove connectionErrorHandler to fix #1903 (@zarenner)
-- [#2251](https://github.com/request/request/pull/2251) tape@4.6.0 breaks build 🚨 (@greenkeeperio-bot)
-- [#2225](https://github.com/request/request/pull/2225) Update docs (@ArtskydJ)
-- [#2203](https://github.com/request/request/pull/2203) Update browserify to version 13.0.1 🚀 (@greenkeeperio-bot)
-- [#2275](https://github.com/request/request/pull/2275) Update karma to version 1.1.1 🚀 (@greenkeeperio-bot)
-- [#2204](https://github.com/request/request/pull/2204) Add codecov.yml and disable PR comments (@simov)
-- [#2212](https://github.com/request/request/pull/2212) Fix link to http.IncomingMessage documentation (@nazieb)
-- [#2208](https://github.com/request/request/pull/2208) Update to form-data RC4 and pass null values to it (@simov)
-- [#2207](https://github.com/request/request/pull/2207) Move aws4 require statement to the top (@simov)
-- [#2199](https://github.com/request/request/pull/2199) Update karma-coverage to version 1.0.0 🚀 (@greenkeeperio-bot)
-- [#2206](https://github.com/request/request/pull/2206) Update qs to version 6.2.0 🚀 (@greenkeeperio-bot)
-- [#2205](https://github.com/request/request/pull/2205) Use server-destory to close hanging sockets in tests (@simov)
-- [#2200](https://github.com/request/request/pull/2200) Update karma-cli to version 1.0.0 🚀 (@greenkeeperio-bot)
-
-### v2.72.0 (2016/04/17)
-- [#2176](https://github.com/request/request/pull/2176) Do not try to pipe Gzip responses with no body (@simov)
-- [#2175](https://github.com/request/request/pull/2175) Add 'delete' alias for the 'del' API method (@simov, @MuhanZou)
-- [#2172](https://github.com/request/request/pull/2172) Add support for deflate content encoding (@czardoz)
-- [#2169](https://github.com/request/request/pull/2169) Add callback option (@simov)
-- [#2165](https://github.com/request/request/pull/2165) Check for self.req existence inside the write method (@simov)
-- [#2167](https://github.com/request/request/pull/2167) Fix TravisCI badge reference master branch (@a0viedo)
-
-### v2.71.0 (2016/04/12)
-- [#2164](https://github.com/request/request/pull/2164) Catch errors from the underlying http module (@simov)
-
-### v2.70.0 (2016/04/05)
-- [#2147](https://github.com/request/request/pull/2147) Update eslint to version 2.5.3 🚀 (@simov, @greenkeeperio-bot)
-- [#2009](https://github.com/request/request/pull/2009) Support JSON stringify replacer argument. (@elyobo)
-- [#2142](https://github.com/request/request/pull/2142) Update eslint to version 2.5.1 🚀 (@greenkeeperio-bot)
-- [#2128](https://github.com/request/request/pull/2128) Update browserify-istanbul to version 2.0.0 🚀 (@greenkeeperio-bot)
-- [#2115](https://github.com/request/request/pull/2115) Update eslint to version 2.3.0 🚀 (@simov, @greenkeeperio-bot)
-- [#2089](https://github.com/request/request/pull/2089) Fix badges (@simov)
-- [#2092](https://github.com/request/request/pull/2092) Update browserify-istanbul to version 1.0.0 🚀 (@greenkeeperio-bot)
-- [#2079](https://github.com/request/request/pull/2079) Accept read stream as body option (@simov)
-- [#2070](https://github.com/request/request/pull/2070) Update bl to version 1.1.2 🚀 (@greenkeeperio-bot)
-- [#2063](https://github.com/request/request/pull/2063) Up bluebird and oauth-sign (@simov)
-- [#2058](https://github.com/request/request/pull/2058) Karma fixes for latest versions (@eiriksm)
-- [#2057](https://github.com/request/request/pull/2057) Update contributing guidelines (@simov)
-- [#2054](https://github.com/request/request/pull/2054) Update qs to version 6.1.0 🚀 (@greenkeeperio-bot)
-
-### v2.69.0 (2016/01/27)
-- [#2041](https://github.com/request/request/pull/2041) restore aws4 as regular dependency (@rmg)
-
-### v2.68.0 (2016/01/27)
-- [#2036](https://github.com/request/request/pull/2036) Add AWS Signature Version 4 (@simov, @mirkods)
-- [#2022](https://github.com/request/request/pull/2022) Convert numeric multipart bodies to string (@simov, @feross)
-- [#2024](https://github.com/request/request/pull/2024) Update har-validator dependency for nsp advisory #76 (@TylerDixon)
-- [#2016](https://github.com/request/request/pull/2016) Update qs to version 6.0.2 🚀 (@greenkeeperio-bot)
-- [#2007](https://github.com/request/request/pull/2007) Use the `extend` module instead of util._extend (@simov)
-- [#2003](https://github.com/request/request/pull/2003) Update browserify to version 13.0.0 🚀 (@greenkeeperio-bot)
-- [#1989](https://github.com/request/request/pull/1989) Update buffer-equal to version 1.0.0 🚀 (@greenkeeperio-bot)
-- [#1956](https://github.com/request/request/pull/1956) Check form-data content-length value before setting up the header (@jongyoonlee)
-- [#1958](https://github.com/request/request/pull/1958) Use IncomingMessage.destroy method (@simov)
-- [#1952](https://github.com/request/request/pull/1952) Adds example for Tor proxy (@prometheansacrifice)
-- [#1943](https://github.com/request/request/pull/1943) Update eslint to version 1.10.3 🚀 (@simov, @greenkeeperio-bot)
-- [#1924](https://github.com/request/request/pull/1924) Update eslint to version 1.10.1 🚀 (@greenkeeperio-bot)
-- [#1915](https://github.com/request/request/pull/1915) Remove content-length and transfer-encoding headers from defaultProxyHeaderWhiteList (@yaxia)
-
-### v2.67.0 (2015/11/19)
-- [#1913](https://github.com/request/request/pull/1913) Update http-signature to version 1.1.0 🚀 (@greenkeeperio-bot)
-
-### v2.66.0 (2015/11/18)
-- [#1906](https://github.com/request/request/pull/1906) Update README URLs based on HTTP redirects (@ReadmeCritic)
-- [#1905](https://github.com/request/request/pull/1905) Convert typed arrays into regular buffers (@simov)
-- [#1902](https://github.com/request/request/pull/1902) node-uuid@1.4.7 breaks build 🚨 (@greenkeeperio-bot)
-- [#1894](https://github.com/request/request/pull/1894) Fix tunneling after redirection from https (Original: #1881) (@simov, @falms)
-- [#1893](https://github.com/request/request/pull/1893) Update eslint to version 1.9.0 🚀 (@greenkeeperio-bot)
-- [#1852](https://github.com/request/request/pull/1852) Update eslint to version 1.7.3 🚀 (@simov, @greenkeeperio-bot, @paulomcnally, @michelsalib, @arbaaz, @nsklkn, @LoicMahieu, @JoshWillik, @jzaefferer, @ryanwholey, @djchie, @thisconnect, @mgenereu, @acroca, @Sebmaster, @KoltesDigital)
-- [#1876](https://github.com/request/request/pull/1876) Implement loose matching for har mime types (@simov)
-- [#1875](https://github.com/request/request/pull/1875) Update bluebird to version 3.0.2 🚀 (@simov, @greenkeeperio-bot)
-- [#1871](https://github.com/request/request/pull/1871) Update browserify to version 12.0.1 🚀 (@greenkeeperio-bot)
-- [#1866](https://github.com/request/request/pull/1866) Add missing quotes on x-token property in README (@miguelmota)
-- [#1874](https://github.com/request/request/pull/1874) Fix typo in README.md (@gswalden)
-- [#1860](https://github.com/request/request/pull/1860) Improve referer header tests and docs (@simov)
-- [#1861](https://github.com/request/request/pull/1861) Remove redundant call to Stream constructor (@watson)
-- [#1857](https://github.com/request/request/pull/1857) Fix Referer header to point to the original host name (@simov)
-- [#1850](https://github.com/request/request/pull/1850) Update karma-coverage to version 0.5.3 🚀 (@greenkeeperio-bot)
-- [#1847](https://github.com/request/request/pull/1847) Use node's latest version when building (@simov)
-- [#1836](https://github.com/request/request/pull/1836) Tunnel: fix wrong property name (@KoltesDigital)
-- [#1820](https://github.com/request/request/pull/1820) Set href as request.js uses it (@mgenereu)
-- [#1840](https://github.com/request/request/pull/1840) Update http-signature to version 1.0.2 🚀 (@greenkeeperio-bot)
-- [#1845](https://github.com/request/request/pull/1845) Update istanbul to version 0.4.0 🚀 (@greenkeeperio-bot)
-
-### v2.65.0 (2015/10/11)
-- [#1833](https://github.com/request/request/pull/1833) Update aws-sign2 to version 0.6.0 🚀 (@greenkeeperio-bot)
-- [#1811](https://github.com/request/request/pull/1811) Enable loose cookie parsing in tough-cookie (@Sebmaster)
-- [#1830](https://github.com/request/request/pull/1830) Bring back tilde ranges for all dependencies (@simov)
-- [#1821](https://github.com/request/request/pull/1821) Implement support for RFC 2617 MD5-sess algorithm. (@BigDSK)
-- [#1828](https://github.com/request/request/pull/1828) Updated qs dependency to 5.2.0 (@acroca)
-- [#1818](https://github.com/request/request/pull/1818) Extract `readResponseBody` method out of `onRequestResponse` (@pvoisin)
-- [#1819](https://github.com/request/request/pull/1819) Run stringify once (@mgenereu)
-- [#1814](https://github.com/request/request/pull/1814) Updated har-validator to version 2.0.2 (@greenkeeperio-bot)
-- [#1807](https://github.com/request/request/pull/1807) Updated tough-cookie to version 2.1.0 (@greenkeeperio-bot)
-- [#1800](https://github.com/request/request/pull/1800) Add caret ranges for devDependencies, except eslint (@simov)
-- [#1799](https://github.com/request/request/pull/1799) Updated karma-browserify to version 4.4.0 (@greenkeeperio-bot)
-- [#1797](https://github.com/request/request/pull/1797) Updated tape to version 4.2.0 (@greenkeeperio-bot)
-- [#1788](https://github.com/request/request/pull/1788) Pinned all dependencies (@greenkeeperio-bot)
-
-### v2.64.0 (2015/09/25)
-- [#1787](https://github.com/request/request/pull/1787) npm ignore examples, release.sh and disabled.appveyor.yml (@thisconnect)
-- [#1775](https://github.com/request/request/pull/1775) Fix typo in README.md (@djchie)
-- [#1776](https://github.com/request/request/pull/1776) Changed word 'conjuction' to read 'conjunction' in README.md (@ryanwholey)
-- [#1785](https://github.com/request/request/pull/1785) Revert: Set default application/json content-type when using json option #1772 (@simov)
-
-### v2.63.0 (2015/09/21)
-- [#1772](https://github.com/request/request/pull/1772) Set default application/json content-type when using json option (@jzaefferer)
-
-### v2.62.0 (2015/09/15)
-- [#1768](https://github.com/request/request/pull/1768) Add node 4.0 to the list of build targets (@simov)
-- [#1767](https://github.com/request/request/pull/1767) Query strings now cooperate with unix sockets (@JoshWillik)
-- [#1750](https://github.com/request/request/pull/1750) Revert doc about installation of tough-cookie added in #884 (@LoicMahieu)
-- [#1746](https://github.com/request/request/pull/1746) Missed comma in Readme (@nsklkn)
-- [#1743](https://github.com/request/request/pull/1743) Fix options not being initialized in defaults method (@simov)
-
-### v2.61.0 (2015/08/19)
-- [#1721](https://github.com/request/request/pull/1721) Minor fix in README.md (@arbaaz)
-- [#1733](https://github.com/request/request/pull/1733) Avoid useless Buffer transformation (@michelsalib)
-- [#1726](https://github.com/request/request/pull/1726) Update README.md (@paulomcnally)
-- [#1715](https://github.com/request/request/pull/1715) Fix forever option in node > 0.10 #1709 (@calibr)
-- [#1716](https://github.com/request/request/pull/1716) Do not create Buffer from Object in setContentLength(iojs v3.0 issue) (@calibr)
-- [#1711](https://github.com/request/request/pull/1711) Add ability to detect connect timeouts (@kevinburke)
-- [#1712](https://github.com/request/request/pull/1712) Set certificate expiration to August 2, 2018 (@kevinburke)
-- [#1700](https://github.com/request/request/pull/1700) debug() when JSON.parse() on a response body fails (@phillipj)
-
-### v2.60.0 (2015/07/21)
-- [#1687](https://github.com/request/request/pull/1687) Fix caseless bug - content-type not being set for multipart/form-data (@simov, @garymathews)
-
-### v2.59.0 (2015/07/20)
-- [#1671](https://github.com/request/request/pull/1671) Add tests and docs for using the agent, agentClass, agentOptions and forever options.
- Forever option defaults to using http(s).Agent in node 0.12+ (@simov)
-- [#1679](https://github.com/request/request/pull/1679) Fix - do not remove OAuth param when using OAuth realm (@simov, @jhalickman)
-- [#1668](https://github.com/request/request/pull/1668) updated dependencies (@deamme)
-- [#1656](https://github.com/request/request/pull/1656) Fix form method (@simov)
-- [#1651](https://github.com/request/request/pull/1651) Preserve HEAD method when using followAllRedirects (@simov)
-- [#1652](https://github.com/request/request/pull/1652) Update `encoding` option documentation in README.md (@daniel347x)
-- [#1650](https://github.com/request/request/pull/1650) Allow content-type overriding when using the `form` option (@simov)
-- [#1646](https://github.com/request/request/pull/1646) Clarify the nature of setting `ca` in `agentOptions` (@jeffcharles)
-
-### v2.58.0 (2015/06/16)
-- [#1638](https://github.com/request/request/pull/1638) Use the `extend` module to deep extend in the defaults method (@simov)
-- [#1631](https://github.com/request/request/pull/1631) Move tunnel logic into separate module (@simov)
-- [#1634](https://github.com/request/request/pull/1634) Fix OAuth query transport_method (@simov)
-- [#1603](https://github.com/request/request/pull/1603) Add codecov (@simov)
-
-### v2.57.0 (2015/05/31)
-- [#1615](https://github.com/request/request/pull/1615) Replace '.client' with '.socket' as the former was deprecated in 2.2.0. (@ChALkeR)
-
-### v2.56.0 (2015/05/28)
-- [#1610](https://github.com/request/request/pull/1610) Bump module dependencies (@simov)
-- [#1600](https://github.com/request/request/pull/1600) Extract the querystring logic into separate module (@simov)
-- [#1607](https://github.com/request/request/pull/1607) Re-generate certificates (@simov)
-- [#1599](https://github.com/request/request/pull/1599) Move getProxyFromURI logic below the check for Invaild URI (#1595) (@simov)
-- [#1598](https://github.com/request/request/pull/1598) Fix the way http verbs are defined in order to please intellisense IDEs (@simov, @flannelJesus)
-- [#1591](https://github.com/request/request/pull/1591) A few minor fixes: (@simov)
-- [#1584](https://github.com/request/request/pull/1584) Refactor test-default tests (according to comments in #1430) (@simov)
-- [#1585](https://github.com/request/request/pull/1585) Fixing documentation regarding TLS options (#1583) (@mainakae)
-- [#1574](https://github.com/request/request/pull/1574) Refresh the oauth_nonce on redirect (#1573) (@simov)
-- [#1570](https://github.com/request/request/pull/1570) Discovered tests that weren't properly running (@seanstrom)
-- [#1569](https://github.com/request/request/pull/1569) Fix pause before response arrives (@kevinoid)
-- [#1558](https://github.com/request/request/pull/1558) Emit error instead of throw (@simov)
-- [#1568](https://github.com/request/request/pull/1568) Fix stall when piping gzipped response (@kevinoid)
-- [#1560](https://github.com/request/request/pull/1560) Update combined-stream (@apechimp)
-- [#1543](https://github.com/request/request/pull/1543) Initial support for oauth_body_hash on json payloads (@simov, @aesopwolf)
-- [#1541](https://github.com/request/request/pull/1541) Fix coveralls (@simov)
-- [#1540](https://github.com/request/request/pull/1540) Fix recursive defaults for convenience methods (@simov)
-- [#1536](https://github.com/request/request/pull/1536) More eslint style rules (@froatsnook)
-- [#1533](https://github.com/request/request/pull/1533) Adding dependency status bar to README.md (@YasharF)
-- [#1539](https://github.com/request/request/pull/1539) ensure the latest version of har-validator is included (@ahmadnassri)
-- [#1516](https://github.com/request/request/pull/1516) forever+pool test (@devTristan)
-
-### v2.55.0 (2015/04/05)
-- [#1520](https://github.com/request/request/pull/1520) Refactor defaults (@simov)
-- [#1525](https://github.com/request/request/pull/1525) Delete request headers with undefined value. (@froatsnook)
-- [#1521](https://github.com/request/request/pull/1521) Add promise tests (@simov)
-- [#1518](https://github.com/request/request/pull/1518) Fix defaults (@simov)
-- [#1515](https://github.com/request/request/pull/1515) Allow static invoking of convenience methods (@simov)
-- [#1505](https://github.com/request/request/pull/1505) Fix multipart boundary extraction regexp (@simov)
-- [#1510](https://github.com/request/request/pull/1510) Fix basic auth form data (@simov)
-
-### v2.54.0 (2015/03/24)
-- [#1501](https://github.com/request/request/pull/1501) HTTP Archive 1.2 support (@ahmadnassri)
-- [#1486](https://github.com/request/request/pull/1486) Add a test for the forever agent (@akshayp)
-- [#1500](https://github.com/request/request/pull/1500) Adding handling for no auth method and null bearer (@philberg)
-- [#1498](https://github.com/request/request/pull/1498) Add table of contents in readme (@simov)
-- [#1477](https://github.com/request/request/pull/1477) Add support for qs options via qsOptions key (@simov)
-- [#1496](https://github.com/request/request/pull/1496) Parameters encoded to base 64 should be decoded as UTF-8, not ASCII. (@albanm)
-- [#1494](https://github.com/request/request/pull/1494) Update eslint (@froatsnook)
-- [#1474](https://github.com/request/request/pull/1474) Require Colon in Basic Auth (@erykwalder)
-- [#1481](https://github.com/request/request/pull/1481) Fix baseUrl and redirections. (@burningtree)
-- [#1469](https://github.com/request/request/pull/1469) Feature/base url (@froatsnook)
-- [#1459](https://github.com/request/request/pull/1459) Add option to time request/response cycle (including rollup of redirects) (@aaron-em)
-- [#1468](https://github.com/request/request/pull/1468) Re-enable io.js/node 0.12 build (@simov, @mikeal, @BBB)
-- [#1442](https://github.com/request/request/pull/1442) Fixed the issue with strictSSL tests on  0.12 & io.js by explicitly setting a cipher that matches the cert. (@BBB, @nickmccurdy, @demohi, @simov, @0x4139)
-- [#1460](https://github.com/request/request/pull/1460) localAddress or proxy config is lost when redirecting (@simov, @0x4139)
-- [#1453](https://github.com/request/request/pull/1453) Test on Node.js 0.12 and io.js with allowed failures (@nickmccurdy, @demohi)
-- [#1426](https://github.com/request/request/pull/1426) Fixing tests to pass on io.js and node 0.12 (only test-https.js stiff failing) (@mikeal)
-- [#1446](https://github.com/request/request/pull/1446) Missing HTTP referer header with redirects Fixes #1038 (@simov, @guimon)
-- [#1428](https://github.com/request/request/pull/1428) Deprecate Node v0.8.x (@nylen)
-- [#1436](https://github.com/request/request/pull/1436) Add ability to set a requester without setting default options (@tikotzky)
-- [#1435](https://github.com/request/request/pull/1435) dry up verb methods (@sethpollack)
-- [#1423](https://github.com/request/request/pull/1423) Allow fully qualified multipart content-type header (@simov)
-- [#1430](https://github.com/request/request/pull/1430) Fix recursive requester (@tikotzky)
-- [#1429](https://github.com/request/request/pull/1429) Throw error when making HEAD request with a body (@tikotzky)
-- [#1419](https://github.com/request/request/pull/1419) Add note that the project is broken in 0.12.x (@nylen)
-- [#1413](https://github.com/request/request/pull/1413) Fix basic auth (@simov)
-- [#1397](https://github.com/request/request/pull/1397) Improve pipe-from-file tests (@nylen)
-
-### v2.53.0 (2015/02/02)
-- [#1396](https://github.com/request/request/pull/1396) Do not rfc3986 escape JSON bodies (@nylen, @simov)
-- [#1392](https://github.com/request/request/pull/1392) Improve `timeout` option description (@watson)
-
-### v2.52.0 (2015/02/02)
-- [#1383](https://github.com/request/request/pull/1383) Add missing HTTPS options that were not being passed to tunnel (@brichard19) (@nylen)
-- [#1388](https://github.com/request/request/pull/1388) Upgrade mime-types package version (@roderickhsiao)
-- [#1389](https://github.com/request/request/pull/1389) Revise Setup Tunnel Function (@seanstrom)
-- [#1374](https://github.com/request/request/pull/1374) Allow explicitly disabling tunneling for proxied https destinations (@nylen)
-- [#1376](https://github.com/request/request/pull/1376) Use karma-browserify for tests. Add browser test coverage reporter. (@eiriksm)
-- [#1366](https://github.com/request/request/pull/1366) Refactor OAuth into separate module (@simov)
-- [#1373](https://github.com/request/request/pull/1373) Rewrite tunnel test to be pure Node.js (@nylen)
-- [#1371](https://github.com/request/request/pull/1371) Upgrade test reporter (@nylen)
-- [#1360](https://github.com/request/request/pull/1360) Refactor basic, bearer, digest auth logic into separate class (@simov)
-- [#1354](https://github.com/request/request/pull/1354) Remove circular dependency from debugging code (@nylen)
-- [#1351](https://github.com/request/request/pull/1351) Move digest auth into private prototype method (@simov)
-- [#1352](https://github.com/request/request/pull/1352) Update hawk dependency to ~2.3.0 (@mridgway)
-- [#1353](https://github.com/request/request/pull/1353) Correct travis-ci badge (@dogancelik)
-- [#1349](https://github.com/request/request/pull/1349) Make sure we return on errored browser requests. (@eiriksm)
-- [#1346](https://github.com/request/request/pull/1346) getProxyFromURI Extraction Refactor (@seanstrom)
-- [#1337](https://github.com/request/request/pull/1337) Standardize test ports on 6767 (@nylen)
-- [#1341](https://github.com/request/request/pull/1341) Emit FormData error events as Request error events (@nylen, @rwky)
-- [#1343](https://github.com/request/request/pull/1343) Clean up readme badges, and add Travis and Coveralls badges (@nylen)
-- [#1345](https://github.com/request/request/pull/1345) Update README.md (@Aaron-Hartwig)
-- [#1338](https://github.com/request/request/pull/1338) Always wait for server.close() callback in tests (@nylen)
-- [#1342](https://github.com/request/request/pull/1342) Add mock https server and redo start of browser tests for this purpose. (@eiriksm)
-- [#1339](https://github.com/request/request/pull/1339) Improve auth docs (@nylen)
-- [#1335](https://github.com/request/request/pull/1335) Add support for OAuth plaintext signature method (@simov)
-- [#1332](https://github.com/request/request/pull/1332) Add clean script to remove test-browser.js after the tests run (@seanstrom)
-- [#1327](https://github.com/request/request/pull/1327) Fix errors generating coverage reports. (@nylen)
-- [#1330](https://github.com/request/request/pull/1330) Return empty buffer upon empty response body and encoding is set to null (@seanstrom)
-- [#1326](https://github.com/request/request/pull/1326) Use faster container-based infrastructure on Travis (@nylen)
-- [#1315](https://github.com/request/request/pull/1315) Implement rfc3986 option (@simov, @nylen, @apoco, @DullReferenceException, @mmalecki, @oliamb, @cliffcrosland, @LewisJEllis, @eiriksm, @poislagarde)
-- [#1314](https://github.com/request/request/pull/1314) Detect urlencoded form data header via regex (@simov)
-- [#1317](https://github.com/request/request/pull/1317) Improve OAuth1.0 server side flow example (@simov)
-
-### v2.51.0 (2014/12/10)
-- [#1310](https://github.com/request/request/pull/1310) Revert changes introduced in https://github.com/request/request/pull/1282 (@simov)
-
-### v2.50.0 (2014/12/09)
-- [#1308](https://github.com/request/request/pull/1308) Add browser test to keep track of browserify compability. (@eiriksm)
-- [#1299](https://github.com/request/request/pull/1299) Add optional support for jsonReviver (@poislagarde)
-- [#1277](https://github.com/request/request/pull/1277) Add Coveralls configuration (@simov)
-- [#1307](https://github.com/request/request/pull/1307) Upgrade form-data, add back browserify compability. Fixes #455. (@eiriksm)
-- [#1305](https://github.com/request/request/pull/1305) Fix typo in README.md (@LewisJEllis)
-- [#1288](https://github.com/request/request/pull/1288) Update README.md to explain custom file use case (@cliffcrosland)
-
-### v2.49.0 (2014/11/28)
-- [#1295](https://github.com/request/request/pull/1295) fix(proxy): no-proxy false positive (@oliamb)
-- [#1292](https://github.com/request/request/pull/1292) Upgrade `caseless` to 0.8.1 (@mmalecki)
-- [#1276](https://github.com/request/request/pull/1276) Set transfer encoding for multipart/related to chunked by default (@simov)
-- [#1275](https://github.com/request/request/pull/1275) Fix multipart content-type headers detection (@simov)
-- [#1269](https://github.com/request/request/pull/1269) adds streams example for review (@tbuchok)
-- [#1238](https://github.com/request/request/pull/1238) Add examples README.md (@simov)
-
-### v2.48.0 (2014/11/12)
-- [#1263](https://github.com/request/request/pull/1263) Fixed a syntax error / typo in README.md (@xna2)
-- [#1253](https://github.com/request/request/pull/1253) Add multipart chunked flag (@simov, @nylen)
-- [#1251](https://github.com/request/request/pull/1251) Clarify that defaults() does not modify global defaults (@nylen)
-- [#1250](https://github.com/request/request/pull/1250) Improve documentation for pool and maxSockets options (@nylen)
-- [#1237](https://github.com/request/request/pull/1237) Documenting error handling when using streams (@vmattos)
-- [#1244](https://github.com/request/request/pull/1244) Finalize changelog command (@nylen)
-- [#1241](https://github.com/request/request/pull/1241) Fix typo (@alexanderGugel)
-- [#1223](https://github.com/request/request/pull/1223) Show latest version number instead of "upcoming" in changelog (@nylen)
-- [#1236](https://github.com/request/request/pull/1236) Document how to use custom CA in README (#1229) (@hypesystem)
-- [#1228](https://github.com/request/request/pull/1228) Support for oauth with RSA-SHA1 signing (@nylen)
-- [#1216](https://github.com/request/request/pull/1216) Made json and multipart options coexist (@nylen, @simov)
-- [#1225](https://github.com/request/request/pull/1225) Allow header white/exclusive lists in any case. (@RReverser)
-
-### v2.47.0 (2014/10/26)
-- [#1222](https://github.com/request/request/pull/1222) Move from mikeal/request to request/request (@nylen)
-- [#1220](https://github.com/request/request/pull/1220) update qs dependency to 2.3.1 (@FredKSchott)
-- [#1212](https://github.com/request/request/pull/1212) Improve tests/test-timeout.js (@nylen)
-- [#1219](https://github.com/request/request/pull/1219) remove old globalAgent workaround for node 0.4 (@request)
-- [#1214](https://github.com/request/request/pull/1214) Remove cruft left over from optional dependencies (@nylen)
-- [#1215](https://github.com/request/request/pull/1215) Add proxyHeaderExclusiveList option for proxy-only headers. (@RReverser)
-- [#1211](https://github.com/request/request/pull/1211) Allow 'Host' header instead of 'host' and remember case across redirects (@nylen)
-- [#1208](https://github.com/request/request/pull/1208) Improve release script (@nylen)
-- [#1213](https://github.com/request/request/pull/1213) Support for custom cookie store (@nylen, @mitsuru)
-- [#1197](https://github.com/request/request/pull/1197) Clean up some code around setting the agent (@FredKSchott)
-- [#1209](https://github.com/request/request/pull/1209) Improve multipart form append test (@simov)
-- [#1207](https://github.com/request/request/pull/1207) Update changelog (@nylen)
-- [#1185](https://github.com/request/request/pull/1185) Stream multipart/related bodies (@simov)
-
-### v2.46.0 (2014/10/23)
-- [#1198](https://github.com/request/request/pull/1198) doc for TLS/SSL protocol options (@shawnzhu)
-- [#1200](https://github.com/request/request/pull/1200) Add a Gitter chat badge to README.md (@gitter-badger)
-- [#1196](https://github.com/request/request/pull/1196) Upgrade taper test reporter to v0.3.0 (@nylen)
-- [#1199](https://github.com/request/request/pull/1199) Fix lint error: undeclared var i (@nylen)
-- [#1191](https://github.com/request/request/pull/1191) Move self.proxy decision logic out of init and into a helper (@FredKSchott)
-- [#1190](https://github.com/request/request/pull/1190) Move _buildRequest() logic back into init (@FredKSchott)
-- [#1186](https://github.com/request/request/pull/1186) Support Smarter Unix URL Scheme (@FredKSchott)
-- [#1178](https://github.com/request/request/pull/1178) update form documentation for new usage (@FredKSchott)
-- [#1180](https://github.com/request/request/pull/1180) Enable no-mixed-requires linting rule (@nylen)
-- [#1184](https://github.com/request/request/pull/1184) Don't forward authorization header across redirects to different hosts (@nylen)
-- [#1183](https://github.com/request/request/pull/1183) Correct README about pre and postamble CRLF using multipart and not mult... (@netpoetica)
-- [#1179](https://github.com/request/request/pull/1179) Lint tests directory (@nylen)
-- [#1169](https://github.com/request/request/pull/1169) add metadata for form-data file field (@dotcypress)
-- [#1173](https://github.com/request/request/pull/1173) remove optional dependencies (@seanstrom)
-- [#1165](https://github.com/request/request/pull/1165) Cleanup event listeners and remove function creation from init (@FredKSchott)
-- [#1174](https://github.com/request/request/pull/1174) update the request.cookie docs to have a valid cookie example (@seanstrom)
-- [#1168](https://github.com/request/request/pull/1168) create a detach helper and use detach helper in replace of nextTick (@seanstrom)
-- [#1171](https://github.com/request/request/pull/1171) in post can send form data and use callback (@MiroRadenovic)
-- [#1159](https://github.com/request/request/pull/1159) accept charset for x-www-form-urlencoded content-type (@seanstrom)
-- [#1157](https://github.com/request/request/pull/1157) Update README.md: body with json=true (@Rob--W)
-- [#1164](https://github.com/request/request/pull/1164) Disable tests/test-timeout.js on Travis (@nylen)
-- [#1153](https://github.com/request/request/pull/1153) Document how to run a single test (@nylen)
-- [#1144](https://github.com/request/request/pull/1144) adds documentation for the "response" event within the streaming section (@tbuchok)
-- [#1162](https://github.com/request/request/pull/1162) Update eslintrc file to no longer allow past errors (@FredKSchott)
-- [#1155](https://github.com/request/request/pull/1155) Support/use self everywhere (@seanstrom)
-- [#1161](https://github.com/request/request/pull/1161) fix no-use-before-define lint warnings (@emkay)
-- [#1156](https://github.com/request/request/pull/1156) adding curly brackets to get rid of lint errors (@emkay)
-- [#1151](https://github.com/request/request/pull/1151) Fix localAddress test on OS X (@nylen)
-- [#1145](https://github.com/request/request/pull/1145) documentation: fix outdated reference to setCookieSync old name in README (@FredKSchott)
-- [#1131](https://github.com/request/request/pull/1131) Update pool documentation (@FredKSchott)
-- [#1143](https://github.com/request/request/pull/1143) Rewrite all tests to use tape (@nylen)
-- [#1137](https://github.com/request/request/pull/1137) Add ability to specifiy querystring lib in options. (@jgrund)
-- [#1138](https://github.com/request/request/pull/1138) allow hostname and port in place of host on uri (@cappslock)
-- [#1134](https://github.com/request/request/pull/1134) Fix multiple redirects and `self.followRedirect` (@blakeembrey)
-- [#1130](https://github.com/request/request/pull/1130) documentation fix: add note about npm test for contributing (@FredKSchott)
-- [#1120](https://github.com/request/request/pull/1120) Support/refactor request setup tunnel (@seanstrom)
-- [#1129](https://github.com/request/request/pull/1129) linting fix: convert double quote strings to use single quotes (@FredKSchott)
-- [#1124](https://github.com/request/request/pull/1124) linting fix: remove unneccesary semi-colons (@FredKSchott)
-
-### v2.45.0 (2014/10/06)
-- [#1128](https://github.com/request/request/pull/1128) Add test for setCookie regression (@nylen)
-- [#1127](https://github.com/request/request/pull/1127) added tests around using objects as values in a query string (@bcoe)
-- [#1103](https://github.com/request/request/pull/1103) Support/refactor request constructor (@nylen, @seanstrom)
-- [#1119](https://github.com/request/request/pull/1119) add basic linting to request library (@FredKSchott)
-- [#1121](https://github.com/request/request/pull/1121) Revert "Explicitly use sync versions of cookie functions" (@nylen)
-- [#1118](https://github.com/request/request/pull/1118) linting fix: Restructure bad empty if statement (@FredKSchott)
-- [#1117](https://github.com/request/request/pull/1117) Fix a bad check for valid URIs (@FredKSchott)
-- [#1113](https://github.com/request/request/pull/1113) linting fix: space out operators (@FredKSchott)
-- [#1116](https://github.com/request/request/pull/1116) Fix typo in `noProxyHost` definition (@FredKSchott)
-- [#1114](https://github.com/request/request/pull/1114) linting fix: Added a `new` operator that was missing when creating and throwing a new error (@FredKSchott)
-- [#1096](https://github.com/request/request/pull/1096) No_proxy support (@samcday)
-- [#1107](https://github.com/request/request/pull/1107) linting-fix: remove unused variables (@FredKSchott)
-- [#1112](https://github.com/request/request/pull/1112) linting fix: Make return values consistent and more straitforward (@FredKSchott)
-- [#1111](https://github.com/request/request/pull/1111) linting fix: authPieces was getting redeclared (@FredKSchott)
-- [#1105](https://github.com/request/request/pull/1105) Use strict mode in request (@FredKSchott)
-- [#1110](https://github.com/request/request/pull/1110) linting fix: replace lazy '==' with more strict '===' (@FredKSchott)
-- [#1109](https://github.com/request/request/pull/1109) linting fix: remove function call from if-else conditional statement (@FredKSchott)
-- [#1102](https://github.com/request/request/pull/1102) Fix to allow setting a `requester` on recursive calls to `request.defaults` (@tikotzky)
-- [#1095](https://github.com/request/request/pull/1095) Tweaking engines in package.json (@pdehaan)
-- [#1082](https://github.com/request/request/pull/1082) Forward the socket event from the httpModule request (@seanstrom)
-- [#972](https://github.com/request/request/pull/972) Clarify gzip handling in the README (@kevinoid)
-- [#1089](https://github.com/request/request/pull/1089) Mention that encoding defaults to utf8, not Buffer (@stuartpb)
-- [#1088](https://github.com/request/request/pull/1088) Fix cookie example in README.md and make it more clear (@pipi32167)
-- [#1027](https://github.com/request/request/pull/1027) Add support for multipart form data in request options. (@crocket)
-- [#1076](https://github.com/request/request/pull/1076) use Request.abort() to abort the request when the request has timed-out (@seanstrom)
-- [#1068](https://github.com/request/request/pull/1068) add optional postamble required by .NET multipart requests (@netpoetica)
-
-### v2.43.0 (2014/09/18)
-- [#1057](https://github.com/request/request/pull/1057) Defaults should not overwrite defined options (@davidwood)
-- [#1046](https://github.com/request/request/pull/1046) Propagate datastream errors, useful in case gzip fails. (@ZJONSSON, @Janpot)
-- [#1063](https://github.com/request/request/pull/1063) copy the input headers object #1060 (@finnp)
-- [#1031](https://github.com/request/request/pull/1031) Explicitly use sync versions of cookie functions (@ZJONSSON)
-- [#1056](https://github.com/request/request/pull/1056) Fix redirects when passing url.parse(x) as URL to convenience method (@nylen)
-
-### v2.42.0 (2014/09/04)
-- [#1053](https://github.com/request/request/pull/1053) Fix #1051 Parse auth properly when using non-tunneling proxy (@isaacs)
-
-### v2.41.0 (2014/09/04)
-- [#1050](https://github.com/request/request/pull/1050) Pass whitelisted headers to tunneling proxy.  Organize all tunneling logic. (@isaacs, @Feldhacker)
-- [#1035](https://github.com/request/request/pull/1035) souped up nodei.co badge (@rvagg)
-- [#1048](https://github.com/request/request/pull/1048) Aws is now possible over a proxy (@steven-aerts)
-- [#1039](https://github.com/request/request/pull/1039) extract out helper functions to a helper file (@seanstrom)
-- [#1021](https://github.com/request/request/pull/1021) Support/refactor indexjs (@seanstrom)
-- [#1033](https://github.com/request/request/pull/1033) Improve and document debug options (@nylen)
-- [#1034](https://github.com/request/request/pull/1034) Fix readme headings (@nylen)
-- [#1030](https://github.com/request/request/pull/1030) Allow recursive request.defaults (@tikotzky)
-- [#1029](https://github.com/request/request/pull/1029) Fix a couple of typos (@nylen)
-- [#675](https://github.com/request/request/pull/675) Checking for SSL fault on connection before reading SSL properties (@VRMink)
-- [#989](https://github.com/request/request/pull/989) Added allowRedirect function. Should return true if redirect is allowed or false otherwise (@doronin)
-- [#1025](https://github.com/request/request/pull/1025) [fixes #1023] Set self._ended to true once response has ended (@mridgway)
-- [#1020](https://github.com/request/request/pull/1020) Add back removed debug metadata (@FredKSchott)
-- [#1008](https://github.com/request/request/pull/1008) Moving to  module instead of cutomer buffer concatenation. (@mikeal)
-- [#770](https://github.com/request/request/pull/770) Added dependency badge for README file; (@timgluz, @mafintosh, @lalitkapoor, @stash, @bobyrizov)
-- [#1016](https://github.com/request/request/pull/1016) toJSON no longer results in an infinite loop, returns simple objects (@FredKSchott)
-- [#1018](https://github.com/request/request/pull/1018) Remove pre-0.4.4 HTTPS fix (@mmalecki)
-- [#1006](https://github.com/request/request/pull/1006) Migrate to caseless, fixes #1001 (@mikeal)
-- [#995](https://github.com/request/request/pull/995) Fix parsing array of objects (@sjonnet19)
-- [#999](https://github.com/request/request/pull/999) Fix fallback for browserify for optional modules. (@eiriksm)
-- [#996](https://github.com/request/request/pull/996) Wrong oauth signature when multiple same param keys exist [updated] (@bengl)
-
-### v2.40.0 (2014/08/06)
-- [#992](https://github.com/request/request/pull/992) Fix security vulnerability. Update qs (@poeticninja)
-- [#988](https://github.com/request/request/pull/988) “--” -> “—” (@upisfree)
-- [#987](https://github.com/request/request/pull/987) Show optional modules as being loaded by the module that reqeusted them (@iarna)
-
-### v2.39.0 (2014/07/24)
-- [#976](https://github.com/request/request/pull/976) Update README.md (@pvoznenko)
-
-### v2.38.0 (2014/07/22)
-- [#952](https://github.com/request/request/pull/952) Adding support to client certificate with proxy use case (@ofirshaked)
-- [#884](https://github.com/request/request/pull/884) Documented tough-cookie installation. (@wbyoung)
-- [#935](https://github.com/request/request/pull/935) Correct repository url (@fritx)
-- [#963](https://github.com/request/request/pull/963) Update changelog (@nylen)
-- [#960](https://github.com/request/request/pull/960) Support gzip with encoding on node pre-v0.9.4 (@kevinoid)
-- [#953](https://github.com/request/request/pull/953) Add async Content-Length computation when using form-data (@LoicMahieu)
-- [#844](https://github.com/request/request/pull/844) Add support for HTTP[S]_PROXY environment variables.  Fixes #595. (@jvmccarthy)
-- [#946](https://github.com/request/request/pull/946) defaults: merge headers (@aj0strow)
-
-### v2.37.0 (2014/07/07)
-- [#957](https://github.com/request/request/pull/957) Silence EventEmitter memory leak warning #311 (@watson)
-- [#955](https://github.com/request/request/pull/955) check for content-length header before setting it in nextTick (@camilleanne)
-- [#951](https://github.com/request/request/pull/951) Add support for gzip content decoding (@kevinoid)
-- [#949](https://github.com/request/request/pull/949) Manually enter querystring in form option (@charlespwd)
-- [#944](https://github.com/request/request/pull/944) Make request work with browserify (@eiriksm)
-- [#943](https://github.com/request/request/pull/943) New mime module (@eiriksm)
-- [#927](https://github.com/request/request/pull/927) Bump version of hawk dep. (@samccone)
-- [#907](https://github.com/request/request/pull/907) append secureOptions to poolKey (@medovob)
-
-### v2.35.0 (2014/05/17)
-- [#901](https://github.com/request/request/pull/901) Fixes #555 (@pigulla)
-- [#897](https://github.com/request/request/pull/897) merge with default options (@vohof)
-- [#891](https://github.com/request/request/pull/891) fixes 857 - options object is mutated by calling request (@lalitkapoor)
-- [#869](https://github.com/request/request/pull/869) Pipefilter test (@tgohn)
-- [#866](https://github.com/request/request/pull/866) Fix typo (@dandv)
-- [#861](https://github.com/request/request/pull/861) Add support for RFC 6750 Bearer Tokens (@phedny)
-- [#809](https://github.com/request/request/pull/809) upgrade tunnel-proxy to 0.4.0 (@ksato9700)
-- [#850](https://github.com/request/request/pull/850) Fix word consistency in readme (@0xNobody)
-- [#810](https://github.com/request/request/pull/810) add some exposition to mpu example in README.md (@mikermcneil)
-- [#840](https://github.com/request/request/pull/840) improve error reporting for invalid protocols (@FND)
-- [#821](https://github.com/request/request/pull/821) added secureOptions back (@nw)
-- [#815](https://github.com/request/request/pull/815) Create changelog based on pull requests (@lalitkapoor)
-
-### v2.34.0 (2014/02/18)
-- [#516](https://github.com/request/request/pull/516) UNIX Socket URL Support (@lyuzashi)
-- [#801](https://github.com/request/request/pull/801) 794 ignore cookie parsing and domain errors (@lalitkapoor)
-- [#802](https://github.com/request/request/pull/802) Added the Apache license to the package.json. (@keskival)
-- [#793](https://github.com/request/request/pull/793) Adds content-length calculation when submitting forms using form-data li... (@Juul)
-- [#785](https://github.com/request/request/pull/785) Provide ability to override content-type when `json` option used (@vvo)
-- [#781](https://github.com/request/request/pull/781) simpler isReadStream function (@joaojeronimo)
-
-### v2.32.0 (2014/01/16)
-- [#767](https://github.com/request/request/pull/767) Use tough-cookie CookieJar sync API (@stash)
-- [#764](https://github.com/request/request/pull/764) Case-insensitive authentication scheme (@bobyrizov)
-- [#763](https://github.com/request/request/pull/763) Upgrade tough-cookie to 0.10.0 (@stash)
-- [#744](https://github.com/request/request/pull/744) Use Cookie.parse (@lalitkapoor)
-- [#757](https://github.com/request/request/pull/757) require aws-sign2 (@mafintosh)
-
-### v2.31.0 (2014/01/08)
-- [#645](https://github.com/request/request/pull/645) update twitter api url to v1.1 (@mick)
-- [#746](https://github.com/request/request/pull/746) README: Markdown code highlight (@weakish)
-- [#745](https://github.com/request/request/pull/745) updating setCookie example to make it clear that the callback is required (@emkay)
-- [#742](https://github.com/request/request/pull/742) Add note about JSON output body type (@iansltx)
-- [#741](https://github.com/request/request/pull/741) README example is using old cookie jar api (@emkay)
-- [#736](https://github.com/request/request/pull/736) Fix callback arguments documentation (@mmalecki)
-- [#732](https://github.com/request/request/pull/732) JSHINT: Creating global 'for' variable. Should be 'for (var ...'. (@Fritz-Lium)
-- [#730](https://github.com/request/request/pull/730) better HTTP DIGEST support (@dai-shi)
-- [#728](https://github.com/request/request/pull/728) Fix TypeError when calling request.cookie (@scarletmeow)
-- [#727](https://github.com/request/request/pull/727) fix requester bug (@jchris)
-- [#724](https://github.com/request/request/pull/724) README.md: add custom HTTP Headers example. (@tcort)
-- [#719](https://github.com/request/request/pull/719) Made a comment gender neutral. (@unsetbit)
-- [#715](https://github.com/request/request/pull/715) Request.multipart no longer crashes when header 'Content-type' present (@pastaclub)
-- [#710](https://github.com/request/request/pull/710) Fixing listing in callback part of docs. (@lukasz-zak)
-- [#696](https://github.com/request/request/pull/696) Edited README.md for formatting and clarity of phrasing (@Zearin)
-- [#694](https://github.com/request/request/pull/694) Typo in README (@VRMink)
-- [#690](https://github.com/request/request/pull/690) Handle blank password in basic auth. (@diversario)
-- [#682](https://github.com/request/request/pull/682) Optional dependencies (@Turbo87)
-- [#683](https://github.com/request/request/pull/683) Travis CI support (@Turbo87)
-- [#674](https://github.com/request/request/pull/674) change cookie module,to tough-cookie.please check it . (@sxyizhiren)
-- [#666](https://github.com/request/request/pull/666) make `ciphers` and `secureProtocol` to work in https request (@richarddong)
-- [#656](https://github.com/request/request/pull/656) Test case for #304. (@diversario)
-- [#662](https://github.com/request/request/pull/662) option.tunnel to explicitly disable tunneling (@seanmonstar)
-- [#659](https://github.com/request/request/pull/659) fix failure when running with NODE_DEBUG=request, and a test for that (@jrgm)
-- [#630](https://github.com/request/request/pull/630) Send random cnonce for HTTP Digest requests (@wprl)
-- [#619](https://github.com/request/request/pull/619) decouple things a bit (@joaojeronimo)
-- [#613](https://github.com/request/request/pull/613) Fixes #583, moved initialization of self.uri.pathname (@lexander)
-- [#605](https://github.com/request/request/pull/605) Only include ":" + pass in Basic Auth if it's defined (fixes #602) (@bendrucker)
-- [#596](https://github.com/request/request/pull/596) Global agent is being used when pool is specified (@Cauldrath)
-- [#594](https://github.com/request/request/pull/594) Emit complete event when there is no callback (@RomainLK)
-- [#601](https://github.com/request/request/pull/601) Fixed a small typo (@michalstanko)
-- [#589](https://github.com/request/request/pull/589) Prevent setting headers after they are sent (@geek)
-- [#587](https://github.com/request/request/pull/587) Global cookie jar disabled by default (@threepointone)
-- [#544](https://github.com/request/request/pull/544) Update http-signature version. (@davidlehn)
-- [#581](https://github.com/request/request/pull/581) Fix spelling of "ignoring." (@bigeasy)
-- [#568](https://github.com/request/request/pull/568) use agentOptions to create agent when specified in request (@SamPlacette)
-- [#564](https://github.com/request/request/pull/564) Fix redirections (@criloz)
-- [#541](https://github.com/request/request/pull/541) The exported request function doesn't have an auth method (@tschaub)
-- [#542](https://github.com/request/request/pull/542) Expose Request class (@regality)
-- [#536](https://github.com/request/request/pull/536) Allow explicitly empty user field for basic authentication. (@mikeando)
-- [#532](https://github.com/request/request/pull/532) fix typo (@fredericosilva)
-- [#497](https://github.com/request/request/pull/497) Added redirect event (@Cauldrath)
-- [#503](https://github.com/request/request/pull/503) Fix basic auth for passwords that contain colons (@tonistiigi)
-- [#521](https://github.com/request/request/pull/521) Improving test-localAddress.js (@noway)
-- [#529](https://github.com/request/request/pull/529) dependencies versions bump (@jodaka)
-- [#523](https://github.com/request/request/pull/523) Updating dependencies (@noway)
-- [#520](https://github.com/request/request/pull/520) Fixing test-tunnel.js (@noway)
-- [#519](https://github.com/request/request/pull/519) Update internal path state on post-creation QS changes (@jblebrun)
-- [#510](https://github.com/request/request/pull/510) Add HTTP Signature support. (@davidlehn)
-- [#502](https://github.com/request/request/pull/502) Fix POST (and probably other) requests that are retried after 401 Unauthorized (@nylen)
-- [#508](https://github.com/request/request/pull/508) Honor the .strictSSL option when using proxies (tunnel-agent) (@jhs)
-- [#512](https://github.com/request/request/pull/512) Make password optional to support the format: http://username@hostname/ (@pajato1)
-- [#513](https://github.com/request/request/pull/513) add 'localAddress' support (@yyfrankyy)
-- [#498](https://github.com/request/request/pull/498) Moving response emit above setHeaders on destination streams (@kenperkins)
-- [#490](https://github.com/request/request/pull/490) Empty response body (3-rd argument) must be passed to callback as an empty string (@Olegas)
-- [#479](https://github.com/request/request/pull/479) Changing so if Accept header is explicitly set, sending json does not ov... (@RoryH)
-- [#475](https://github.com/request/request/pull/475) Use `unescape` from `querystring` (@shimaore)
-- [#473](https://github.com/request/request/pull/473) V0.10 compat (@isaacs)
-- [#471](https://github.com/request/request/pull/471) Using querystring library from visionmedia (@kbackowski)
-- [#461](https://github.com/request/request/pull/461) Strip the UTF8 BOM from a UTF encoded response (@kppullin)
-- [#460](https://github.com/request/request/pull/460) hawk 0.10.0 (@hueniverse)
-- [#462](https://github.com/request/request/pull/462) if query params are empty, then request path shouldn't end with a '?' (merges cleanly now) (@jaipandya)
-- [#456](https://github.com/request/request/pull/456) hawk 0.9.0 (@hueniverse)
-- [#429](https://github.com/request/request/pull/429) Copy options before adding callback. (@nrn, @nfriedly, @youurayy, @jplock, @kapetan, @landeiro, @othiym23, @mmalecki)
-- [#454](https://github.com/request/request/pull/454) Destroy the response if present when destroying the request (clean merge) (@mafintosh)
-- [#310](https://github.com/request/request/pull/310) Twitter Oauth Stuff Out of Date; Now Updated (@joemccann, @isaacs, @mscdex)
-- [#413](https://github.com/request/request/pull/413) rename googledoodle.png to .jpg (@nfriedly, @youurayy, @jplock, @kapetan, @landeiro, @othiym23, @mmalecki)
-- [#448](https://github.com/request/request/pull/448) Convenience method for PATCH (@mloar)
-- [#444](https://github.com/request/request/pull/444) protect against double callbacks on error path (@spollack)
-- [#433](https://github.com/request/request/pull/433) Added support for HTTPS cert & key (@mmalecki)
-- [#430](https://github.com/request/request/pull/430) Respect specified {Host,host} headers, not just {host} (@andrewschaaf)
-- [#415](https://github.com/request/request/pull/415) Fixed a typo. (@jerem)
-- [#338](https://github.com/request/request/pull/338) Add more auth options, including digest support (@nylen)
-- [#403](https://github.com/request/request/pull/403) Optimize environment lookup to happen once only (@mmalecki)
-- [#398](https://github.com/request/request/pull/398) Add more reporting to tests (@mmalecki)
-- [#388](https://github.com/request/request/pull/388) Ensure "safe" toJSON doesn't break EventEmitters (@othiym23)
-- [#381](https://github.com/request/request/pull/381) Resolving "Invalid signature. Expected signature base string: " (@landeiro)
-- [#380](https://github.com/request/request/pull/380) Fixes missing host header on retried request when using forever agent (@mac-)
-- [#376](https://github.com/request/request/pull/376) Headers lost on redirect (@kapetan)
-- [#375](https://github.com/request/request/pull/375) Fix for missing oauth_timestamp parameter (@jplock)
-- [#374](https://github.com/request/request/pull/374) Correct Host header for proxy tunnel CONNECT (@youurayy)
-- [#370](https://github.com/request/request/pull/370) Twitter reverse auth uses x_auth_mode not x_auth_type (@drudge)
-- [#369](https://github.com/request/request/pull/369) Don't remove x_auth_mode for Twitter reverse auth (@drudge)
-- [#344](https://github.com/request/request/pull/344) Make AWS auth signing find headers correctly (@nlf)
-- [#363](https://github.com/request/request/pull/363) rfc3986 on base_uri, now passes tests (@jeffmarshall)
-- [#362](https://github.com/request/request/pull/362) Running `rfc3986` on `base_uri` in `oauth.hmacsign` instead of just `encodeURIComponent` (@jeffmarshall)
-- [#361](https://github.com/request/request/pull/361) Don't create a Content-Length header if we already have it set (@danjenkins)
-- [#360](https://github.com/request/request/pull/360) Delete self._form along with everything else on redirect (@jgautier)
-- [#355](https://github.com/request/request/pull/355) stop sending erroneous headers on redirected requests (@azylman)
-- [#332](https://github.com/request/request/pull/332) Fix #296 - Only set Content-Type if body exists (@Marsup)
-- [#343](https://github.com/request/request/pull/343) Allow AWS to work in more situations, added a note in the README on its usage (@nlf)
-- [#320](https://github.com/request/request/pull/320) request.defaults() doesn't need to wrap jar() (@StuartHarris)
-- [#322](https://github.com/request/request/pull/322) Fix + test for piped into request bumped into redirect. #321 (@alexindigo)
-- [#326](https://github.com/request/request/pull/326) Do not try to remove listener from an undefined connection (@CartoDB)
-- [#318](https://github.com/request/request/pull/318) Pass servername to tunneling secure socket creation (@isaacs)
-- [#317](https://github.com/request/request/pull/317) Workaround for #313 (@isaacs)
-- [#293](https://github.com/request/request/pull/293) Allow parser errors to bubble up to request (@mscdex)
-- [#290](https://github.com/request/request/pull/290) A test for #289 (@isaacs)
-- [#280](https://github.com/request/request/pull/280) Like in node.js print options if NODE_DEBUG contains the word request (@Filirom1)
-- [#207](https://github.com/request/request/pull/207) Fix #206 Change HTTP/HTTPS agent when redirecting between protocols (@isaacs)
-- [#214](https://github.com/request/request/pull/214) documenting additional behavior of json option (@jphaas, @vpulim)
-- [#272](https://github.com/request/request/pull/272) Boundary begins with CRLF? (@elspoono, @timshadel, @naholyr, @nanodocumet, @TehShrike)
-- [#284](https://github.com/request/request/pull/284) Remove stray `console.log()` call in multipart generator. (@bcherry)
-- [#241](https://github.com/request/request/pull/241) Composability updates suggested by issue #239 (@polotek)
-- [#282](https://github.com/request/request/pull/282) OAuth Authorization header contains non-"oauth_" parameters (@jplock)
-- [#279](https://github.com/request/request/pull/279) fix tests with boundary by injecting boundry from header (@benatkin)
-- [#273](https://github.com/request/request/pull/273) Pipe back pressure issue (@mafintosh)
-- [#268](https://github.com/request/request/pull/268) I'm not OCD seriously (@TehShrike)
-- [#263](https://github.com/request/request/pull/263) Bug in OAuth key generation for sha1 (@nanodocumet)
-- [#265](https://github.com/request/request/pull/265) uncaughtException when redirected to invalid URI (@naholyr)
-- [#262](https://github.com/request/request/pull/262) JSON test should check for equality (@timshadel)
-- [#261](https://github.com/request/request/pull/261) Setting 'pool' to 'false' does NOT disable Agent pooling (@timshadel)
-- [#249](https://github.com/request/request/pull/249) Fix for the fix of your (closed) issue #89 where self.headers[content-length] is set to 0 for all methods (@sethbridges, @polotek, @zephrax, @jeromegn)
-- [#255](https://github.com/request/request/pull/255) multipart allow body === '' ( the empty string ) (@Filirom1)
-- [#260](https://github.com/request/request/pull/260) fixed just another leak of 'i' (@sreuter)
-- [#246](https://github.com/request/request/pull/246) Fixing the set-cookie header (@jeromegn)
-- [#243](https://github.com/request/request/pull/243) Dynamic boundary (@zephrax)
-- [#240](https://github.com/request/request/pull/240) don't error when null is passed for options (@polotek)
-- [#211](https://github.com/request/request/pull/211) Replace all occurrences of special chars in RFC3986 (@chriso, @vpulim)
-- [#224](https://github.com/request/request/pull/224) Multipart content-type change (@janjongboom)
-- [#217](https://github.com/request/request/pull/217) need to use Authorization (titlecase) header with Tumblr OAuth (@visnup)
-- [#203](https://github.com/request/request/pull/203) Fix cookie and redirect bugs and add auth support for HTTPS tunnel (@vpulim)
-- [#199](https://github.com/request/request/pull/199) Tunnel (@isaacs)
-- [#198](https://github.com/request/request/pull/198) Bugfix on forever usage of util.inherits (@isaacs)
-- [#197](https://github.com/request/request/pull/197) Make ForeverAgent work with HTTPS (@isaacs)
-- [#193](https://github.com/request/request/pull/193) Fixes GH-119 (@goatslacker)
-- [#188](https://github.com/request/request/pull/188) Add abort support to the returned request (@itay)
-- [#176](https://github.com/request/request/pull/176) Querystring option (@csainty)
-- [#182](https://github.com/request/request/pull/182) Fix request.defaults to support (uri, options, callback) api (@twilson63)
-- [#180](https://github.com/request/request/pull/180) Modified the post, put, head and del shortcuts to support uri optional param (@twilson63)
-- [#179](https://github.com/request/request/pull/179) fix to add opts in .pipe(stream, opts) (@substack)
-- [#177](https://github.com/request/request/pull/177) Issue #173 Support uri as first and optional config as second argument (@twilson63)
-- [#170](https://github.com/request/request/pull/170) can't create a cookie in a wrapped request (defaults) (@fabianonunes)
-- [#168](https://github.com/request/request/pull/168) Picking off an EasyFix by adding some missing mimetypes. (@serby)
-- [#161](https://github.com/request/request/pull/161) Fix cookie jar/headers.cookie collision (#125) (@papandreou)
-- [#162](https://github.com/request/request/pull/162) Fix issue #159 (@dpetukhov)
-- [#90](https://github.com/request/request/pull/90) add option followAllRedirects to follow post/put redirects (@jroes)
-- [#148](https://github.com/request/request/pull/148) Retry Agent (@thejh)
-- [#146](https://github.com/request/request/pull/146) Multipart should respect content-type if previously set (@apeace)
-- [#144](https://github.com/request/request/pull/144) added "form" option to readme (@petejkim)
-- [#133](https://github.com/request/request/pull/133) Fixed cookies parsing (@afanasy)
-- [#135](https://github.com/request/request/pull/135) host vs hostname (@iangreenleaf)
-- [#132](https://github.com/request/request/pull/132) return the body as a Buffer when encoding is set to null (@jahewson)
-- [#112](https://github.com/request/request/pull/112) Support using a custom http-like module (@jhs)
-- [#104](https://github.com/request/request/pull/104) Cookie handling contains bugs (@janjongboom)
-- [#121](https://github.com/request/request/pull/121) Another patch for cookie handling regression (@jhurliman)
-- [#117](https://github.com/request/request/pull/117) Remove the global `i` (@3rd-Eden)
-- [#110](https://github.com/request/request/pull/110) Update to Iris Couch URL (@jhs)
-- [#86](https://github.com/request/request/pull/86) Can't post binary to multipart requests (@kkaefer)
-- [#105](https://github.com/request/request/pull/105) added test for proxy option. (@dominictarr)
-- [#102](https://github.com/request/request/pull/102) Implemented cookies - closes issue 82: https://github.com/mikeal/request/issues/82 (@alessioalex)
-- [#97](https://github.com/request/request/pull/97) Typo in previous pull causes TypeError in non-0.5.11 versions (@isaacs)
-- [#96](https://github.com/request/request/pull/96) Authless parsed url host support (@isaacs)
-- [#81](https://github.com/request/request/pull/81) Enhance redirect handling (@danmactough)
-- [#78](https://github.com/request/request/pull/78) Don't try to do strictSSL for non-ssl connections (@isaacs)
-- [#76](https://github.com/request/request/pull/76) Bug when a request fails and a timeout is set (@Marsup)
-- [#70](https://github.com/request/request/pull/70) add test script to package.json (@isaacs, @aheckmann)
-- [#73](https://github.com/request/request/pull/73) Fix #71 Respect the strictSSL flag (@isaacs)
-- [#69](https://github.com/request/request/pull/69) Flatten chunked requests properly (@isaacs)
-- [#67](https://github.com/request/request/pull/67) fixed global variable leaks (@aheckmann)
-- [#66](https://github.com/request/request/pull/66) Do not overwrite established content-type headers for read stream deliver (@voodootikigod)
-- [#53](https://github.com/request/request/pull/53) Parse json: Issue #51 (@benatkin)
-- [#45](https://github.com/request/request/pull/45) Added timeout option (@mbrevoort)
-- [#35](https://github.com/request/request/pull/35) The "end" event isn't emitted for some responses (@voxpelli)
-- [#31](https://github.com/request/request/pull/31) Error on piping a request to a destination (@tobowers)
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/README.md
+++ /dev/null
@@ -1,1097 +0,0 @@
-
-# Request - Simplified HTTP client
-
-[![npm package](https://nodei.co/npm/request.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/request/)
-
-[![Build status](https://img.shields.io/travis/request/request/master.svg?style=flat-square)](https://travis-ci.org/request/request)
-[![Coverage](https://img.shields.io/codecov/c/github/request/request.svg?style=flat-square)](https://codecov.io/github/request/request?branch=master)
-[![Coverage](https://img.shields.io/coveralls/request/request.svg?style=flat-square)](https://coveralls.io/r/request/request)
-[![Dependency Status](https://img.shields.io/david/request/request.svg?style=flat-square)](https://david-dm.org/request/request)
-[![Known Vulnerabilities](https://snyk.io/test/npm/request/badge.svg?style=flat-square)](https://snyk.io/test/npm/request)
-[![Gitter](https://img.shields.io/badge/gitter-join_chat-blue.svg?style=flat-square)](https://gitter.im/request/request?utm_source=badge)
-
-
-## Super simple to use
-
-Request is designed to be the simplest way possible to make http calls. It supports HTTPS and follows redirects by default.
-
-```js
-var request = require('request');
-request('http://www.google.com', function (error, response, body) {
-  console.log('error:', error); // Print the error if one occurred
-  console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received
-  console.log('body:', body); // Print the HTML for the Google homepage.
-});
-```
-
-
-## Table of contents
-
-- [Streaming](#streaming)
-- [Promises & Async/Await](#promises--asyncawait)
-- [Forms](#forms)
-- [HTTP Authentication](#http-authentication)
-- [Custom HTTP Headers](#custom-http-headers)
-- [OAuth Signing](#oauth-signing)
-- [Proxies](#proxies)
-- [Unix Domain Sockets](#unix-domain-sockets)
-- [TLS/SSL Protocol](#tlsssl-protocol)
-- [Support for HAR 1.2](#support-for-har-12)
-- [**All Available Options**](#requestoptions-callback)
-
-Request also offers [convenience methods](#convenience-methods) like
-`request.defaults` and `request.post`, and there are
-lots of [usage examples](#examples) and several
-[debugging techniques](#debugging).
-
-
----
-
-
-## Streaming
-
-You can stream any response to a file stream.
-
-```js
-request('http://google.com/doodle.png').pipe(fs.createWriteStream('doodle.png'))
-```
-
-You can also stream a file to a PUT or POST request. This method will also check the file extension against a mapping of file extensions to content-types (in this case `application/json`) and use the proper `content-type` in the PUT request (if the headers don’t already provide one).
-
-```js
-fs.createReadStream('file.json').pipe(request.put('http://mysite.com/obj.json'))
-```
-
-Request can also `pipe` to itself. When doing so, `content-type` and `content-length` are preserved in the PUT headers.
-
-```js
-request.get('http://google.com/img.png').pipe(request.put('http://mysite.com/img.png'))
-```
-
-Request emits a "response" event when a response is received. The `response` argument will be an instance of [http.IncomingMessage](https://nodejs.org/api/http.html#http_class_http_incomingmessage).
-
-```js
-request
-  .get('http://google.com/img.png')
-  .on('response', function(response) {
-    console.log(response.statusCode) // 200
-    console.log(response.headers['content-type']) // 'image/png'
-  })
-  .pipe(request.put('http://mysite.com/img.png'))
-```
-
-To easily handle errors when streaming requests, listen to the `error` event before piping:
-
-```js
-request
-  .get('http://mysite.com/doodle.png')
-  .on('error', function(err) {
-    console.log(err)
-  })
-  .pipe(fs.createWriteStream('doodle.png'))
-```
-
-Now let’s get fancy.
-
-```js
-http.createServer(function (req, resp) {
-  if (req.url === '/doodle.png') {
-    if (req.method === 'PUT') {
-      req.pipe(request.put('http://mysite.com/doodle.png'))
-    } else if (req.method === 'GET' || req.method === 'HEAD') {
-      request.get('http://mysite.com/doodle.png').pipe(resp)
-    }
-  }
-})
-```
-
-You can also `pipe()` from `http.ServerRequest` instances, as well as to `http.ServerResponse` instances. The HTTP method, headers, and entity-body data will be sent. Which means that, if you don't really care about security, you can do:
-
-```js
-http.createServer(function (req, resp) {
-  if (req.url === '/doodle.png') {
-    var x = request('http://mysite.com/doodle.png')
-    req.pipe(x)
-    x.pipe(resp)
-  }
-})
-```
-
-And since `pipe()` returns the destination stream in ≥ Node 0.5.x you can do one line proxying. :)
-
-```js
-req.pipe(request('http://mysite.com/doodle.png')).pipe(resp)
-```
-
-Also, none of this new functionality conflicts with requests previous features, it just expands them.
-
-```js
-var r = request.defaults({'proxy':'http://localproxy.com'})
-
-http.createServer(function (req, resp) {
-  if (req.url === '/doodle.png') {
-    r.get('http://google.com/doodle.png').pipe(resp)
-  }
-})
-```
-
-You can still use intermediate proxies, the requests will still follow HTTP forwards, etc.
-
-[back to top](#table-of-contents)
-
-
----
-
-
-## Promises & Async/Await
-
-`request` supports both streaming and callback interfaces natively. If you'd like `request` to return a Promise instead, you can use an alternative interface wrapper for `request`. These wrappers can be useful if you prefer to work with Promises, or if you'd like to use `async`/`await` in ES2017.
-
-Several alternative interfaces are provided by the request team, including:
-- [`request-promise`](https://github.com/request/request-promise) (uses [Bluebird](https://github.com/petkaantonov/bluebird) Promises)
-- [`request-promise-native`](https://github.com/request/request-promise-native) (uses native Promises)
-- [`request-promise-any`](https://github.com/request/request-promise-any) (uses [any-promise](https://www.npmjs.com/package/any-promise) Promises)
-
-
-[back to top](#table-of-contents)
-
-
----
-
-
-## Forms
-
-`request` supports `application/x-www-form-urlencoded` and `multipart/form-data` form uploads. For `multipart/related` refer to the `multipart` API.
-
-
-#### application/x-www-form-urlencoded (URL-Encoded Forms)
-
-URL-encoded forms are simple.
-
-```js
-request.post('http://service.com/upload', {form:{key:'value'}})
-// or
-request.post('http://service.com/upload').form({key:'value'})
-// or
-request.post({url:'http://service.com/upload', form: {key:'value'}}, function(err,httpResponse,body){ /* ... */ })
-```
-
-
-#### multipart/form-data (Multipart Form Uploads)
-
-For `multipart/form-data` we use the [form-data](https://github.com/form-data/form-data) library by [@felixge](https://github.com/felixge). For the most cases, you can pass your upload form data via the `formData` option.
-
-
-```js
-var formData = {
-  // Pass a simple key-value pair
-  my_field: 'my_value',
-  // Pass data via Buffers
-  my_buffer: Buffer.from([1, 2, 3]),
-  // Pass data via Streams
-  my_file: fs.createReadStream(__dirname + '/unicycle.jpg'),
-  // Pass multiple values /w an Array
-  attachments: [
-    fs.createReadStream(__dirname + '/attachment1.jpg'),
-    fs.createReadStream(__dirname + '/attachment2.jpg')
-  ],
-  // Pass optional meta-data with an 'options' object with style: {value: DATA, options: OPTIONS}
-  // Use case: for some types of streams, you'll need to provide "file"-related information manually.
-  // See the `form-data` README for more information about options: https://github.com/form-data/form-data
-  custom_file: {
-    value:  fs.createReadStream('/dev/urandom'),
-    options: {
-      filename: 'topsecret.jpg',
-      contentType: 'image/jpeg'
-    }
-  }
-};
-request.post({url:'http://service.com/upload', formData: formData}, function optionalCallback(err, httpResponse, body) {
-  if (err) {
-    return console.error('upload failed:', err);
-  }
-  console.log('Upload successful!  Server responded with:', body);
-});
-```
-
-For advanced cases, you can access the form-data object itself via `r.form()`. This can be modified until the request is fired on the next cycle of the event-loop. (Note that this calling `form()` will clear the currently set form data for that request.)
-
-```js
-// NOTE: Advanced use-case, for normal use see 'formData' usage above
-var r = request.post('http://service.com/upload', function optionalCallback(err, httpResponse, body) {...})
-var form = r.form();
-form.append('my_field', 'my_value');
-form.append('my_buffer', Buffer.from([1, 2, 3]));
-form.append('custom_file', fs.createReadStream(__dirname + '/unicycle.jpg'), {filename: 'unicycle.jpg'});
-```
-See the [form-data README](https://github.com/form-data/form-data) for more information & examples.
-
-
-#### multipart/related
-
-Some variations in different HTTP implementations require a newline/CRLF before, after, or both before and after the boundary of a `multipart/related` request (using the multipart option). This has been observed in the .NET WebAPI version 4.0. You can turn on a boundary preambleCRLF or postamble by passing them as `true` to your request options.
-
-```js
-  request({
-    method: 'PUT',
-    preambleCRLF: true,
-    postambleCRLF: true,
-    uri: 'http://service.com/upload',
-    multipart: [
-      {
-        'content-type': 'application/json',
-        body: JSON.stringify({foo: 'bar', _attachments: {'message.txt': {follows: true, length: 18, 'content_type': 'text/plain' }}})
-      },
-      { body: 'I am an attachment' },
-      { body: fs.createReadStream('image.png') }
-    ],
-    // alternatively pass an object containing additional options
-    multipart: {
-      chunked: false,
-      data: [
-        {
-          'content-type': 'application/json',
-          body: JSON.stringify({foo: 'bar', _attachments: {'message.txt': {follows: true, length: 18, 'content_type': 'text/plain' }}})
-        },
-        { body: 'I am an attachment' }
-      ]
-    }
-  },
-  function (error, response, body) {
-    if (error) {
-      return console.error('upload failed:', error);
-    }
-    console.log('Upload successful!  Server responded with:', body);
-  })
-```
-
-[back to top](#table-of-contents)
-
-
----
-
-
-## HTTP Authentication
-
-```js
-request.get('http://some.server.com/').auth('username', 'password', false);
-// or
-request.get('http://some.server.com/', {
-  'auth': {
-    'user': 'username',
-    'pass': 'password',
-    'sendImmediately': false
-  }
-});
-// or
-request.get('http://some.server.com/').auth(null, null, true, 'bearerToken');
-// or
-request.get('http://some.server.com/', {
-  'auth': {
-    'bearer': 'bearerToken'
-  }
-});
-```
-
-If passed as an option, `auth` should be a hash containing values:
-
-- `user` || `username`
-- `pass` || `password`
-- `sendImmediately` (optional)
-- `bearer` (optional)
-
-The method form takes parameters
-`auth(username, password, sendImmediately, bearer)`.
-
-`sendImmediately` defaults to `true`, which causes a basic or bearer
-authentication header to be sent. If `sendImmediately` is `false`, then
-`request` will retry with a proper authentication header after receiving a
-`401` response from the server (which must contain a `WWW-Authenticate` header
-indicating the required authentication method).
-
-Note that you can also specify basic authentication using the URL itself, as
-detailed in [RFC 1738](http://www.ietf.org/rfc/rfc1738.txt). Simply pass the
-`user:password` before the host with an `@` sign:
-
-```js
-var username = 'username',
-    password = 'password',
-    url = 'http://' + username + ':' + password + '@some.server.com';
-
-request({url: url}, function (error, response, body) {
-   // Do more stuff with 'body' here
-});
-```
-
-Digest authentication is supported, but it only works with `sendImmediately`
-set to `false`; otherwise `request` will send basic authentication on the
-initial request, which will probably cause the request to fail.
-
-Bearer authentication is supported, and is activated when the `bearer` value is
-available. The value may be either a `String` or a `Function` returning a
-`String`. Using a function to supply the bearer token is particularly useful if
-used in conjunction with `defaults` to allow a single function to supply the
-last known token at the time of sending a request, or to compute one on the fly.
-
-[back to top](#table-of-contents)
-
-
----
-
-
-## Custom HTTP Headers
-
-HTTP Headers, such as `User-Agent`, can be set in the `options` object.
-In the example below, we call the github API to find out the number
-of stars and forks for the request repository. This requires a
-custom `User-Agent` header as well as https.
-
-```js
-var request = require('request');
-
-var options = {
-  url: 'https://api.github.com/repos/request/request',
-  headers: {
-    'User-Agent': 'request'
-  }
-};
-
-function callback(error, response, body) {
-  if (!error && response.statusCode == 200) {
-    var info = JSON.parse(body);
-    console.log(info.stargazers_count + " Stars");
-    console.log(info.forks_count + " Forks");
-  }
-}
-
-request(options, callback);
-```
-
-[back to top](#table-of-contents)
-
-
----
-
-
-## OAuth Signing
-
-[OAuth version 1.0](https://tools.ietf.org/html/rfc5849) is supported. The
-default signing algorithm is
-[HMAC-SHA1](https://tools.ietf.org/html/rfc5849#section-3.4.2):
-
-```js
-// OAuth1.0 - 3-legged server side flow (Twitter example)
-// step 1
-var qs = require('querystring')
-  , oauth =
-    { callback: 'http://mysite.com/callback/'
-    , consumer_key: CONSUMER_KEY
-    , consumer_secret: CONSUMER_SECRET
-    }
-  , url = 'https://api.twitter.com/oauth/request_token'
-  ;
-request.post({url:url, oauth:oauth}, function (e, r, body) {
-  // Ideally, you would take the body in the response
-  // and construct a URL that a user clicks on (like a sign in button).
-  // The verifier is only available in the response after a user has
-  // verified with twitter that they are authorizing your app.
-
-  // step 2
-  var req_data = qs.parse(body)
-  var uri = 'https://api.twitter.com/oauth/authenticate'
-    + '?' + qs.stringify({oauth_token: req_data.oauth_token})
-  // redirect the user to the authorize uri
-
-  // step 3
-  // after the user is redirected back to your server
-  var auth_data = qs.parse(body)
-    , oauth =
-      { consumer_key: CONSUMER_KEY
-      , consumer_secret: CONSUMER_SECRET
-      , token: auth_data.oauth_token
-      , token_secret: req_data.oauth_token_secret
-      , verifier: auth_data.oauth_verifier
-      }
-    , url = 'https://api.twitter.com/oauth/access_token'
-    ;
-  request.post({url:url, oauth:oauth}, function (e, r, body) {
-    // ready to make signed requests on behalf of the user
-    var perm_data = qs.parse(body)
-      , oauth =
-        { consumer_key: CONSUMER_KEY
-        , consumer_secret: CONSUMER_SECRET
-        , token: perm_data.oauth_token
-        , token_secret: perm_data.oauth_token_secret
-        }
-      , url = 'https://api.twitter.com/1.1/users/show.json'
-      , qs =
-        { screen_name: perm_data.screen_name
-        , user_id: perm_data.user_id
-        }
-      ;
-    request.get({url:url, oauth:oauth, qs:qs, json:true}, function (e, r, user) {
-      console.log(user)
-    })
-  })
-})
-```
-
-For [RSA-SHA1 signing](https://tools.ietf.org/html/rfc5849#section-3.4.3), make
-the following changes to the OAuth options object:
-* Pass `signature_method : 'RSA-SHA1'`
-* Instead of `consumer_secret`, specify a `private_key` string in
-  [PEM format](http://how2ssl.com/articles/working_with_pem_files/)
-
-For [PLAINTEXT signing](http://oauth.net/core/1.0/#anchor22), make
-the following changes to the OAuth options object:
-* Pass `signature_method : 'PLAINTEXT'`
-
-To send OAuth parameters via query params or in a post body as described in The
-[Consumer Request Parameters](http://oauth.net/core/1.0/#consumer_req_param)
-section of the oauth1 spec:
-* Pass `transport_method : 'query'` or `transport_method : 'body'` in the OAuth
-  options object.
-* `transport_method` defaults to `'header'`
-
-To use [Request Body Hash](https://oauth.googlecode.com/svn/spec/ext/body_hash/1.0/oauth-bodyhash.html) you can either
-* Manually generate the body hash and pass it as a string `body_hash: '...'`
-* Automatically generate the body hash by passing `body_hash: true`
-
-[back to top](#table-of-contents)
-
-
----
-
-
-## Proxies
-
-If you specify a `proxy` option, then the request (and any subsequent
-redirects) will be sent via a connection to the proxy server.
-
-If your endpoint is an `https` url, and you are using a proxy, then
-request will send a `CONNECT` request to the proxy server *first*, and
-then use the supplied connection to connect to the endpoint.
-
-That is, first it will make a request like:
-
-```
-HTTP/1.1 CONNECT endpoint-server.com:80
-Host: proxy-server.com
-User-Agent: whatever user agent you specify
-```
-
-and then the proxy server make a TCP connection to `endpoint-server`
-on port `80`, and return a response that looks like:
-
-```
-HTTP/1.1 200 OK
-```
-
-At this point, the connection is left open, and the client is
-communicating directly with the `endpoint-server.com` machine.
-
-See [the wikipedia page on HTTP Tunneling](https://en.wikipedia.org/wiki/HTTP_tunnel)
-for more information.
-
-By default, when proxying `http` traffic, request will simply make a
-standard proxied `http` request. This is done by making the `url`
-section of the initial line of the request a fully qualified url to
-the endpoint.
-
-For example, it will make a single request that looks like:
-
-```
-HTTP/1.1 GET http://endpoint-server.com/some-url
-Host: proxy-server.com
-Other-Headers: all go here
-
-request body or whatever
-```
-
-Because a pure "http over http" tunnel offers no additional security
-or other features, it is generally simpler to go with a
-straightforward HTTP proxy in this case. However, if you would like
-to force a tunneling proxy, you may set the `tunnel` option to `true`.
-
-You can also make a standard proxied `http` request by explicitly setting
-`tunnel : false`, but **note that this will allow the proxy to see the traffic
-to/from the destination server**.
-
-If you are using a tunneling proxy, you may set the
-`proxyHeaderWhiteList` to share certain headers with the proxy.
-
-You can also set the `proxyHeaderExclusiveList` to share certain
-headers only with the proxy and not with destination host.
-
-By default, this set is:
-
-```
-accept
-accept-charset
-accept-encoding
-accept-language
-accept-ranges
-cache-control
-content-encoding
-content-language
-content-length
-content-location
-content-md5
-content-range
-content-type
-connection
-date
-expect
-max-forwards
-pragma
-proxy-authorization
-referer
-te
-transfer-encoding
-user-agent
-via
-```
-
-Note that, when using a tunneling proxy, the `proxy-authorization`
-header and any headers from custom `proxyHeaderExclusiveList` are
-*never* sent to the endpoint server, but only to the proxy server.
-
-
-### Controlling proxy behaviour using environment variables
-
-The following environment variables are respected by `request`:
-
- * `HTTP_PROXY` / `http_proxy`
- * `HTTPS_PROXY` / `https_proxy`
- * `NO_PROXY` / `no_proxy`
-
-When `HTTP_PROXY` / `http_proxy` are set, they will be used to proxy non-SSL requests that do not have an explicit `proxy` configuration option present. Similarly, `HTTPS_PROXY` / `https_proxy` will be respected for SSL requests that do not have an explicit `proxy` configuration option. It is valid to define a proxy in one of the environment variables, but then override it for a specific request, using the `proxy` configuration option. Furthermore, the `proxy` configuration option can be explicitly set to false / null to opt out of proxying altogether for that request.
-
-`request` is also aware of the `NO_PROXY`/`no_proxy` environment variables. These variables provide a granular way to opt out of proxying, on a per-host basis. It should contain a comma separated list of hosts to opt out of proxying. It is also possible to opt of proxying when a particular destination port is used. Finally, the variable may be set to `*` to opt out of the implicit proxy configuration of the other environment variables.
-
-Here's some examples of valid `no_proxy` values:
-
- * `google.com` - don't proxy HTTP/HTTPS requests to Google.
- * `google.com:443` - don't proxy HTTPS requests to Google, but *do* proxy HTTP requests to Google.
- * `google.com:443, yahoo.com:80` - don't proxy HTTPS requests to Google, and don't proxy HTTP requests to Yahoo!
- * `*` - ignore `https_proxy`/`http_proxy` environment variables altogether.
-
-[back to top](#table-of-contents)
-
-
----
-
-
-## UNIX Domain Sockets
-
-`request` supports making requests to [UNIX Domain Sockets](https://en.wikipedia.org/wiki/Unix_domain_socket). To make one, use the following URL scheme:
-
-```js
-/* Pattern */ 'http://unix:SOCKET:PATH'
-/* Example */ request.get('http://unix:/absolute/path/to/unix.socket:/request/path')
-```
-
-Note: The `SOCKET` path is assumed to be absolute to the root of the host file system.
-
-[back to top](#table-of-contents)
-
-
----
-
-
-## TLS/SSL Protocol
-
-TLS/SSL Protocol options, such as `cert`, `key` and `passphrase`, can be
-set directly in `options` object, in the `agentOptions` property of the `options` object, or even in `https.globalAgent.options`. Keep in mind that, although `agentOptions` allows for a slightly wider range of configurations, the recommended way is via `options` object directly, as using `agentOptions` or `https.globalAgent.options` would not be applied in the same way in proxied environments (as data travels through a TLS connection instead of an http/https agent).
-
-```js
-var fs = require('fs')
-    , path = require('path')
-    , certFile = path.resolve(__dirname, 'ssl/client.crt')
-    , keyFile = path.resolve(__dirname, 'ssl/client.key')
-    , caFile = path.resolve(__dirname, 'ssl/ca.cert.pem')
-    , request = require('request');
-
-var options = {
-    url: 'https://api.some-server.com/',
-    cert: fs.readFileSync(certFile),
-    key: fs.readFileSync(keyFile),
-    passphrase: 'password',
-    ca: fs.readFileSync(caFile)
-};
-
-request.get(options);
-```
-
-### Using `options.agentOptions`
-
-In the example below, we call an API that requires client side SSL certificate
-(in PEM format) with passphrase protected private key (in PEM format) and disable the SSLv3 protocol:
-
-```js
-var fs = require('fs')
-    , path = require('path')
-    , certFile = path.resolve(__dirname, 'ssl/client.crt')
-    , keyFile = path.resolve(__dirname, 'ssl/client.key')
-    , request = require('request');
-
-var options = {
-    url: 'https://api.some-server.com/',
-    agentOptions: {
-        cert: fs.readFileSync(certFile),
-        key: fs.readFileSync(keyFile),
-        // Or use `pfx` property replacing `cert` and `key` when using private key, certificate and CA certs in PFX or PKCS12 format:
-        // pfx: fs.readFileSync(pfxFilePath),
-        passphrase: 'password',
-        securityOptions: 'SSL_OP_NO_SSLv3'
-    }
-};
-
-request.get(options);
-```
-
-It is able to force using SSLv3 only by specifying `secureProtocol`:
-
-```js
-request.get({
-    url: 'https://api.some-server.com/',
-    agentOptions: {
-        secureProtocol: 'SSLv3_method'
-    }
-});
-```
-
-It is possible to accept other certificates than those signed by generally allowed Certificate Authorities (CAs).
-This can be useful, for example,  when using self-signed certificates.
-To require a different root certificate, you can specify the signing CA by adding the contents of the CA's certificate file to the `agentOptions`.
-The certificate the domain presents must be signed by the root certificate specified:
-
-```js
-request.get({
-    url: 'https://api.some-server.com/',
-    agentOptions: {
-        ca: fs.readFileSync('ca.cert.pem')
-    }
-});
-```
-
-[back to top](#table-of-contents)
-
-
----
-
-## Support for HAR 1.2
-
-The `options.har` property will override the values: `url`, `method`, `qs`, `headers`, `form`, `formData`, `body`, `json`, as well as construct multipart data and read files from disk when `request.postData.params[].fileName` is present without a matching `value`.
-
-A validation step will check if the HAR Request format matches the latest spec (v1.2) and will skip parsing if not matching.
-
-```js
-  var request = require('request')
-  request({
-    // will be ignored
-    method: 'GET',
-    uri: 'http://www.google.com',
-
-    // HTTP Archive Request Object
-    har: {
-      url: 'http://www.mockbin.com/har',
-      method: 'POST',
-      headers: [
-        {
-          name: 'content-type',
-          value: 'application/x-www-form-urlencoded'
-        }
-      ],
-      postData: {
-        mimeType: 'application/x-www-form-urlencoded',
-        params: [
-          {
-            name: 'foo',
-            value: 'bar'
-          },
-          {
-            name: 'hello',
-            value: 'world'
-          }
-        ]
-      }
-    }
-  })
-
-  // a POST request will be sent to http://www.mockbin.com
-  // with body an application/x-www-form-urlencoded body:
-  // foo=bar&hello=world
-```
-
-[back to top](#table-of-contents)
-
-
----
-
-## request(options, callback)
-
-The first argument can be either a `url` or an `options` object. The only required option is `uri`; all others are optional.
-
-- `uri` || `url` - fully qualified uri or a parsed url object from `url.parse()`
-- `baseUrl` - fully qualified uri string used as the base url. Most useful with `request.defaults`, for example when you want to do many requests to the same domain. If `baseUrl` is `https://example.com/api/`, then requesting `/end/point?test=true` will fetch `https://example.com/api/end/point?test=true`. When `baseUrl` is given, `uri` must also be a string.
-- `method` - http method (default: `"GET"`)
-- `headers` - http headers (default: `{}`)
-
----
-
-- `qs` - object containing querystring values to be appended to the `uri`
-- `qsParseOptions` - object containing options to pass to the [qs.parse](https://github.com/hapijs/qs#parsing-objects) method. Alternatively pass options to the [querystring.parse](https://nodejs.org/docs/v0.12.0/api/querystring.html#querystring_querystring_parse_str_sep_eq_options) method using this format `{sep:';', eq:':', options:{}}`
-- `qsStringifyOptions` - object containing options to pass to the [qs.stringify](https://github.com/hapijs/qs#stringifying) method. Alternatively pass options to the  [querystring.stringify](https://nodejs.org/docs/v0.12.0/api/querystring.html#querystring_querystring_stringify_obj_sep_eq_options) method using this format `{sep:';', eq:':', options:{}}`. For example, to change the way arrays are converted to query strings using the `qs` module pass the `arrayFormat` option with one of `indices|brackets|repeat`
-- `useQuerystring` - if true, use `querystring` to stringify and parse
-  querystrings, otherwise use `qs` (default: `false`). Set this option to
-  `true` if you need arrays to be serialized as `foo=bar&foo=baz` instead of the
-  default `foo[0]=bar&foo[1]=baz`.
-
----
-
-- `body` - entity body for PATCH, POST and PUT requests. Must be a `Buffer`, `String` or `ReadStream`. If `json` is `true`, then `body` must be a JSON-serializable object.
-- `form` - when passed an object or a querystring, this sets `body` to a querystring representation of value, and adds `Content-type: application/x-www-form-urlencoded` header. When passed no options, a `FormData` instance is returned (and is piped to request). See "Forms" section above.
-- `formData` - data to pass for a `multipart/form-data` request. See
-  [Forms](#forms) section above.
-- `multipart` - array of objects which contain their own headers and `body`
-  attributes. Sends a `multipart/related` request. See [Forms](#forms) section
-  above.
-  - Alternatively you can pass in an object `{chunked: false, data: []}` where
-    `chunked` is used to specify whether the request is sent in
-    [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding)
-    In non-chunked requests, data items with body streams are not allowed.
-- `preambleCRLF` - append a newline/CRLF before the boundary of your `multipart/form-data` request.
-- `postambleCRLF` - append a newline/CRLF at the end of the boundary of your `multipart/form-data` request.
-- `json` - sets `body` to JSON representation of value and adds `Content-type: application/json` header. Additionally, parses the response body as JSON.
-- `jsonReviver` - a [reviver function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse) that will be passed to `JSON.parse()` when parsing a JSON response body.
-- `jsonReplacer` - a [replacer function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) that will be passed to `JSON.stringify()` when stringifying a JSON request body.
-
----
-
-- `auth` - a hash containing values `user` || `username`, `pass` || `password`, and `sendImmediately` (optional). See documentation above.
-- `oauth` - options for OAuth HMAC-SHA1 signing. See documentation above.
-- `hawk` - options for [Hawk signing](https://github.com/hueniverse/hawk). The `credentials` key must contain the necessary signing info, [see hawk docs for details](https://github.com/hueniverse/hawk#usage-example).
-- `aws` - `object` containing AWS signing information. Should have the properties `key`, `secret`, and optionally `session` (note that this only works for services that require session as part of the canonical string). Also requires the property `bucket`, unless you’re specifying your `bucket` as part of the path, or the request doesn’t use a bucket (i.e. GET Services). If you want to use AWS sign version 4 use the parameter `sign_version` with value `4` otherwise the default is version 2. **Note:** you need to `npm install aws4` first.
-- `httpSignature` - options for the [HTTP Signature Scheme](https://github.com/joyent/node-http-signature/blob/master/http_signing.md) using [Joyent's library](https://github.com/joyent/node-http-signature). The `keyId` and `key` properties must be specified. See the docs for other options.
-
----
-
-- `followRedirect` - follow HTTP 3xx responses as redirects (default: `true`). This property can also be implemented as function which gets `response` object as a single argument and should return `true` if redirects should continue or `false` otherwise.
-- `followAllRedirects` - follow non-GET HTTP 3xx responses as redirects (default: `false`)
-- `followOriginalHttpMethod` - by default we redirect to HTTP method GET. you can enable this property to redirect to the original HTTP method (default: `false`)
-- `maxRedirects` - the maximum number of redirects to follow (default: `10`)
-- `removeRefererHeader` - removes the referer header when a redirect happens (default: `false`). **Note:** if true, referer header set in the initial request is preserved during redirect chain.
-
----
-
-- `encoding` - encoding to be used on `setEncoding` of response data. If `null`, the `body` is returned as a `Buffer`. Anything else **(including the default value of `undefined`)** will be passed as the [encoding](http://nodejs.org/api/buffer.html#buffer_buffer) parameter to `toString()` (meaning this is effectively `utf8` by default). (**Note:** if you expect binary data, you should set `encoding: null`.)
-- `gzip` - if `true`, add an `Accept-Encoding` header to request compressed content encodings from the server (if not already present) and decode supported content encodings in the response. **Note:** Automatic decoding of the response content is performed on the body data returned through `request` (both through the `request` stream and passed to the callback function) but is not performed on the `response` stream (available from the `response` event) which is the unmodified `http.IncomingMessage` object which may contain compressed data. See example below.
-- `jar` - if `true`, remember cookies for future use (or define your custom cookie jar; see examples section)
-
----
-
-- `agent` - `http(s).Agent` instance to use
-- `agentClass` - alternatively specify your agent's class name
-- `agentOptions` - and pass its options. **Note:** for HTTPS see [tls API doc for TLS/SSL options](http://nodejs.org/api/tls.html#tls_tls_connect_options_callback) and the [documentation above](#using-optionsagentoptions).
-- `forever` - set to `true` to use the [forever-agent](https://github.com/request/forever-agent) **Note:** Defaults to `http(s).Agent({keepAlive:true})` in node 0.12+
-- `pool` - an object describing which agents to use for the request. If this option is omitted the request will use the global agent (as long as your options allow for it). Otherwise, request will search the pool for your custom agent. If no custom agent is found, a new agent will be created and added to the pool. **Note:** `pool` is used only when the `agent` option is not specified.
-  - A `maxSockets` property can also be provided on the `pool` object to set the max number of sockets for all agents created (ex: `pool: {maxSockets: Infinity}`).
-  - Note that if you are sending multiple requests in a loop and creating
-    multiple new `pool` objects, `maxSockets` will not work as intended. To
-    work around this, either use [`request.defaults`](#requestdefaultsoptions)
-    with your pool options or create the pool object with the `maxSockets`
-    property outside of the loop.
-- `timeout` - integer containing the number of milliseconds to wait for a
-server to send response headers (and start the response body) before aborting
-the request. Note that if the underlying TCP connection cannot be established,
-the OS-wide TCP connection timeout will overrule the `timeout` option ([the
-default in Linux can be anywhere from 20-120 seconds][linux-timeout]).
-
-[linux-timeout]: http://www.sekuda.com/overriding_the_default_linux_kernel_20_second_tcp_socket_connect_timeout
-
----
-
-- `localAddress` - local interface to bind for network connections.
-- `proxy` - an HTTP proxy to be used. Supports proxy Auth with Basic Auth, identical to support for the `url` parameter (by embedding the auth info in the `uri`)
-- `strictSSL` - if `true`, requires SSL certificates be valid. **Note:** to use your own certificate authority, you need to specify an agent that was created with that CA as an option.
-- `tunnel` - controls the behavior of
-  [HTTP `CONNECT` tunneling](https://en.wikipedia.org/wiki/HTTP_tunnel#HTTP_CONNECT_tunneling)
-  as follows:
-   - `undefined` (default) - `true` if the destination is `https`, `false` otherwise
-   - `true` - always tunnel to the destination by making a `CONNECT` request to
-     the proxy
-   - `false` - request the destination as a `GET` request.
-- `proxyHeaderWhiteList` - a whitelist of headers to send to a
-  tunneling proxy.
-- `proxyHeaderExclusiveList` - a whitelist of headers to send
-  exclusively to a tunneling proxy and not to destination.
-
----
-
-- `time` - if `true`, the request-response cycle (including all redirects) is timed at millisecond resolution. When set, the following properties are added to the response object:
-  - `elapsedTime` Duration of the entire request/response in milliseconds (*deprecated*).
-  - `responseStartTime` Timestamp when the response began (in Unix Epoch milliseconds) (*deprecated*).
-  - `timingStart` Timestamp of the start of the request (in Unix Epoch milliseconds).
-  - `timings` Contains event timestamps in millisecond resolution relative to `timingStart`. If there were redirects, the properties reflect the timings of the final request in the redirect chain:
-    - `socket` Relative timestamp when the [`http`](https://nodejs.org/api/http.html#http_event_socket) module's `socket` event fires. This happens when the socket is assigned to the request.
-    - `lookup` Relative timestamp when the [`net`](https://nodejs.org/api/net.html#net_event_lookup) module's `lookup` event fires. This happens when the DNS has been resolved.
-    - `connect`: Relative timestamp when the [`net`](https://nodejs.org/api/net.html#net_event_connect) module's `connect` event fires. This happens when the server acknowledges the TCP connection.
-    - `response`: Relative timestamp when the [`http`](https://nodejs.org/api/http.html#http_event_response) module's `response` event fires. This happens when the first bytes are received from the server.
-    - `end`: Relative timestamp when the last bytes of the response are received.
-  - `timingPhases` Contains the durations of each request phase. If there were redirects, the properties reflect the timings of the final request in the redirect chain:
-    - `wait`: Duration of socket initialization (`timings.socket`)
-    - `dns`: Duration of DNS lookup (`timings.lookup` - `timings.socket`)
-    - `tcp`: Duration of TCP connection (`timings.connect` - `timings.socket`)
-    - `firstByte`: Duration of HTTP server response (`timings.response` - `timings.connect`)
-    - `download`: Duration of HTTP download (`timings.end` - `timings.response`)
-    - `total`: Duration entire HTTP round-trip (`timings.end`)
-
-- `har` - a [HAR 1.2 Request Object](http://www.softwareishard.com/blog/har-12-spec/#request), will be processed from HAR format into options overwriting matching values *(see the [HAR 1.2 section](#support-for-har-1.2) for details)*
-- `callback` - alternatively pass the request's callback in the options object
-
-The callback argument gets 3 arguments:
-
-1. An `error` when applicable (usually from [`http.ClientRequest`](http://nodejs.org/api/http.html#http_class_http_clientrequest) object)
-2. An [`http.IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) object (Response object)
-3. The third is the `response` body (`String` or `Buffer`, or JSON object if the `json` option is supplied)
-
-[back to top](#table-of-contents)
-
-
----
-
-## Convenience methods
-
-There are also shorthand methods for different HTTP METHODs and some other conveniences.
-
-
-### request.defaults(options)
-
-This method **returns a wrapper** around the normal request API that defaults
-to whatever options you pass to it.
-
-**Note:** `request.defaults()` **does not** modify the global request API;
-instead, it **returns a wrapper** that has your default settings applied to it.
-
-**Note:** You can call `.defaults()` on the wrapper that is returned from
-`request.defaults` to add/override defaults that were previously defaulted.
-
-For example:
-```js
-//requests using baseRequest() will set the 'x-token' header
-var baseRequest = request.defaults({
-  headers: {'x-token': 'my-token'}
-})
-
-//requests using specialRequest() will include the 'x-token' header set in
-//baseRequest and will also include the 'special' header
-var specialRequest = baseRequest.defaults({
-  headers: {special: 'special value'}
-})
-```
-
-### request.METHOD()
-
-These HTTP method convenience functions act just like `request()` but with a default method already set for you:
-
-- *request.get()*: Defaults to `method: "GET"`.
-- *request.post()*: Defaults to `method: "POST"`.
-- *request.put()*: Defaults to `method: "PUT"`.
-- *request.patch()*: Defaults to `method: "PATCH"`.
-- *request.del() / request.delete()*: Defaults to `method: "DELETE"`.
-- *request.head()*: Defaults to `method: "HEAD"`.
-- *request.options()*: Defaults to `method: "OPTIONS"`.
-
-### request.cookie()
-
-Function that creates a new cookie.
-
-```js
-request.cookie('key1=value1')
-```
-### request.jar()
-
-Function that creates a new cookie jar.
-
-```js
-request.jar()
-```
-
-[back to top](#table-of-contents)
-
-
----
-
-
-## Debugging
-
-There are at least three ways to debug the operation of `request`:
-
-1. Launch the node process like `NODE_DEBUG=request node script.js`
-   (`lib,request,otherlib` works too).
-
-2. Set `require('request').debug = true` at any time (this does the same thing
-   as #1).
-
-3. Use the [request-debug module](https://github.com/request/request-debug) to
-   view request and response headers and bodies.
-
-[back to top](#table-of-contents)
-
-
----
-
-## Timeouts
-
-Most requests to external servers should have a timeout attached, in case the
-server is not responding in a timely manner. Without a timeout, your code may
-have a socket open/consume resources for minutes or more.
-
-There are two main types of timeouts: **connection timeouts** and **read
-timeouts**. A connect timeout occurs if the timeout is hit while your client is
-attempting to establish a connection to a remote machine (corresponding to the
-[connect() call][connect] on the socket). A read timeout occurs any time the
-server is too slow to send back a part of the response.
-
-These two situations have widely different implications for what went wrong
-with the request, so it's useful to be able to distinguish them. You can detect
-timeout errors by checking `err.code` for an 'ETIMEDOUT' value. Further, you
-can detect whether the timeout was a connection timeout by checking if the
-`err.connect` property is set to `true`.
-
-```js
-request.get('http://10.255.255.1', {timeout: 1500}, function(err) {
-    console.log(err.code === 'ETIMEDOUT');
-    // Set to `true` if the timeout was a connection timeout, `false` or
-    // `undefined` otherwise.
-    console.log(err.connect === true);
-    process.exit(0);
-});
-```
-
-[connect]: http://linux.die.net/man/2/connect
-
-## Examples:
-
-```js
-  var request = require('request')
-    , rand = Math.floor(Math.random()*100000000).toString()
-    ;
-  request(
-    { method: 'PUT'
-    , uri: 'http://mikeal.iriscouch.com/testjs/' + rand
-    , multipart:
-      [ { 'content-type': 'application/json'
-        ,  body: JSON.stringify({foo: 'bar', _attachments: {'message.txt': {follows: true, length: 18, 'content_type': 'text/plain' }}})
-        }
-      , { body: 'I am an attachment' }
-      ]
-    }
-  , function (error, response, body) {
-      if(response.statusCode == 201){
-        console.log('document saved as: http://mikeal.iriscouch.com/testjs/'+ rand)
-      } else {
-        console.log('error: '+ response.statusCode)
-        console.log(body)
-      }
-    }
-  )
-```
-
-For backwards-compatibility, response compression is not supported by default.
-To accept gzip-compressed responses, set the `gzip` option to `true`. Note
-that the body data passed through `request` is automatically decompressed
-while the response object is unmodified and will contain compressed data if
-the server sent a compressed response.
-
-```js
-  var request = require('request')
-  request(
-    { method: 'GET'
-    , uri: 'http://www.google.com'
-    , gzip: true
-    }
-  , function (error, response, body) {
-      // body is the decompressed response body
-      console.log('server encoded the data as: ' + (response.headers['content-encoding'] || 'identity'))
-      console.log('the decoded data is: ' + body)
-    }
-  )
-  .on('data', function(data) {
-    // decompressed data as it is received
-    console.log('decoded chunk: ' + data)
-  })
-  .on('response', function(response) {
-    // unmodified http.IncomingMessage object
-    response.on('data', function(data) {
-      // compressed data as it is received
-      console.log('received ' + data.length + ' bytes of compressed data')
-    })
-  })
-```
-
-Cookies are disabled by default (else, they would be used in subsequent requests). To enable cookies, set `jar` to `true` (either in `defaults` or `options`).
-
-```js
-var request = request.defaults({jar: true})
-request('http://www.google.com', function () {
-  request('http://images.google.com')
-})
-```
-
-To use a custom cookie jar (instead of `request`’s global cookie jar), set `jar` to an instance of `request.jar()` (either in `defaults` or `options`)
-
-```js
-var j = request.jar()
-var request = request.defaults({jar:j})
-request('http://www.google.com', function () {
-  request('http://images.google.com')
-})
-```
-
-OR
-
-```js
-var j = request.jar();
-var cookie = request.cookie('key1=value1');
-var url = 'http://www.google.com';
-j.setCookie(cookie, url);
-request({url: url, jar: j}, function () {
-  request('http://images.google.com')
-})
-```
-
-To use a custom cookie store (such as a
-[`FileCookieStore`](https://github.com/mitsuru/tough-cookie-filestore)
-which supports saving to and restoring from JSON files), pass it as a parameter
-to `request.jar()`:
-
-```js
-var FileCookieStore = require('tough-cookie-filestore');
-// NOTE - currently the 'cookies.json' file must already exist!
-var j = request.jar(new FileCookieStore('cookies.json'));
-request = request.defaults({ jar : j })
-request('http://www.google.com', function() {
-  request('http://images.google.com')
-})
-```
-
-The cookie store must be a
-[`tough-cookie`](https://github.com/SalesforceEng/tough-cookie)
-store and it must support synchronous operations; see the
-[`CookieStore` API docs](https://github.com/SalesforceEng/tough-cookie#cookiestore-api)
-for details.
-
-To inspect your cookie jar after a request:
-
-```js
-var j = request.jar()
-request({url: 'http://www.google.com', jar: j}, function () {
-  var cookie_string = j.getCookieString(url); // "key1=value1; key2=value2; ..."
-  var cookies = j.getCookies(url);
-  // [{key: 'key1', value: 'value1', domain: "www.google.com", ...}, ...]
-})
-```
-
-[back to top](#table-of-contents)
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/node_modules/extend/.eslintrc
+++ /dev/null
@@ -1,17 +0,0 @@
-{
-	"root": true,
-
-	"extends": "@ljharb",
-
-	"rules": {
-		"complexity": [2, 15],
-		"eqeqeq": [2, "allow-null"],
-		"func-name-matching": [1],
-		"max-depth": [1, 4],
-		"max-statements": [2, 26],
-		"no-extra-parens": [1],
-		"no-magic-numbers": [0],
-		"no-restricted-syntax": [2, "BreakStatement", "ContinueStatement", "DebuggerStatement", "LabeledStatement", "WithStatement"],
-		"sort-keys": [0],
-	}
-}
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/node_modules/extend/.npmignore
+++ /dev/null
@@ -1 +0,0 @@
-test
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/node_modules/extend/.travis.yml
+++ /dev/null
@@ -1,179 +0,0 @@
-language: node_js
-os:
- - linux
-node_js:
-  - "7.9"
-  - "6.10"
-  - "5.12"
-  - "4.8"
-  - "iojs-v3.3"
-  - "iojs-v2.5"
-  - "iojs-v1.8"
-  - "0.12"
-  - "0.10"
-  - "0.8"
-before_install:
-  - 'if [ "${TRAVIS_NODE_VERSION}" = "0.6" ]; then npm install -g npm@1.3 ; elif [ "${TRAVIS_NODE_VERSION}" != "0.9" ]; then case "$(npm --version)" in 1.*) npm install -g npm@1.4.28 ;; 2.*) npm install -g npm@2 ;; esac ; fi'
-  - 'if [ "${TRAVIS_NODE_VERSION}" != "0.6" ] && [ "${TRAVIS_NODE_VERSION}" != "0.9" ]; then npm install -g npm; fi'
-install:
-  - 'if [ "${TRAVIS_NODE_VERSION}" = "0.6" ]; then nvm install 0.8 && npm install -g npm@1.3 && npm install -g npm@1.4.28 && npm install -g npm@2 && npm install && nvm use "${TRAVIS_NODE_VERSION}"; else npm install; fi;'
-script:
-  - 'if [ -n "${PRETEST-}" ]; then npm run pretest ; fi'
-  - 'if [ -n "${POSTTEST-}" ]; then npm run posttest ; fi'
-  - 'if [ -n "${COVERAGE-}" ]; then npm run coverage ; fi'
-  - 'if [ -n "${TEST-}" ]; then npm run tests-only ; fi'
-sudo: false
-env:
-  - TEST=true
-matrix:
-  fast_finish: true
-  include:
-    - node_js: "node"
-      env: PRETEST=true
-    - node_js: "node"
-      env: COVERAGE=true
-    - node_js: "7.8"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "7.7"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "7.6"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "7.5"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "7.4"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "7.3"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "7.2"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "7.1"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "7.0"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "6.9"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "6.8"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "6.7"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "6.6"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "6.5"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "6.4"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "6.3"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "6.2"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "6.1"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "6.0"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "5.11"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "5.10"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "5.9"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "5.8"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "5.7"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "5.6"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "5.5"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "5.4"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "5.3"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "5.2"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "5.1"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "5.0"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "4.7"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "4.6"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "4.5"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "4.4"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "4.3"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "4.2"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "4.1"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "4.0"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "iojs-v3.2"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "iojs-v3.1"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "iojs-v3.0"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "iojs-v2.4"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "iojs-v2.3"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "iojs-v2.2"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "iojs-v2.1"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "iojs-v2.0"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "iojs-v1.7"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "iojs-v1.6"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "iojs-v1.5"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "iojs-v1.4"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "iojs-v1.3"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "iojs-v1.2"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "iojs-v1.1"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "iojs-v1.0"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "0.11"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "0.9"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "0.6"
-      env: TEST=true ALLOW_FAILURE=true
-    - node_js: "0.4"
-      env: TEST=true ALLOW_FAILURE=true
-    ##- node_js: "7"
-      #env: TEST=true
-      #os: osx
-    #- node_js: "6"
-      #env: TEST=true
-      #os: osx
-    #- node_js: "5"
-      #env: TEST=true
-      #os: osx
-    #- node_js: "4"
-      #env: TEST=true
-      #os: osx
-    #- node_js: "iojs"
-      #env: TEST=true
-      #os: osx
-    #- node_js: "0.12"
-      #env: TEST=true
-      #os: osx
-    #- node_js: "0.10"
-      #env: TEST=true
-      #os: osx
-    #- node_js: "0.8"
-      #env: TEST=true
-      #os: osx
-  allow_failures:
-    - os: osx
-    - env: TEST=true ALLOW_FAILURE=true
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/node_modules/extend/CHANGELOG.md
+++ /dev/null
@@ -1,77 +0,0 @@
-3.0.1 / 2017-04-27
-==================
-  * [Fix] deep extending should work with a non-object (#46)
-  * [Dev Deps] update `tape`, `eslint`, `@ljharb/eslint-config`
-  * [Tests] up to `node` `v7.9`, `v6.10`, `v4.8`; improve matrix
-  * [Docs] Switch from vb.teelaun.ch to versionbadg.es for the npm version badge SVG.
-  * [Docs] Add example to readme (#34)
-
-3.0.0 / 2015-07-01
-==================
-  * [Possible breaking change] Use global "strict" directive (#32)
-  * [Tests] `int` is an ES3 reserved word
-  * [Tests] Test up to `io.js` `v2.3`
-  * [Tests] Add `npm run eslint`
-  * [Dev Deps] Update `covert`, `jscs`
-
-2.0.1 / 2015-04-25
-==================
-  * Use an inline `isArray` check, for ES3 browsers. (#27)
-  * Some old browsers fail when an identifier is `toString`
-  * Test latest `node` and `io.js` versions on `travis-ci`; speed up builds
-  * Add license info to package.json (#25)
-  * Update `tape`, `jscs`
-  * Adding a CHANGELOG
-
-2.0.0 / 2014-10-01
-==================
-  * Increase code coverage to 100%; run code coverage as part of tests
-  * Add `npm run lint`; Run linter as part of tests
-  * Remove nodeType and setInterval checks in isPlainObject
-  * Updating `tape`, `jscs`, `covert`
-  * General style and README cleanup
-
-1.3.0 / 2014-06-20
-==================
-  * Add component.json for browser support (#18)
-  * Use SVG for badges in README (#16)
-  * Updating `tape`, `covert`
-  * Updating travis-ci to work with multiple node versions
-  * Fix `deep === false` bug (returning target as {}) (#14)
-  * Fixing constructor checks in isPlainObject
-  * Adding additional test coverage
-  * Adding `npm run coverage`
-  * Add LICENSE (#13)
-  * Adding a warning about `false`, per #11
-  * General style and whitespace cleanup
-
-1.2.1 / 2013-09-14
-==================
-  * Fixing hasOwnProperty bugs that would only have shown up in specific browsers. Fixes #8
-  * Updating `tape`
-
-1.2.0 / 2013-09-02
-==================
-  * Updating the README: add badges
-  * Adding a missing variable reference.
-  * Using `tape` instead of `buster` for tests; add more tests (#7)
-  * Adding node 0.10 to Travis CI (#6)
-  * Enabling "npm test" and cleaning up package.json (#5)
-  * Add Travis CI.
-
-1.1.3 / 2012-12-06
-==================
-  * Added unit tests.
-  * Ensure extend function is named. (Looks nicer in a stack trace.)
-  * README cleanup.
-
-1.1.1 / 2012-11-07
-==================
-  * README cleanup.
-  * Added installation instructions.
-  * Added a missing semicolon
-
-1.0.0 / 2012-04-08
-==================
-  * Initial commit
-
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/node_modules/extend/README.md
+++ /dev/null
@@ -1,81 +0,0 @@
-[![Build Status][travis-svg]][travis-url]
-[![dependency status][deps-svg]][deps-url]
-[![dev dependency status][dev-deps-svg]][dev-deps-url]
-
-# extend() for Node.js <sup>[![Version Badge][npm-version-png]][npm-url]</sup>
-
-`node-extend` is a port of the classic extend() method from jQuery. It behaves as you expect. It is simple, tried and true.
-
-Notes:
-
-* Since Node.js >= 4,
-  [`Object.assign`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)
-  now offers the same functionality natively (but without the "deep copy" option).
-  See [ECMAScript 2015 (ES6) in Node.js](https://nodejs.org/en/docs/es6).
-* Some native implementations of `Object.assign` in both Node.js and many
-  browsers (since NPM modules are for the browser too) may not be fully
-  spec-compliant.
-  Check [`object.assign`](https://www.npmjs.com/package/object.assign) module for
-  a compliant candidate.
-
-## Installation
-
-This package is available on [npm][npm-url] as: `extend`
-
-``` sh
-npm install extend
-```
-
-## Usage
-
-**Syntax:** extend **(** [`deep`], `target`, `object1`, [`objectN`] **)**
-
-*Extend one object with one or more others, returning the modified object.*
-
-**Example:**
-
-``` js
-var extend = require('extend');
-extend(targetObject, object1, object2);
-```
-
-Keep in mind that the target object will be modified, and will be returned from extend().
-
-If a boolean true is specified as the first argument, extend performs a deep copy, recursively copying any objects it finds. Otherwise, the copy will share structure with the original object(s).
-Undefined properties are not copied. However, properties inherited from the object's prototype will be copied over.
-Warning: passing `false` as the first argument is not supported.
-
-### Arguments
-
-* `deep` *Boolean* (optional)
-If set, the merge becomes recursive (i.e. deep copy).
-* `target`	*Object*
-The object to extend.
-* `object1`	*Object*
-The object that will be merged into the first.
-* `objectN` *Object* (Optional)
-More objects to merge into the first.
-
-## License
-
-`node-extend` is licensed under the [MIT License][mit-license-url].
-
-## Acknowledgements
-
-All credit to the jQuery authors for perfecting this amazing utility.
-
-Ported to Node.js by [Stefan Thomas][github-justmoon] with contributions by [Jonathan Buchanan][github-insin] and [Jordan Harband][github-ljharb].
-
-[travis-svg]: https://travis-ci.org/justmoon/node-extend.svg
-[travis-url]: https://travis-ci.org/justmoon/node-extend
-[npm-url]: https://npmjs.org/package/extend
-[mit-license-url]: http://opensource.org/licenses/MIT
-[github-justmoon]: https://github.com/justmoon
-[github-insin]: https://github.com/insin
-[github-ljharb]: https://github.com/ljharb
-[npm-version-png]: http://versionbadg.es/justmoon/node-extend.svg
-[deps-svg]: https://david-dm.org/justmoon/node-extend.svg
-[deps-url]: https://david-dm.org/justmoon/node-extend
-[dev-deps-svg]: https://david-dm.org/justmoon/node-extend/dev-status.svg
-[dev-deps-url]: https://david-dm.org/justmoon/node-extend#info=devDependencies
-
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/node_modules/form-data/README.md
+++ /dev/null
@@ -1,234 +0,0 @@
-# Form-Data [![NPM Module](https://img.shields.io/npm/v/form-data.svg)](https://www.npmjs.com/package/form-data) [![Join the chat at https://gitter.im/form-data/form-data](http://form-data.github.io/images/gitterbadge.svg)](https://gitter.im/form-data/form-data)
-
-A library to create readable ```"multipart/form-data"``` streams. Can be used to submit forms and file uploads to other web applications.
-
-The API of this library is inspired by the [XMLHttpRequest-2 FormData Interface][xhr2-fd].
-
-[xhr2-fd]: http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#the-formdata-interface
-
-[![Linux Build](https://img.shields.io/travis/form-data/form-data/v2.3.2.svg?label=linux:4.x-9.x)](https://travis-ci.org/form-data/form-data)
-[![MacOS Build](https://img.shields.io/travis/form-data/form-data/v2.3.2.svg?label=macos:4.x-9.x)](https://travis-ci.org/form-data/form-data)
-[![Windows Build](https://img.shields.io/appveyor/ci/alexindigo/form-data/v2.3.2.svg?label=windows:4.x-9.x)](https://ci.appveyor.com/project/alexindigo/form-data)
-
-[![Coverage Status](https://img.shields.io/coveralls/form-data/form-data/v2.3.2.svg?label=code+coverage)](https://coveralls.io/github/form-data/form-data?branch=master)
-[![Dependency Status](https://img.shields.io/david/form-data/form-data.svg)](https://david-dm.org/form-data/form-data)
-[![bitHound Overall Score](https://www.bithound.io/github/form-data/form-data/badges/score.svg)](https://www.bithound.io/github/form-data/form-data)
-
-## Install
-
-```
-npm install --save form-data
-```
-
-## Usage
-
-In this example we are constructing a form with 3 fields that contain a string,
-a buffer and a file stream.
-
-``` javascript
-var FormData = require('form-data');
-var fs = require('fs');
-
-var form = new FormData();
-form.append('my_field', 'my value');
-form.append('my_buffer', new Buffer(10));
-form.append('my_file', fs.createReadStream('/foo/bar.jpg'));
-```
-
-Also you can use http-response stream:
-
-``` javascript
-var FormData = require('form-data');
-var http = require('http');
-
-var form = new FormData();
-
-http.request('http://nodejs.org/images/logo.png', function(response) {
-  form.append('my_field', 'my value');
-  form.append('my_buffer', new Buffer(10));
-  form.append('my_logo', response);
-});
-```
-
-Or @mikeal's [request](https://github.com/request/request) stream:
-
-``` javascript
-var FormData = require('form-data');
-var request = require('request');
-
-var form = new FormData();
-
-form.append('my_field', 'my value');
-form.append('my_buffer', new Buffer(10));
-form.append('my_logo', request('http://nodejs.org/images/logo.png'));
-```
-
-In order to submit this form to a web application, call ```submit(url, [callback])``` method:
-
-``` javascript
-form.submit('http://example.org/', function(err, res) {
-  // res – response object (http.IncomingMessage)  //
-  res.resume();
-});
-
-```
-
-For more advanced request manipulations ```submit()``` method returns ```http.ClientRequest``` object, or you can choose from one of the alternative submission methods.
-
-### Custom options
-
-You can provide custom options, such as `maxDataSize`:
-
-``` javascript
-var FormData = require('form-data');
-
-var form = new FormData({ maxDataSize: 20971520 });
-form.append('my_field', 'my value');
-form.append('my_buffer', /* something big */);
-```
-
-List of available options could be found in [combined-stream](https://github.com/felixge/node-combined-stream/blob/master/lib/combined_stream.js#L7-L15)
-
-### Alternative submission methods
-
-You can use node's http client interface:
-
-``` javascript
-var http = require('http');
-
-var request = http.request({
-  method: 'post',
-  host: 'example.org',
-  path: '/upload',
-  headers: form.getHeaders()
-});
-
-form.pipe(request);
-
-request.on('response', function(res) {
-  console.log(res.statusCode);
-});
-```
-
-Or if you would prefer the `'Content-Length'` header to be set for you:
-
-``` javascript
-form.submit('example.org/upload', function(err, res) {
-  console.log(res.statusCode);
-});
-```
-
-To use custom headers and pre-known length in parts:
-
-``` javascript
-var CRLF = '\r\n';
-var form = new FormData();
-
-var options = {
-  header: CRLF + '--' + form.getBoundary() + CRLF + 'X-Custom-Header: 123' + CRLF + CRLF,
-  knownLength: 1
-};
-
-form.append('my_buffer', buffer, options);
-
-form.submit('http://example.com/', function(err, res) {
-  if (err) throw err;
-  console.log('Done');
-});
-```
-
-Form-Data can recognize and fetch all the required information from common types of streams (```fs.readStream```, ```http.response``` and ```mikeal's request```), for some other types of streams you'd need to provide "file"-related information manually:
-
-``` javascript
-someModule.stream(function(err, stdout, stderr) {
-  if (err) throw err;
-
-  var form = new FormData();
-
-  form.append('file', stdout, {
-    filename: 'unicycle.jpg', // ... or:
-    filepath: 'photos/toys/unicycle.jpg',
-    contentType: 'image/jpeg',
-    knownLength: 19806
-  });
-
-  form.submit('http://example.com/', function(err, res) {
-    if (err) throw err;
-    console.log('Done');
-  });
-});
-```
-
-The `filepath` property overrides `filename` and may contain a relative path. This is typically used when uploading [multiple files from a directory](https://wicg.github.io/entries-api/#dom-htmlinputelement-webkitdirectory).
-
-For edge cases, like POST request to URL with query string or to pass HTTP auth credentials, object can be passed to `form.submit()` as first parameter:
-
-``` javascript
-form.submit({
-  host: 'example.com',
-  path: '/probably.php?extra=params',
-  auth: 'username:password'
-}, function(err, res) {
-  console.log(res.statusCode);
-});
-```
-
-In case you need to also send custom HTTP headers with the POST request, you can use the `headers` key in first parameter of `form.submit()`:
-
-``` javascript
-form.submit({
-  host: 'example.com',
-  path: '/surelynot.php',
-  headers: {'x-test-header': 'test-header-value'}
-}, function(err, res) {
-  console.log(res.statusCode);
-});
-```
-
-### Integration with other libraries
-
-#### Request
-
-Form submission using  [request](https://github.com/request/request):
-
-```javascript
-var formData = {
-  my_field: 'my_value',
-  my_file: fs.createReadStream(__dirname + '/unicycle.jpg'),
-};
-
-request.post({url:'http://service.com/upload', formData: formData}, function(err, httpResponse, body) {
-  if (err) {
-    return console.error('upload failed:', err);
-  }
-  console.log('Upload successful!  Server responded with:', body);
-});
-```
-
-For more details see [request readme](https://github.com/request/request#multipartform-data-multipart-form-uploads).
-
-#### node-fetch
-
-You can also submit a form using [node-fetch](https://github.com/bitinn/node-fetch):
-
-```javascript
-var form = new FormData();
-
-form.append('a', 1);
-
-fetch('http://example.com', { method: 'POST', body: form })
-    .then(function(res) {
-        return res.json();
-    }).then(function(json) {
-        console.log(json);
-    });
-```
-
-## Notes
-
-- ```getLengthSync()``` method DOESN'T calculate length for streams, use ```knownLength``` options as workaround.
-- Starting version `2.x` FormData has dropped support for `node@0.10.x`.
-
-## License
-
-Form-Data is released under the [MIT](License) license.
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/node_modules/qs/.editorconfig
+++ /dev/null
@@ -1,30 +0,0 @@
-root = true
-
-[*]
-indent_style = space
-indent_size = 4
-end_of_line = lf
-charset = utf-8
-trim_trailing_whitespace = true
-insert_final_newline = true
-max_line_length = 140
-
-[test/*]
-max_line_length = off
-
-[*.md]
-max_line_length = off
-
-[*.json]
-max_line_length = off
-
-[Makefile]
-max_line_length = off
-
-[CHANGELOG.md]
-indent_style = space
-indent_size = 2
-
-[LICENSE]
-indent_size = 2
-max_line_length = off
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/node_modules/qs/.eslintignore
+++ /dev/null
@@ -1 +0,0 @@
-dist
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/node_modules/qs/.eslintrc
+++ /dev/null
@@ -1,19 +0,0 @@
-{
-    "root": true,
-
-    "extends": "@ljharb",
-
-    "rules": {
-        "complexity": 0,
-        "consistent-return": 1,
-		"func-name-matching": 0,
-        "id-length": [2, { "min": 1, "max": 25, "properties": "never" }],
-        "indent": [2, 4],
-        "max-params": [2, 12],
-        "max-statements": [2, 45],
-        "no-continue": 1,
-        "no-magic-numbers": 0,
-        "no-restricted-syntax": [2, "BreakStatement", "DebuggerStatement", "ForInStatement", "LabeledStatement", "WithStatement"],
-        "operator-linebreak": [2, "before"],
-    }
-}
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/node_modules/qs/CHANGELOG.md
+++ /dev/null
@@ -1,226 +0,0 @@
-## **6.5.2**
-- [Fix] use `safer-buffer` instead of `Buffer` constructor
-- [Refactor] utils: `module.exports` one thing, instead of mutating `exports` (#230)
-- [Dev Deps] update `browserify`, `eslint`, `iconv-lite`, `safer-buffer`, `tape`, `browserify`
-
-## **6.5.1**
-- [Fix] Fix parsing & compacting very deep objects (#224)
-- [Refactor] name utils functions
-- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `tape`
-- [Tests] up to `node` `v8.4`; use `nvm install-latest-npm` so newer npm doesn’t break older node
-- [Tests] Use precise dist for Node.js 0.6 runtime (#225)
-- [Tests] make 0.6 required, now that it’s passing
-- [Tests] on `node` `v8.2`; fix npm on node 0.6
-
-## **6.5.0**
-- [New] add `utils.assign`
-- [New] pass default encoder/decoder to custom encoder/decoder functions (#206)
-- [New] `parse`/`stringify`: add `ignoreQueryPrefix`/`addQueryPrefix` options, respectively (#213)
-- [Fix] Handle stringifying empty objects with addQueryPrefix (#217)
-- [Fix] do not mutate `options` argument (#207)
-- [Refactor] `parse`: cache index to reuse in else statement (#182)
-- [Docs] add various badges to readme (#208)
-- [Dev Deps] update `eslint`, `browserify`, `iconv-lite`, `tape`
-- [Tests] up to `node` `v8.1`, `v7.10`, `v6.11`; npm v4.6 breaks on node < v1; npm v5+ breaks on node < v4
-- [Tests] add `editorconfig-tools`
-
-## **6.4.0**
-- [New] `qs.stringify`: add `encodeValuesOnly` option
-- [Fix] follow `allowPrototypes` option during merge (#201, #201)
-- [Fix] support keys starting with brackets (#202, #200)
-- [Fix] chmod a-x
-- [Dev Deps] update `eslint`
-- [Tests] up to `node` `v7.7`, `v6.10`,` v4.8`; disable osx builds since they block linux builds
-- [eslint] reduce warnings
-
-## **6.3.2**
-- [Fix] follow `allowPrototypes` option during merge (#201, #200)
-- [Dev Deps] update `eslint`
-- [Fix] chmod a-x
-- [Fix] support keys starting with brackets (#202, #200)
-- [Tests] up to `node` `v7.7`, `v6.10`,` v4.8`; disable osx builds since they block linux builds
-
-## **6.3.1**
-- [Fix] ensure that `allowPrototypes: false` does not ever shadow Object.prototype properties (thanks, @snyk!)
-- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `browserify`, `iconv-lite`, `qs-iconv`, `tape`
-- [Tests] on all node minors; improve test matrix
-- [Docs] document stringify option `allowDots` (#195)
-- [Docs] add empty object and array values example (#195)
-- [Docs] Fix minor inconsistency/typo (#192)
-- [Docs] document stringify option `sort` (#191)
-- [Refactor] `stringify`: throw faster with an invalid encoder
-- [Refactor] remove unnecessary escapes (#184)
-- Remove contributing.md, since `qs` is no longer part of `hapi` (#183)
-
-## **6.3.0**
-- [New] Add support for RFC 1738 (#174, #173)
-- [New] `stringify`: Add `serializeDate` option to customize Date serialization (#159)
-- [Fix] ensure `utils.merge` handles merging two arrays
-- [Refactor] only constructors should be capitalized
-- [Refactor] capitalized var names are for constructors only
-- [Refactor] avoid using a sparse array
-- [Robustness] `formats`: cache `String#replace`
-- [Dev Deps] update `browserify`, `eslint`, `@ljharb/eslint-config`; add `safe-publish-latest`
-- [Tests] up to `node` `v6.8`, `v4.6`; improve test matrix
-- [Tests] flesh out arrayLimit/arrayFormat tests (#107)
-- [Tests] skip Object.create tests when null objects are not available
-- [Tests] Turn on eslint for test files (#175)
-
-## **6.2.3**
-- [Fix] follow `allowPrototypes` option during merge (#201, #200)
-- [Fix] chmod a-x
-- [Fix] support keys starting with brackets (#202, #200)
-- [Tests] up to `node` `v7.7`, `v6.10`,` v4.8`; disable osx builds since they block linux builds
-
-## **6.2.2**
-- [Fix] ensure that `allowPrototypes: false` does not ever shadow Object.prototype properties
-
-## **6.2.1**
-- [Fix] ensure `key[]=x&key[]&key[]=y` results in 3, not 2, values
-- [Refactor] Be explicit and use `Object.prototype.hasOwnProperty.call`
-- [Tests] remove `parallelshell` since it does not reliably report failures
-- [Tests] up to `node` `v6.3`, `v5.12`
-- [Dev Deps] update `tape`, `eslint`, `@ljharb/eslint-config`, `qs-iconv`
-
-## [**6.2.0**](https://github.com/ljharb/qs/issues?milestone=36&state=closed)
-- [New] pass Buffers to the encoder/decoder directly (#161)
-- [New] add "encoder" and "decoder" options, for custom param encoding/decoding (#160)
-- [Fix] fix compacting of nested sparse arrays (#150)
-
-## **6.1.2
-- [Fix] follow `allowPrototypes` option during merge (#201, #200)
-- [Fix] chmod a-x
-- [Fix] support keys starting with brackets (#202, #200)
-- [Tests] up to `node` `v7.7`, `v6.10`,` v4.8`; disable osx builds since they block linux builds
-
-## **6.1.1**
-- [Fix] ensure that `allowPrototypes: false` does not ever shadow Object.prototype properties
-
-## [**6.1.0**](https://github.com/ljharb/qs/issues?milestone=35&state=closed)
-- [New] allowDots option for `stringify` (#151)
-- [Fix] "sort" option should work at a depth of 3 or more (#151)
-- [Fix] Restore `dist` directory; will be removed in v7 (#148)
-
-## **6.0.4**
-- [Fix] follow `allowPrototypes` option during merge (#201, #200)
-- [Fix] chmod a-x
-- [Fix] support keys starting with brackets (#202, #200)
-- [Tests] up to `node` `v7.7`, `v6.10`,` v4.8`; disable osx builds since they block linux builds
-
-## **6.0.3**
-- [Fix] ensure that `allowPrototypes: false` does not ever shadow Object.prototype properties
-- [Fix] Restore `dist` directory; will be removed in v7 (#148)
-
-## [**6.0.2**](https://github.com/ljharb/qs/issues?milestone=33&state=closed)
-- Revert ES6 requirement and restore support for node down to v0.8.
-
-## [**6.0.1**](https://github.com/ljharb/qs/issues?milestone=32&state=closed)
-- [**#127**](https://github.com/ljharb/qs/pull/127) Fix engines definition in package.json
-
-## [**6.0.0**](https://github.com/ljharb/qs/issues?milestone=31&state=closed)
-- [**#124**](https://github.com/ljharb/qs/issues/124) Use ES6 and drop support for node < v4
-
-## **5.2.1**
-- [Fix] ensure `key[]=x&key[]&key[]=y` results in 3, not 2, values
-
-## [**5.2.0**](https://github.com/ljharb/qs/issues?milestone=30&state=closed)
-- [**#64**](https://github.com/ljharb/qs/issues/64) Add option to sort object keys in the query string
-
-## [**5.1.0**](https://github.com/ljharb/qs/issues?milestone=29&state=closed)
-- [**#117**](https://github.com/ljharb/qs/issues/117) make URI encoding stringified results optional
-- [**#106**](https://github.com/ljharb/qs/issues/106) Add flag `skipNulls` to optionally skip null values in stringify
-
-## [**5.0.0**](https://github.com/ljharb/qs/issues?milestone=28&state=closed)
-- [**#114**](https://github.com/ljharb/qs/issues/114) default allowDots to false
-- [**#100**](https://github.com/ljharb/qs/issues/100) include dist to npm
-
-## [**4.0.0**](https://github.com/ljharb/qs/issues?milestone=26&state=closed)
-- [**#98**](https://github.com/ljharb/qs/issues/98) make returning plain objects and allowing prototype overwriting properties optional
-
-## [**3.1.0**](https://github.com/ljharb/qs/issues?milestone=24&state=closed)
-- [**#89**](https://github.com/ljharb/qs/issues/89) Add option to disable "Transform dot notation to bracket notation"
-
-## [**3.0.0**](https://github.com/ljharb/qs/issues?milestone=23&state=closed)
-- [**#80**](https://github.com/ljharb/qs/issues/80) qs.parse silently drops properties
-- [**#77**](https://github.com/ljharb/qs/issues/77) Perf boost
-- [**#60**](https://github.com/ljharb/qs/issues/60) Add explicit option to disable array parsing
-- [**#74**](https://github.com/ljharb/qs/issues/74) Bad parse when turning array into object
-- [**#81**](https://github.com/ljharb/qs/issues/81) Add a `filter` option
-- [**#68**](https://github.com/ljharb/qs/issues/68) Fixed issue with recursion and passing strings into objects.
-- [**#66**](https://github.com/ljharb/qs/issues/66) Add mixed array and object dot notation support Closes: #47
-- [**#76**](https://github.com/ljharb/qs/issues/76) RFC 3986
-- [**#85**](https://github.com/ljharb/qs/issues/85) No equal sign
-- [**#84**](https://github.com/ljharb/qs/issues/84) update license attribute
-
-## [**2.4.1**](https://github.com/ljharb/qs/issues?milestone=20&state=closed)
-- [**#73**](https://github.com/ljharb/qs/issues/73) Property 'hasOwnProperty' of object #<Object> is not a function
-
-## [**2.4.0**](https://github.com/ljharb/qs/issues?milestone=19&state=closed)
-- [**#70**](https://github.com/ljharb/qs/issues/70) Add arrayFormat option
-
-## [**2.3.3**](https://github.com/ljharb/qs/issues?milestone=18&state=closed)
-- [**#59**](https://github.com/ljharb/qs/issues/59) make sure array indexes are >= 0, closes #57
-- [**#58**](https://github.com/ljharb/qs/issues/58) make qs usable for browser loader
-
-## [**2.3.2**](https://github.com/ljharb/qs/issues?milestone=17&state=closed)
-- [**#55**](https://github.com/ljharb/qs/issues/55) allow merging a string into an object
-
-## [**2.3.1**](https://github.com/ljharb/qs/issues?milestone=16&state=closed)
-- [**#52**](https://github.com/ljharb/qs/issues/52) Return "undefined" and "false" instead of throwing "TypeError".
-
-## [**2.3.0**](https://github.com/ljharb/qs/issues?milestone=15&state=closed)
-- [**#50**](https://github.com/ljharb/qs/issues/50) add option to omit array indices, closes #46
-
-## [**2.2.5**](https://github.com/ljharb/qs/issues?milestone=14&state=closed)
-- [**#39**](https://github.com/ljharb/qs/issues/39) Is there an alternative to Buffer.isBuffer?
-- [**#49**](https://github.com/ljharb/qs/issues/49) refactor utils.merge, fixes #45
-- [**#41**](https://github.com/ljharb/qs/issues/41) avoid browserifying Buffer, for #39
-
-## [**2.2.4**](https://github.com/ljharb/qs/issues?milestone=13&state=closed)
-- [**#38**](https://github.com/ljharb/qs/issues/38) how to handle object keys beginning with a number
-
-## [**2.2.3**](https://github.com/ljharb/qs/issues?milestone=12&state=closed)
-- [**#37**](https://github.com/ljharb/qs/issues/37) parser discards first empty value in array
-- [**#36**](https://github.com/ljharb/qs/issues/36) Update to lab 4.x
-
-## [**2.2.2**](https://github.com/ljharb/qs/issues?milestone=11&state=closed)
-- [**#33**](https://github.com/ljharb/qs/issues/33) Error when plain object in a value
-- [**#34**](https://github.com/ljharb/qs/issues/34) use Object.prototype.hasOwnProperty.call instead of obj.hasOwnProperty
-- [**#24**](https://github.com/ljharb/qs/issues/24) Changelog? Semver?
-
-## [**2.2.1**](https://github.com/ljharb/qs/issues?milestone=10&state=closed)
-- [**#32**](https://github.com/ljharb/qs/issues/32) account for circular references properly, closes #31
-- [**#31**](https://github.com/ljharb/qs/issues/31) qs.parse stackoverflow on circular objects
-
-## [**2.2.0**](https://github.com/ljharb/qs/issues?milestone=9&state=closed)
-- [**#26**](https://github.com/ljharb/qs/issues/26) Don't use Buffer global if it's not present
-- [**#30**](https://github.com/ljharb/qs/issues/30) Bug when merging non-object values into arrays
-- [**#29**](https://github.com/ljharb/qs/issues/29) Don't call Utils.clone at the top of Utils.merge
-- [**#23**](https://github.com/ljharb/qs/issues/23) Ability to not limit parameters?
-
-## [**2.1.0**](https://github.com/ljharb/qs/issues?milestone=8&state=closed)
-- [**#22**](https://github.com/ljharb/qs/issues/22) Enable using a RegExp as delimiter
-
-## [**2.0.0**](https://github.com/ljharb/qs/issues?milestone=7&state=closed)
-- [**#18**](https://github.com/ljharb/qs/issues/18) Why is there arrayLimit?
-- [**#20**](https://github.com/ljharb/qs/issues/20) Configurable parametersLimit
-- [**#21**](https://github.com/ljharb/qs/issues/21) make all limits optional, for #18, for #20
-
-## [**1.2.2**](https://github.com/ljharb/qs/issues?milestone=6&state=closed)
-- [**#19**](https://github.com/ljharb/qs/issues/19) Don't overwrite null values
-
-## [**1.2.1**](https://github.com/ljharb/qs/issues?milestone=5&state=closed)
-- [**#16**](https://github.com/ljharb/qs/issues/16) ignore non-string delimiters
-- [**#15**](https://github.com/ljharb/qs/issues/15) Close code block
-
-## [**1.2.0**](https://github.com/ljharb/qs/issues?milestone=4&state=closed)
-- [**#12**](https://github.com/ljharb/qs/issues/12) Add optional delim argument
-- [**#13**](https://github.com/ljharb/qs/issues/13) fix #11: flattened keys in array are now correctly parsed
-
-## [**1.1.0**](https://github.com/ljharb/qs/issues?milestone=3&state=closed)
-- [**#7**](https://github.com/ljharb/qs/issues/7) Empty values of a POST array disappear after being submitted
-- [**#9**](https://github.com/ljharb/qs/issues/9) Should not omit equals signs (=) when value is null
-- [**#6**](https://github.com/ljharb/qs/issues/6) Minor grammar fix in README
-
-## [**1.0.2**](https://github.com/ljharb/qs/issues?milestone=2&state=closed)
-- [**#5**](https://github.com/ljharb/qs/issues/5) array holes incorrectly copied into object on large index
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/node_modules/qs/README.md
+++ /dev/null
@@ -1,475 +0,0 @@
-# qs <sup>[![Version Badge][2]][1]</sup>
-
-[![Build Status][3]][4]
-[![dependency status][5]][6]
-[![dev dependency status][7]][8]
-[![License][license-image]][license-url]
-[![Downloads][downloads-image]][downloads-url]
-
-[![npm badge][11]][1]
-
-A querystring parsing and stringifying library with some added security.
-
-Lead Maintainer: [Jordan Harband](https://github.com/ljharb)
-
-The **qs** module was originally created and maintained by [TJ Holowaychuk](https://github.com/visionmedia/node-querystring).
-
-## Usage
-
-```javascript
-var qs = require('qs');
-var assert = require('assert');
-
-var obj = qs.parse('a=c');
-assert.deepEqual(obj, { a: 'c' });
-
-var str = qs.stringify(obj);
-assert.equal(str, 'a=c');
-```
-
-### Parsing Objects
-
-[](#preventEval)
-```javascript
-qs.parse(string, [options]);
-```
-
-**qs** allows you to create nested objects within your query strings, by surrounding the name of sub-keys with square brackets `[]`.
-For example, the string `'foo[bar]=baz'` converts to:
-
-```javascript
-assert.deepEqual(qs.parse('foo[bar]=baz'), {
-    foo: {
-        bar: 'baz'
-    }
-});
-```
-
-When using the `plainObjects` option the parsed value is returned as a null object, created via `Object.create(null)` and as such you should be aware that prototype methods will not exist on it and a user may set those names to whatever value they like:
-
-```javascript
-var nullObject = qs.parse('a[hasOwnProperty]=b', { plainObjects: true });
-assert.deepEqual(nullObject, { a: { hasOwnProperty: 'b' } });
-```
-
-By default parameters that would overwrite properties on the object prototype are ignored, if you wish to keep the data from those fields either use `plainObjects` as mentioned above, or set `allowPrototypes` to `true` which will allow user input to overwrite those properties. *WARNING* It is generally a bad idea to enable this option as it can cause problems when attempting to use the properties that have been overwritten. Always be careful with this option.
-
-```javascript
-var protoObject = qs.parse('a[hasOwnProperty]=b', { allowPrototypes: true });
-assert.deepEqual(protoObject, { a: { hasOwnProperty: 'b' } });
-```
-
-URI encoded strings work too:
-
-```javascript
-assert.deepEqual(qs.parse('a%5Bb%5D=c'), {
-    a: { b: 'c' }
-});
-```
-
-You can also nest your objects, like `'foo[bar][baz]=foobarbaz'`:
-
-```javascript
-assert.deepEqual(qs.parse('foo[bar][baz]=foobarbaz'), {
-    foo: {
-        bar: {
-            baz: 'foobarbaz'
-        }
-    }
-});
-```
-
-By default, when nesting objects **qs** will only parse up to 5 children deep. This means if you attempt to parse a string like
-`'a[b][c][d][e][f][g][h][i]=j'` your resulting object will be:
-
-```javascript
-var expected = {
-    a: {
-        b: {
-            c: {
-                d: {
-                    e: {
-                        f: {
-                            '[g][h][i]': 'j'
-                        }
-                    }
-                }
-            }
-        }
-    }
-};
-var string = 'a[b][c][d][e][f][g][h][i]=j';
-assert.deepEqual(qs.parse(string), expected);
-```
-
-This depth can be overridden by passing a `depth` option to `qs.parse(string, [options])`:
-
-```javascript
-var deep = qs.parse('a[b][c][d][e][f][g][h][i]=j', { depth: 1 });
-assert.deepEqual(deep, { a: { b: { '[c][d][e][f][g][h][i]': 'j' } } });
-```
-
-The depth limit helps mitigate abuse when **qs** is used to parse user input, and it is recommended to keep it a reasonably small number.
-
-For similar reasons, by default **qs** will only parse up to 1000 parameters. This can be overridden by passing a `parameterLimit` option:
-
-```javascript
-var limited = qs.parse('a=b&c=d', { parameterLimit: 1 });
-assert.deepEqual(limited, { a: 'b' });
-```
-
-To bypass the leading question mark, use `ignoreQueryPrefix`:
-
-```javascript
-var prefixed = qs.parse('?a=b&c=d', { ignoreQueryPrefix: true });
-assert.deepEqual(prefixed, { a: 'b', c: 'd' });
-```
-
-An optional delimiter can also be passed:
-
-```javascript
-var delimited = qs.parse('a=b;c=d', { delimiter: ';' });
-assert.deepEqual(delimited, { a: 'b', c: 'd' });
-```
-
-Delimiters can be a regular expression too:
-
-```javascript
-var regexed = qs.parse('a=b;c=d,e=f', { delimiter: /[;,]/ });
-assert.deepEqual(regexed, { a: 'b', c: 'd', e: 'f' });
-```
-
-Option `allowDots` can be used to enable dot notation:
-
-```javascript
-var withDots = qs.parse('a.b=c', { allowDots: true });
-assert.deepEqual(withDots, { a: { b: 'c' } });
-```
-
-### Parsing Arrays
-
-**qs** can also parse arrays using a similar `[]` notation:
-
-```javascript
-var withArray = qs.parse('a[]=b&a[]=c');
-assert.deepEqual(withArray, { a: ['b', 'c'] });
-```
-
-You may specify an index as well:
-
-```javascript
-var withIndexes = qs.parse('a[1]=c&a[0]=b');
-assert.deepEqual(withIndexes, { a: ['b', 'c'] });
-```
-
-Note that the only difference between an index in an array and a key in an object is that the value between the brackets must be a number
-to create an array. When creating arrays with specific indices, **qs** will compact a sparse array to only the existing values preserving
-their order:
-
-```javascript
-var noSparse = qs.parse('a[1]=b&a[15]=c');
-assert.deepEqual(noSparse, { a: ['b', 'c'] });
-```
-
-Note that an empty string is also a value, and will be preserved:
-
-```javascript
-var withEmptyString = qs.parse('a[]=&a[]=b');
-assert.deepEqual(withEmptyString, { a: ['', 'b'] });
-
-var withIndexedEmptyString = qs.parse('a[0]=b&a[1]=&a[2]=c');
-assert.deepEqual(withIndexedEmptyString, { a: ['b', '', 'c'] });
-```
-
-**qs** will also limit specifying indices in an array to a maximum index of `20`. Any array members with an index of greater than `20` will
-instead be converted to an object with the index as the key:
-
-```javascript
-var withMaxIndex = qs.parse('a[100]=b');
-assert.deepEqual(withMaxIndex, { a: { '100': 'b' } });
-```
-
-This limit can be overridden by passing an `arrayLimit` option:
-
-```javascript
-var withArrayLimit = qs.parse('a[1]=b', { arrayLimit: 0 });
-assert.deepEqual(withArrayLimit, { a: { '1': 'b' } });
-```
-
-To disable array parsing entirely, set `parseArrays` to `false`.
-
-```javascript
-var noParsingArrays = qs.parse('a[]=b', { parseArrays: false });
-assert.deepEqual(noParsingArrays, { a: { '0': 'b' } });
-```
-
-If you mix notations, **qs** will merge the two items into an object:
-
-```javascript
-var mixedNotation = qs.parse('a[0]=b&a[b]=c');
-assert.deepEqual(mixedNotation, { a: { '0': 'b', b: 'c' } });
-```
-
-You can also create arrays of objects:
-
-```javascript
-var arraysOfObjects = qs.parse('a[][b]=c');
-assert.deepEqual(arraysOfObjects, { a: [{ b: 'c' }] });
-```
-
-### Stringifying
-
-[](#preventEval)
-```javascript
-qs.stringify(object, [options]);
-```
-
-When stringifying, **qs** by default URI encodes output. Objects are stringified as you would expect:
-
-```javascript
-assert.equal(qs.stringify({ a: 'b' }), 'a=b');
-assert.equal(qs.stringify({ a: { b: 'c' } }), 'a%5Bb%5D=c');
-```
-
-This encoding can be disabled by setting the `encode` option to `false`:
-
-```javascript
-var unencoded = qs.stringify({ a: { b: 'c' } }, { encode: false });
-assert.equal(unencoded, 'a[b]=c');
-```
-
-Encoding can be disabled for keys by setting the `encodeValuesOnly` option to `true`:
-```javascript
-var encodedValues = qs.stringify(
-    { a: 'b', c: ['d', 'e=f'], f: [['g'], ['h']] },
-    { encodeValuesOnly: true }
-);
-assert.equal(encodedValues,'a=b&c[0]=d&c[1]=e%3Df&f[0][0]=g&f[1][0]=h');
-```
-
-This encoding can also be replaced by a custom encoding method set as `encoder` option:
-
-```javascript
-var encoded = qs.stringify({ a: { b: 'c' } }, { encoder: function (str) {
-    // Passed in values `a`, `b`, `c`
-    return // Return encoded string
-}})
-```
-
-_(Note: the `encoder` option does not apply if `encode` is `false`)_
-
-Analogue to the `encoder` there is a `decoder` option for `parse` to override decoding of properties and values:
-
-```javascript
-var decoded = qs.parse('x=z', { decoder: function (str) {
-    // Passed in values `x`, `z`
-    return // Return decoded string
-}})
-```
-
-Examples beyond this point will be shown as though the output is not URI encoded for clarity. Please note that the return values in these cases *will* be URI encoded during real usage.
-
-When arrays are stringified, by default they are given explicit indices:
-
-```javascript
-qs.stringify({ a: ['b', 'c', 'd'] });
-// 'a[0]=b&a[1]=c&a[2]=d'
-```
-
-You may override this by setting the `indices` option to `false`:
-
-```javascript
-qs.stringify({ a: ['b', 'c', 'd'] }, { indices: false });
-// 'a=b&a=c&a=d'
-```
-
-You may use the `arrayFormat` option to specify the format of the output array:
-
-```javascript
-qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'indices' })
-// 'a[0]=b&a[1]=c'
-qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'brackets' })
-// 'a[]=b&a[]=c'
-qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'repeat' })
-// 'a=b&a=c'
-```
-
-When objects are stringified, by default they use bracket notation:
-
-```javascript
-qs.stringify({ a: { b: { c: 'd', e: 'f' } } });
-// 'a[b][c]=d&a[b][e]=f'
-```
-
-You may override this to use dot notation by setting the `allowDots` option to `true`:
-
-```javascript
-qs.stringify({ a: { b: { c: 'd', e: 'f' } } }, { allowDots: true });
-// 'a.b.c=d&a.b.e=f'
-```
-
-Empty strings and null values will omit the value, but the equals sign (=) remains in place:
-
-```javascript
-assert.equal(qs.stringify({ a: '' }), 'a=');
-```
-
-Key with no values (such as an empty object or array) will return nothing:
-
-```javascript
-assert.equal(qs.stringify({ a: [] }), '');
-assert.equal(qs.stringify({ a: {} }), '');
-assert.equal(qs.stringify({ a: [{}] }), '');
-assert.equal(qs.stringify({ a: { b: []} }), '');
-assert.equal(qs.stringify({ a: { b: {}} }), '');
-```
-
-Properties that are set to `undefined` will be omitted entirely:
-
-```javascript
-assert.equal(qs.stringify({ a: null, b: undefined }), 'a=');
-```
-
-The query string may optionally be prepended with a question mark:
-
-```javascript
-assert.equal(qs.stringify({ a: 'b', c: 'd' }, { addQueryPrefix: true }), '?a=b&c=d');
-```
-
-The delimiter may be overridden with stringify as well:
-
-```javascript
-assert.equal(qs.stringify({ a: 'b', c: 'd' }, { delimiter: ';' }), 'a=b;c=d');
-```
-
-If you only want to override the serialization of `Date` objects, you can provide a `serializeDate` option:
-
-```javascript
-var date = new Date(7);
-assert.equal(qs.stringify({ a: date }), 'a=1970-01-01T00:00:00.007Z'.replace(/:/g, '%3A'));
-assert.equal(
-    qs.stringify({ a: date }, { serializeDate: function (d) { return d.getTime(); } }),
-    'a=7'
-);
-```
-
-You may use the `sort` option to affect the order of parameter keys:
-
-```javascript
-function alphabeticalSort(a, b) {
-    return a.localeCompare(b);
-}
-assert.equal(qs.stringify({ a: 'c', z: 'y', b : 'f' }, { sort: alphabeticalSort }), 'a=c&b=f&z=y');
-```
-
-Finally, you can use the `filter` option to restrict which keys will be included in the stringified output.
-If you pass a function, it will be called for each key to obtain the replacement value. Otherwise, if you
-pass an array, it will be used to select properties and array indices for stringification:
-
-```javascript
-function filterFunc(prefix, value) {
-    if (prefix == 'b') {
-        // Return an `undefined` value to omit a property.
-        return;
-    }
-    if (prefix == 'e[f]') {
-        return value.getTime();
-    }
-    if (prefix == 'e[g][0]') {
-        return value * 2;
-    }
-    return value;
-}
-qs.stringify({ a: 'b', c: 'd', e: { f: new Date(123), g: [2] } }, { filter: filterFunc });
-// 'a=b&c=d&e[f]=123&e[g][0]=4'
-qs.stringify({ a: 'b', c: 'd', e: 'f' }, { filter: ['a', 'e'] });
-// 'a=b&e=f'
-qs.stringify({ a: ['b', 'c', 'd'], e: 'f' }, { filter: ['a', 0, 2] });
-// 'a[0]=b&a[2]=d'
-```
-
-### Handling of `null` values
-
-By default, `null` values are treated like empty strings:
-
-```javascript
-var withNull = qs.stringify({ a: null, b: '' });
-assert.equal(withNull, 'a=&b=');
-```
-
-Parsing does not distinguish between parameters with and without equal signs. Both are converted to empty strings.
-
-```javascript
-var equalsInsensitive = qs.parse('a&b=');
-assert.deepEqual(equalsInsensitive, { a: '', b: '' });
-```
-
-To distinguish between `null` values and empty strings use the `strictNullHandling` flag. In the result string the `null`
-values have no `=` sign:
-
-```javascript
-var strictNull = qs.stringify({ a: null, b: '' }, { strictNullHandling: true });
-assert.equal(strictNull, 'a&b=');
-```
-
-To parse values without `=` back to `null` use the `strictNullHandling` flag:
-
-```javascript
-var parsedStrictNull = qs.parse('a&b=', { strictNullHandling: true });
-assert.deepEqual(parsedStrictNull, { a: null, b: '' });
-```
-
-To completely skip rendering keys with `null` values, use the `skipNulls` flag:
-
-```javascript
-var nullsSkipped = qs.stringify({ a: 'b', c: null}, { skipNulls: true });
-assert.equal(nullsSkipped, 'a=b');
-```
-
-### Dealing with special character sets
-
-By default the encoding and decoding of characters is done in `utf-8`. If you
-wish to encode querystrings to a different character set (i.e.
-[Shift JIS](https://en.wikipedia.org/wiki/Shift_JIS)) you can use the
-[`qs-iconv`](https://github.com/martinheidegger/qs-iconv) library:
-
-```javascript
-var encoder = require('qs-iconv/encoder')('shift_jis');
-var shiftJISEncoded = qs.stringify({ a: 'こんにちは！' }, { encoder: encoder });
-assert.equal(shiftJISEncoded, 'a=%82%B1%82%F1%82%C9%82%BF%82%CD%81I');
-```
-
-This also works for decoding of query strings:
-
-```javascript
-var decoder = require('qs-iconv/decoder')('shift_jis');
-var obj = qs.parse('a=%82%B1%82%F1%82%C9%82%BF%82%CD%81I', { decoder: decoder });
-assert.deepEqual(obj, { a: 'こんにちは！' });
-```
-
-### RFC 3986 and RFC 1738 space encoding
-
-RFC3986 used as default option and encodes ' ' to *%20* which is backward compatible.
-In the same time, output can be stringified as per RFC1738 with ' ' equal to '+'.
-
-```
-assert.equal(qs.stringify({ a: 'b c' }), 'a=b%20c');
-assert.equal(qs.stringify({ a: 'b c' }, { format : 'RFC3986' }), 'a=b%20c');
-assert.equal(qs.stringify({ a: 'b c' }, { format : 'RFC1738' }), 'a=b+c');
-```
-
-[1]: https://npmjs.org/package/qs
-[2]: http://versionbadg.es/ljharb/qs.svg
-[3]: https://api.travis-ci.org/ljharb/qs.svg
-[4]: https://travis-ci.org/ljharb/qs
-[5]: https://david-dm.org/ljharb/qs.svg
-[6]: https://david-dm.org/ljharb/qs
-[7]: https://david-dm.org/ljharb/qs/dev-status.svg
-[8]: https://david-dm.org/ljharb/qs?type=dev
-[9]: https://ci.testling.com/ljharb/qs.png
-[10]: https://ci.testling.com/ljharb/qs
-[11]: https://nodei.co/npm/qs.png?downloads=true&stars=true
-[license-image]: http://img.shields.io/npm/l/qs.svg
-[license-url]: LICENSE
-[downloads-image]: http://img.shields.io/npm/dm/qs.svg
-[downloads-url]: http://npm-stat.com/charts.html?package=qs
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/node_modules/qs/test/.eslintrc
+++ /dev/null
@@ -1,15 +0,0 @@
-{
-    "rules": {
-		"array-bracket-newline": 0,
-		"array-element-newline": 0,
-		"consistent-return": 2,
-        "max-lines": 0,
-        "max-nested-callbacks": [2, 3],
-        "max-statements": 0,
-		"no-buffer-constructor": 0,
-        "no-extend-native": 0,
-        "no-magic-numbers": 0,
-		"object-curly-newline": 0,
-        "sort-keys": 0
-    }
-}
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/node_modules/qs/test/index.js
+++ /dev/null
@@ -1,7 +0,0 @@
-'use strict';
-
-require('./parse');
-
-require('./stringify');
-
-require('./utils');
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/node_modules/qs/test/parse.js
+++ /dev/null
@@ -1,574 +0,0 @@
-'use strict';
-
-var test = require('tape');
-var qs = require('../');
-var utils = require('../lib/utils');
-var iconv = require('iconv-lite');
-var SaferBuffer = require('safer-buffer').Buffer;
-
-test('parse()', function (t) {
-    t.test('parses a simple string', function (st) {
-        st.deepEqual(qs.parse('0=foo'), { 0: 'foo' });
-        st.deepEqual(qs.parse('foo=c++'), { foo: 'c  ' });
-        st.deepEqual(qs.parse('a[>=]=23'), { a: { '>=': '23' } });
-        st.deepEqual(qs.parse('a[<=>]==23'), { a: { '<=>': '=23' } });
-        st.deepEqual(qs.parse('a[==]=23'), { a: { '==': '23' } });
-        st.deepEqual(qs.parse('foo', { strictNullHandling: true }), { foo: null });
-        st.deepEqual(qs.parse('foo'), { foo: '' });
-        st.deepEqual(qs.parse('foo='), { foo: '' });
-        st.deepEqual(qs.parse('foo=bar'), { foo: 'bar' });
-        st.deepEqual(qs.parse(' foo = bar = baz '), { ' foo ': ' bar = baz ' });
-        st.deepEqual(qs.parse('foo=bar=baz'), { foo: 'bar=baz' });
-        st.deepEqual(qs.parse('foo=bar&bar=baz'), { foo: 'bar', bar: 'baz' });
-        st.deepEqual(qs.parse('foo2=bar2&baz2='), { foo2: 'bar2', baz2: '' });
-        st.deepEqual(qs.parse('foo=bar&baz', { strictNullHandling: true }), { foo: 'bar', baz: null });
-        st.deepEqual(qs.parse('foo=bar&baz'), { foo: 'bar', baz: '' });
-        st.deepEqual(qs.parse('cht=p3&chd=t:60,40&chs=250x100&chl=Hello|World'), {
-            cht: 'p3',
-            chd: 't:60,40',
-            chs: '250x100',
-            chl: 'Hello|World'
-        });
-        st.end();
-    });
-
-    t.test('allows enabling dot notation', function (st) {
-        st.deepEqual(qs.parse('a.b=c'), { 'a.b': 'c' });
-        st.deepEqual(qs.parse('a.b=c', { allowDots: true }), { a: { b: 'c' } });
-        st.end();
-    });
-
-    t.deepEqual(qs.parse('a[b]=c'), { a: { b: 'c' } }, 'parses a single nested string');
-    t.deepEqual(qs.parse('a[b][c]=d'), { a: { b: { c: 'd' } } }, 'parses a double nested string');
-    t.deepEqual(
-        qs.parse('a[b][c][d][e][f][g][h]=i'),
-        { a: { b: { c: { d: { e: { f: { '[g][h]': 'i' } } } } } } },
-        'defaults to a depth of 5'
-    );
-
-    t.test('only parses one level when depth = 1', function (st) {
-        st.deepEqual(qs.parse('a[b][c]=d', { depth: 1 }), { a: { b: { '[c]': 'd' } } });
-        st.deepEqual(qs.parse('a[b][c][d]=e', { depth: 1 }), { a: { b: { '[c][d]': 'e' } } });
-        st.end();
-    });
-
-    t.deepEqual(qs.parse('a=b&a=c'), { a: ['b', 'c'] }, 'parses a simple array');
-
-    t.test('parses an explicit array', function (st) {
-        st.deepEqual(qs.parse('a[]=b'), { a: ['b'] });
-        st.deepEqual(qs.parse('a[]=b&a[]=c'), { a: ['b', 'c'] });
-        st.deepEqual(qs.parse('a[]=b&a[]=c&a[]=d'), { a: ['b', 'c', 'd'] });
-        st.end();
-    });
-
-    t.test('parses a mix of simple and explicit arrays', function (st) {
-        st.deepEqual(qs.parse('a=b&a[]=c'), { a: ['b', 'c'] });
-        st.deepEqual(qs.parse('a[]=b&a=c'), { a: ['b', 'c'] });
-        st.deepEqual(qs.parse('a[0]=b&a=c'), { a: ['b', 'c'] });
-        st.deepEqual(qs.parse('a=b&a[0]=c'), { a: ['b', 'c'] });
-
-        st.deepEqual(qs.parse('a[1]=b&a=c', { arrayLimit: 20 }), { a: ['b', 'c'] });
-        st.deepEqual(qs.parse('a[]=b&a=c', { arrayLimit: 0 }), { a: ['b', 'c'] });
-        st.deepEqual(qs.parse('a[]=b&a=c'), { a: ['b', 'c'] });
-
-        st.deepEqual(qs.parse('a=b&a[1]=c', { arrayLimit: 20 }), { a: ['b', 'c'] });
-        st.deepEqual(qs.parse('a=b&a[]=c', { arrayLimit: 0 }), { a: ['b', 'c'] });
-        st.deepEqual(qs.parse('a=b&a[]=c'), { a: ['b', 'c'] });
-
-        st.end();
-    });
-
-    t.test('parses a nested array', function (st) {
-        st.deepEqual(qs.parse('a[b][]=c&a[b][]=d'), { a: { b: ['c', 'd'] } });
-        st.deepEqual(qs.parse('a[>=]=25'), { a: { '>=': '25' } });
-        st.end();
-    });
-
-    t.test('allows to specify array indices', function (st) {
-        st.deepEqual(qs.parse('a[1]=c&a[0]=b&a[2]=d'), { a: ['b', 'c', 'd'] });
-        st.deepEqual(qs.parse('a[1]=c&a[0]=b'), { a: ['b', 'c'] });
-        st.deepEqual(qs.parse('a[1]=c', { arrayLimit: 20 }), { a: ['c'] });
-        st.deepEqual(qs.parse('a[1]=c', { arrayLimit: 0 }), { a: { 1: 'c' } });
-        st.deepEqual(qs.parse('a[1]=c'), { a: ['c'] });
-        st.end();
-    });
-
-    t.test('limits specific array indices to arrayLimit', function (st) {
-        st.deepEqual(qs.parse('a[20]=a', { arrayLimit: 20 }), { a: ['a'] });
-        st.deepEqual(qs.parse('a[21]=a', { arrayLimit: 20 }), { a: { 21: 'a' } });
-        st.end();
-    });
-
-    t.deepEqual(qs.parse('a[12b]=c'), { a: { '12b': 'c' } }, 'supports keys that begin with a number');
-
-    t.test('supports encoded = signs', function (st) {
-        st.deepEqual(qs.parse('he%3Dllo=th%3Dere'), { 'he=llo': 'th=ere' });
-        st.end();
-    });
-
-    t.test('is ok with url encoded strings', function (st) {
-        st.deepEqual(qs.parse('a[b%20c]=d'), { a: { 'b c': 'd' } });
-        st.deepEqual(qs.parse('a[b]=c%20d'), { a: { b: 'c d' } });
-        st.end();
-    });
-
-    t.test('allows brackets in the value', function (st) {
-        st.deepEqual(qs.parse('pets=["tobi"]'), { pets: '["tobi"]' });
-        st.deepEqual(qs.parse('operators=[">=", "<="]'), { operators: '[">=", "<="]' });
-        st.end();
-    });
-
-    t.test('allows empty values', function (st) {
-        st.deepEqual(qs.parse(''), {});
-        st.deepEqual(qs.parse(null), {});
-        st.deepEqual(qs.parse(undefined), {});
-        st.end();
-    });
-
-    t.test('transforms arrays to objects', function (st) {
-        st.deepEqual(qs.parse('foo[0]=bar&foo[bad]=baz'), { foo: { 0: 'bar', bad: 'baz' } });
-        st.deepEqual(qs.parse('foo[bad]=baz&foo[0]=bar'), { foo: { bad: 'baz', 0: 'bar' } });
-        st.deepEqual(qs.parse('foo[bad]=baz&foo[]=bar'), { foo: { bad: 'baz', 0: 'bar' } });
-        st.deepEqual(qs.parse('foo[]=bar&foo[bad]=baz'), { foo: { 0: 'bar', bad: 'baz' } });
-        st.deepEqual(qs.parse('foo[bad]=baz&foo[]=bar&foo[]=foo'), { foo: { bad: 'baz', 0: 'bar', 1: 'foo' } });
-        st.deepEqual(qs.parse('foo[0][a]=a&foo[0][b]=b&foo[1][a]=aa&foo[1][b]=bb'), { foo: [{ a: 'a', b: 'b' }, { a: 'aa', b: 'bb' }] });
-
-        st.deepEqual(qs.parse('a[]=b&a[t]=u&a[hasOwnProperty]=c', { allowPrototypes: false }), { a: { 0: 'b', t: 'u' } });
-        st.deepEqual(qs.parse('a[]=b&a[t]=u&a[hasOwnProperty]=c', { allowPrototypes: true }), { a: { 0: 'b', t: 'u', hasOwnProperty: 'c' } });
-        st.deepEqual(qs.parse('a[]=b&a[hasOwnProperty]=c&a[x]=y', { allowPrototypes: false }), { a: { 0: 'b', x: 'y' } });
-        st.deepEqual(qs.parse('a[]=b&a[hasOwnProperty]=c&a[x]=y', { allowPrototypes: true }), { a: { 0: 'b', hasOwnProperty: 'c', x: 'y' } });
-        st.end();
-    });
-
-    t.test('transforms arrays to objects (dot notation)', function (st) {
-        st.deepEqual(qs.parse('foo[0].baz=bar&fool.bad=baz', { allowDots: true }), { foo: [{ baz: 'bar' }], fool: { bad: 'baz' } });
-        st.deepEqual(qs.parse('foo[0].baz=bar&fool.bad.boo=baz', { allowDots: true }), { foo: [{ baz: 'bar' }], fool: { bad: { boo: 'baz' } } });
-        st.deepEqual(qs.parse('foo[0][0].baz=bar&fool.bad=baz', { allowDots: true }), { foo: [[{ baz: 'bar' }]], fool: { bad: 'baz' } });
-        st.deepEqual(qs.parse('foo[0].baz[0]=15&foo[0].bar=2', { allowDots: true }), { foo: [{ baz: ['15'], bar: '2' }] });
-        st.deepEqual(qs.parse('foo[0].baz[0]=15&foo[0].baz[1]=16&foo[0].bar=2', { allowDots: true }), { foo: [{ baz: ['15', '16'], bar: '2' }] });
-        st.deepEqual(qs.parse('foo.bad=baz&foo[0]=bar', { allowDots: true }), { foo: { bad: 'baz', 0: 'bar' } });
-        st.deepEqual(qs.parse('foo.bad=baz&foo[]=bar', { allowDots: true }), { foo: { bad: 'baz', 0: 'bar' } });
-        st.deepEqual(qs.parse('foo[]=bar&foo.bad=baz', { allowDots: true }), { foo: { 0: 'bar', bad: 'baz' } });
-        st.deepEqual(qs.parse('foo.bad=baz&foo[]=bar&foo[]=foo', { allowDots: true }), { foo: { bad: 'baz', 0: 'bar', 1: 'foo' } });
-        st.deepEqual(qs.parse('foo[0].a=a&foo[0].b=b&foo[1].a=aa&foo[1].b=bb', { allowDots: true }), { foo: [{ a: 'a', b: 'b' }, { a: 'aa', b: 'bb' }] });
-        st.end();
-    });
-
-    t.test('correctly prunes undefined values when converting an array to an object', function (st) {
-        st.deepEqual(qs.parse('a[2]=b&a[99999999]=c'), { a: { 2: 'b', 99999999: 'c' } });
-        st.end();
-    });
-
-    t.test('supports malformed uri characters', function (st) {
-        st.deepEqual(qs.parse('{%:%}', { strictNullHandling: true }), { '{%:%}': null });
-        st.deepEqual(qs.parse('{%:%}='), { '{%:%}': '' });
-        st.deepEqual(qs.parse('foo=%:%}'), { foo: '%:%}' });
-        st.end();
-    });
-
-    t.test('doesn\'t produce empty keys', function (st) {
-        st.deepEqual(qs.parse('_r=1&'), { _r: '1' });
-        st.end();
-    });
-
-    t.test('cannot access Object prototype', function (st) {
-        qs.parse('constructor[prototype][bad]=bad');
-        qs.parse('bad[constructor][prototype][bad]=bad');
-        st.equal(typeof Object.prototype.bad, 'undefined');
-        st.end();
-    });
-
-    t.test('parses arrays of objects', function (st) {
-        st.deepEqual(qs.parse('a[][b]=c'), { a: [{ b: 'c' }] });
-        st.deepEqual(qs.parse('a[0][b]=c'), { a: [{ b: 'c' }] });
-        st.end();
-    });
-
-    t.test('allows for empty strings in arrays', function (st) {
-        st.deepEqual(qs.parse('a[]=b&a[]=&a[]=c'), { a: ['b', '', 'c'] });
-
-        st.deepEqual(
-            qs.parse('a[0]=b&a[1]&a[2]=c&a[19]=', { strictNullHandling: true, arrayLimit: 20 }),
-            { a: ['b', null, 'c', ''] },
-            'with arrayLimit 20 + array indices: null then empty string works'
-        );
-        st.deepEqual(
-            qs.parse('a[]=b&a[]&a[]=c&a[]=', { strictNullHandling: true, arrayLimit: 0 }),
-            { a: ['b', null, 'c', ''] },
-            'with arrayLimit 0 + array brackets: null then empty string works'
-        );
-
-        st.deepEqual(
-            qs.parse('a[0]=b&a[1]=&a[2]=c&a[19]', { strictNullHandling: true, arrayLimit: 20 }),
-            { a: ['b', '', 'c', null] },
-            'with arrayLimit 20 + array indices: empty string then null works'
-        );
-        st.deepEqual(
-            qs.parse('a[]=b&a[]=&a[]=c&a[]', { strictNullHandling: true, arrayLimit: 0 }),
-            { a: ['b', '', 'c', null] },
-            'with arrayLimit 0 + array brackets: empty string then null works'
-        );
-
-        st.deepEqual(
-            qs.parse('a[]=&a[]=b&a[]=c'),
-            { a: ['', 'b', 'c'] },
-            'array brackets: empty strings work'
-        );
-        st.end();
-    });
-
-    t.test('compacts sparse arrays', function (st) {
-        st.deepEqual(qs.parse('a[10]=1&a[2]=2', { arrayLimit: 20 }), { a: ['2', '1'] });
-        st.deepEqual(qs.parse('a[1][b][2][c]=1', { arrayLimit: 20 }), { a: [{ b: [{ c: '1' }] }] });
-        st.deepEqual(qs.parse('a[1][2][3][c]=1', { arrayLimit: 20 }), { a: [[[{ c: '1' }]]] });
-        st.deepEqual(qs.parse('a[1][2][3][c][1]=1', { arrayLimit: 20 }), { a: [[[{ c: ['1'] }]]] });
-        st.end();
-    });
-
-    t.test('parses semi-parsed strings', function (st) {
-        st.deepEqual(qs.parse({ 'a[b]': 'c' }), { a: { b: 'c' } });
-        st.deepEqual(qs.parse({ 'a[b]': 'c', 'a[d]': 'e' }), { a: { b: 'c', d: 'e' } });
-        st.end();
-    });
-
-    t.test('parses buffers correctly', function (st) {
-        var b = SaferBuffer.from('test');
-        st.deepEqual(qs.parse({ a: b }), { a: b });
-        st.end();
-    });
-
-    t.test('continues parsing when no parent is found', function (st) {
-        st.deepEqual(qs.parse('[]=&a=b'), { 0: '', a: 'b' });
-        st.deepEqual(qs.parse('[]&a=b', { strictNullHandling: true }), { 0: null, a: 'b' });
-        st.deepEqual(qs.parse('[foo]=bar'), { foo: 'bar' });
-        st.end();
-    });
-
-    t.test('does not error when parsing a very long array', function (st) {
-        var str = 'a[]=a';
-        while (Buffer.byteLength(str) < 128 * 1024) {
-            str = str + '&' + str;
-        }
-
-        st.doesNotThrow(function () {
-            qs.parse(str);
-        });
-
-        st.end();
-    });
-
-    t.test('should not throw when a native prototype has an enumerable property', { parallel: false }, function (st) {
-        Object.prototype.crash = '';
-        Array.prototype.crash = '';
-        st.doesNotThrow(qs.parse.bind(null, 'a=b'));
-        st.deepEqual(qs.parse('a=b'), { a: 'b' });
-        st.doesNotThrow(qs.parse.bind(null, 'a[][b]=c'));
-        st.deepEqual(qs.parse('a[][b]=c'), { a: [{ b: 'c' }] });
-        delete Object.prototype.crash;
-        delete Array.prototype.crash;
-        st.end();
-    });
-
-    t.test('parses a string with an alternative string delimiter', function (st) {
-        st.deepEqual(qs.parse('a=b;c=d', { delimiter: ';' }), { a: 'b', c: 'd' });
-        st.end();
-    });
-
-    t.test('parses a string with an alternative RegExp delimiter', function (st) {
-        st.deepEqual(qs.parse('a=b; c=d', { delimiter: /[;,] */ }), { a: 'b', c: 'd' });
-        st.end();
-    });
-
-    t.test('does not use non-splittable objects as delimiters', function (st) {
-        st.deepEqual(qs.parse('a=b&c=d', { delimiter: true }), { a: 'b', c: 'd' });
-        st.end();
-    });
-
-    t.test('allows overriding parameter limit', function (st) {
-        st.deepEqual(qs.parse('a=b&c=d', { parameterLimit: 1 }), { a: 'b' });
-        st.end();
-    });
-
-    t.test('allows setting the parameter limit to Infinity', function (st) {
-        st.deepEqual(qs.parse('a=b&c=d', { parameterLimit: Infinity }), { a: 'b', c: 'd' });
-        st.end();
-    });
-
-    t.test('allows overriding array limit', function (st) {
-        st.deepEqual(qs.parse('a[0]=b', { arrayLimit: -1 }), { a: { 0: 'b' } });
-        st.deepEqual(qs.parse('a[-1]=b', { arrayLimit: -1 }), { a: { '-1': 'b' } });
-        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { arrayLimit: 0 }), { a: { 0: 'b', 1: 'c' } });
-        st.end();
-    });
-
-    t.test('allows disabling array parsing', function (st) {
-        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { parseArrays: false }), { a: { 0: 'b', 1: 'c' } });
-        st.end();
-    });
-
-    t.test('allows for query string prefix', function (st) {
-        st.deepEqual(qs.parse('?foo=bar', { ignoreQueryPrefix: true }), { foo: 'bar' });
-        st.deepEqual(qs.parse('foo=bar', { ignoreQueryPrefix: true }), { foo: 'bar' });
-        st.deepEqual(qs.parse('?foo=bar', { ignoreQueryPrefix: false }), { '?foo': 'bar' });
-        st.end();
-    });
-
-    t.test('parses an object', function (st) {
-        var input = {
-            'user[name]': { 'pop[bob]': 3 },
-            'user[email]': null
-        };
-
-        var expected = {
-            user: {
-                name: { 'pop[bob]': 3 },
-                email: null
-            }
-        };
-
-        var result = qs.parse(input);
-
-        st.deepEqual(result, expected);
-        st.end();
-    });
-
-    t.test('parses an object in dot notation', function (st) {
-        var input = {
-            'user.name': { 'pop[bob]': 3 },
-            'user.email.': null
-        };
-
-        var expected = {
-            user: {
-                name: { 'pop[bob]': 3 },
-                email: null
-            }
-        };
-
-        var result = qs.parse(input, { allowDots: true });
-
-        st.deepEqual(result, expected);
-        st.end();
-    });
-
-    t.test('parses an object and not child values', function (st) {
-        var input = {
-            'user[name]': { 'pop[bob]': { test: 3 } },
-            'user[email]': null
-        };
-
-        var expected = {
-            user: {
-                name: { 'pop[bob]': { test: 3 } },
-                email: null
-            }
-        };
-
-        var result = qs.parse(input);
-
-        st.deepEqual(result, expected);
-        st.end();
-    });
-
-    t.test('does not blow up when Buffer global is missing', function (st) {
-        var tempBuffer = global.Buffer;
-        delete global.Buffer;
-        var result = qs.parse('a=b&c=d');
-        global.Buffer = tempBuffer;
-        st.deepEqual(result, { a: 'b', c: 'd' });
-        st.end();
-    });
-
-    t.test('does not crash when parsing circular references', function (st) {
-        var a = {};
-        a.b = a;
-
-        var parsed;
-
-        st.doesNotThrow(function () {
-            parsed = qs.parse({ 'foo[bar]': 'baz', 'foo[baz]': a });
-        });
-
-        st.equal('foo' in parsed, true, 'parsed has "foo" property');
-        st.equal('bar' in parsed.foo, true);
-        st.equal('baz' in parsed.foo, true);
-        st.equal(parsed.foo.bar, 'baz');
-        st.deepEqual(parsed.foo.baz, a);
-        st.end();
-    });
-
-    t.test('does not crash when parsing deep objects', function (st) {
-        var parsed;
-        var str = 'foo';
-
-        for (var i = 0; i < 5000; i++) {
-            str += '[p]';
-        }
-
-        str += '=bar';
-
-        st.doesNotThrow(function () {
-            parsed = qs.parse(str, { depth: 5000 });
-        });
-
-        st.equal('foo' in parsed, true, 'parsed has "foo" property');
-
-        var depth = 0;
-        var ref = parsed.foo;
-        while ((ref = ref.p)) {
-            depth += 1;
-        }
-
-        st.equal(depth, 5000, 'parsed is 5000 properties deep');
-
-        st.end();
-    });
-
-    t.test('parses null objects correctly', { skip: !Object.create }, function (st) {
-        var a = Object.create(null);
-        a.b = 'c';
-
-        st.deepEqual(qs.parse(a), { b: 'c' });
-        var result = qs.parse({ a: a });
-        st.equal('a' in result, true, 'result has "a" property');
-        st.deepEqual(result.a, a);
-        st.end();
-    });
-
-    t.test('parses dates correctly', function (st) {
-        var now = new Date();
-        st.deepEqual(qs.parse({ a: now }), { a: now });
-        st.end();
-    });
-
-    t.test('parses regular expressions correctly', function (st) {
-        var re = /^test$/;
-        st.deepEqual(qs.parse({ a: re }), { a: re });
-        st.end();
-    });
-
-    t.test('does not allow overwriting prototype properties', function (st) {
-        st.deepEqual(qs.parse('a[hasOwnProperty]=b', { allowPrototypes: false }), {});
-        st.deepEqual(qs.parse('hasOwnProperty=b', { allowPrototypes: false }), {});
-
-        st.deepEqual(
-            qs.parse('toString', { allowPrototypes: false }),
-            {},
-            'bare "toString" results in {}'
-        );
-
-        st.end();
-    });
-
-    t.test('can allow overwriting prototype properties', function (st) {
-        st.deepEqual(qs.parse('a[hasOwnProperty]=b', { allowPrototypes: true }), { a: { hasOwnProperty: 'b' } });
-        st.deepEqual(qs.parse('hasOwnProperty=b', { allowPrototypes: true }), { hasOwnProperty: 'b' });
-
-        st.deepEqual(
-            qs.parse('toString', { allowPrototypes: true }),
-            { toString: '' },
-            'bare "toString" results in { toString: "" }'
-        );
-
-        st.end();
-    });
-
-    t.test('params starting with a closing bracket', function (st) {
-        st.deepEqual(qs.parse(']=toString'), { ']': 'toString' });
-        st.deepEqual(qs.parse(']]=toString'), { ']]': 'toString' });
-        st.deepEqual(qs.parse(']hello]=toString'), { ']hello]': 'toString' });
-        st.end();
-    });
-
-    t.test('params starting with a starting bracket', function (st) {
-        st.deepEqual(qs.parse('[=toString'), { '[': 'toString' });
-        st.deepEqual(qs.parse('[[=toString'), { '[[': 'toString' });
-        st.deepEqual(qs.parse('[hello[=toString'), { '[hello[': 'toString' });
-        st.end();
-    });
-
-    t.test('add keys to objects', function (st) {
-        st.deepEqual(
-            qs.parse('a[b]=c&a=d'),
-            { a: { b: 'c', d: true } },
-            'can add keys to objects'
-        );
-
-        st.deepEqual(
-            qs.parse('a[b]=c&a=toString'),
-            { a: { b: 'c' } },
-            'can not overwrite prototype'
-        );
-
-        st.deepEqual(
-            qs.parse('a[b]=c&a=toString', { allowPrototypes: true }),
-            { a: { b: 'c', toString: true } },
-            'can overwrite prototype with allowPrototypes true'
-        );
-
-        st.deepEqual(
-            qs.parse('a[b]=c&a=toString', { plainObjects: true }),
-            { a: { b: 'c', toString: true } },
-            'can overwrite prototype with plainObjects true'
-        );
-
-        st.end();
-    });
-
-    t.test('can return null objects', { skip: !Object.create }, function (st) {
-        var expected = Object.create(null);
-        expected.a = Object.create(null);
-        expected.a.b = 'c';
-        expected.a.hasOwnProperty = 'd';
-        st.deepEqual(qs.parse('a[b]=c&a[hasOwnProperty]=d', { plainObjects: true }), expected);
-        st.deepEqual(qs.parse(null, { plainObjects: true }), Object.create(null));
-        var expectedArray = Object.create(null);
-        expectedArray.a = Object.create(null);
-        expectedArray.a[0] = 'b';
-        expectedArray.a.c = 'd';
-        st.deepEqual(qs.parse('a[]=b&a[c]=d', { plainObjects: true }), expectedArray);
-        st.end();
-    });
-
-    t.test('can parse with custom encoding', function (st) {
-        st.deepEqual(qs.parse('%8c%a7=%91%e5%8d%e3%95%7b', {
-            decoder: function (str) {
-                var reg = /%([0-9A-F]{2})/ig;
-                var result = [];
-                var parts = reg.exec(str);
-                while (parts) {
-                    result.push(parseInt(parts[1], 16));
-                    parts = reg.exec(str);
-                }
-                return iconv.decode(SaferBuffer.from(result), 'shift_jis').toString();
-            }
-        }), { 県: '大阪府' });
-        st.end();
-    });
-
-    t.test('receives the default decoder as a second argument', function (st) {
-        st.plan(1);
-        qs.parse('a', {
-            decoder: function (str, defaultDecoder) {
-                st.equal(defaultDecoder, utils.decode);
-            }
-        });
-        st.end();
-    });
-
-    t.test('throws error with wrong decoder', function (st) {
-        st['throws'](function () {
-            qs.parse({}, { decoder: 'string' });
-        }, new TypeError('Decoder has to be a function.'));
-        st.end();
-    });
-
-    t.test('does not mutate the options argument', function (st) {
-        var options = {};
-        qs.parse('a[b]=true', options);
-        st.deepEqual(options, {});
-        st.end();
-    });
-
-    t.end();
-});
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/node_modules/qs/test/stringify.js
+++ /dev/null
@@ -1,597 +0,0 @@
-'use strict';
-
-var test = require('tape');
-var qs = require('../');
-var utils = require('../lib/utils');
-var iconv = require('iconv-lite');
-var SaferBuffer = require('safer-buffer').Buffer;
-
-test('stringify()', function (t) {
-    t.test('stringifies a querystring object', function (st) {
-        st.equal(qs.stringify({ a: 'b' }), 'a=b');
-        st.equal(qs.stringify({ a: 1 }), 'a=1');
-        st.equal(qs.stringify({ a: 1, b: 2 }), 'a=1&b=2');
-        st.equal(qs.stringify({ a: 'A_Z' }), 'a=A_Z');
-        st.equal(qs.stringify({ a: '€' }), 'a=%E2%82%AC');
-        st.equal(qs.stringify({ a: '' }), 'a=%EE%80%80');
-        st.equal(qs.stringify({ a: 'א' }), 'a=%D7%90');
-        st.equal(qs.stringify({ a: '𐐷' }), 'a=%F0%90%90%B7');
-        st.end();
-    });
-
-    t.test('adds query prefix', function (st) {
-        st.equal(qs.stringify({ a: 'b' }, { addQueryPrefix: true }), '?a=b');
-        st.end();
-    });
-
-    t.test('with query prefix, outputs blank string given an empty object', function (st) {
-        st.equal(qs.stringify({}, { addQueryPrefix: true }), '');
-        st.end();
-    });
-
-    t.test('stringifies a nested object', function (st) {
-        st.equal(qs.stringify({ a: { b: 'c' } }), 'a%5Bb%5D=c');
-        st.equal(qs.stringify({ a: { b: { c: { d: 'e' } } } }), 'a%5Bb%5D%5Bc%5D%5Bd%5D=e');
-        st.end();
-    });
-
-    t.test('stringifies a nested object with dots notation', function (st) {
-        st.equal(qs.stringify({ a: { b: 'c' } }, { allowDots: true }), 'a.b=c');
-        st.equal(qs.stringify({ a: { b: { c: { d: 'e' } } } }, { allowDots: true }), 'a.b.c.d=e');
-        st.end();
-    });
-
-    t.test('stringifies an array value', function (st) {
-        st.equal(
-            qs.stringify({ a: ['b', 'c', 'd'] }, { arrayFormat: 'indices' }),
-            'a%5B0%5D=b&a%5B1%5D=c&a%5B2%5D=d',
-            'indices => indices'
-        );
-        st.equal(
-            qs.stringify({ a: ['b', 'c', 'd'] }, { arrayFormat: 'brackets' }),
-            'a%5B%5D=b&a%5B%5D=c&a%5B%5D=d',
-            'brackets => brackets'
-        );
-        st.equal(
-            qs.stringify({ a: ['b', 'c', 'd'] }),
-            'a%5B0%5D=b&a%5B1%5D=c&a%5B2%5D=d',
-            'default => indices'
-        );
-        st.end();
-    });
-
-    t.test('omits nulls when asked', function (st) {
-        st.equal(qs.stringify({ a: 'b', c: null }, { skipNulls: true }), 'a=b');
-        st.end();
-    });
-
-    t.test('omits nested nulls when asked', function (st) {
-        st.equal(qs.stringify({ a: { b: 'c', d: null } }, { skipNulls: true }), 'a%5Bb%5D=c');
-        st.end();
-    });
-
-    t.test('omits array indices when asked', function (st) {
-        st.equal(qs.stringify({ a: ['b', 'c', 'd'] }, { indices: false }), 'a=b&a=c&a=d');
-        st.end();
-    });
-
-    t.test('stringifies a nested array value', function (st) {
-        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }, { arrayFormat: 'indices' }), 'a%5Bb%5D%5B0%5D=c&a%5Bb%5D%5B1%5D=d');
-        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }, { arrayFormat: 'brackets' }), 'a%5Bb%5D%5B%5D=c&a%5Bb%5D%5B%5D=d');
-        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }), 'a%5Bb%5D%5B0%5D=c&a%5Bb%5D%5B1%5D=d');
-        st.end();
-    });
-
-    t.test('stringifies a nested array value with dots notation', function (st) {
-        st.equal(
-            qs.stringify(
-                { a: { b: ['c', 'd'] } },
-                { allowDots: true, encode: false, arrayFormat: 'indices' }
-            ),
-            'a.b[0]=c&a.b[1]=d',
-            'indices: stringifies with dots + indices'
-        );
-        st.equal(
-            qs.stringify(
-                { a: { b: ['c', 'd'] } },
-                { allowDots: true, encode: false, arrayFormat: 'brackets' }
-            ),
-            'a.b[]=c&a.b[]=d',
-            'brackets: stringifies with dots + brackets'
-        );
-        st.equal(
-            qs.stringify(
-                { a: { b: ['c', 'd'] } },
-                { allowDots: true, encode: false }
-            ),
-            'a.b[0]=c&a.b[1]=d',
-            'default: stringifies with dots + indices'
-        );
-        st.end();
-    });
-
-    t.test('stringifies an object inside an array', function (st) {
-        st.equal(
-            qs.stringify({ a: [{ b: 'c' }] }, { arrayFormat: 'indices' }),
-            'a%5B0%5D%5Bb%5D=c',
-            'indices => brackets'
-        );
-        st.equal(
-            qs.stringify({ a: [{ b: 'c' }] }, { arrayFormat: 'brackets' }),
-            'a%5B%5D%5Bb%5D=c',
-            'brackets => brackets'
-        );
-        st.equal(
-            qs.stringify({ a: [{ b: 'c' }] }),
-            'a%5B0%5D%5Bb%5D=c',
-            'default => indices'
-        );
-
-        st.equal(
-            qs.stringify({ a: [{ b: { c: [1] } }] }, { arrayFormat: 'indices' }),
-            'a%5B0%5D%5Bb%5D%5Bc%5D%5B0%5D=1',
-            'indices => indices'
-        );
-
-        st.equal(
-            qs.stringify({ a: [{ b: { c: [1] } }] }, { arrayFormat: 'brackets' }),
-            'a%5B%5D%5Bb%5D%5Bc%5D%5B%5D=1',
-            'brackets => brackets'
-        );
-
-        st.equal(
-            qs.stringify({ a: [{ b: { c: [1] } }] }),
-            'a%5B0%5D%5Bb%5D%5Bc%5D%5B0%5D=1',
-            'default => indices'
-        );
-
-        st.end();
-    });
-
-    t.test('stringifies an array with mixed objects and primitives', function (st) {
-        st.equal(
-            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encode: false, arrayFormat: 'indices' }),
-            'a[0][b]=1&a[1]=2&a[2]=3',
-            'indices => indices'
-        );
-        st.equal(
-            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encode: false, arrayFormat: 'brackets' }),
-            'a[][b]=1&a[]=2&a[]=3',
-            'brackets => brackets'
-        );
-        st.equal(
-            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encode: false }),
-            'a[0][b]=1&a[1]=2&a[2]=3',
-            'default => indices'
-        );
-
-        st.end();
-    });
-
-    t.test('stringifies an object inside an array with dots notation', function (st) {
-        st.equal(
-            qs.stringify(
-                { a: [{ b: 'c' }] },
-                { allowDots: true, encode: false, arrayFormat: 'indices' }
-            ),
-            'a[0].b=c',
-            'indices => indices'
-        );
-        st.equal(
-            qs.stringify(
-                { a: [{ b: 'c' }] },
-                { allowDots: true, encode: false, arrayFormat: 'brackets' }
-            ),
-            'a[].b=c',
-            'brackets => brackets'
-        );
-        st.equal(
-            qs.stringify(
-                { a: [{ b: 'c' }] },
-                { allowDots: true, encode: false }
-            ),
-            'a[0].b=c',
-            'default => indices'
-        );
-
-        st.equal(
-            qs.stringify(
-                { a: [{ b: { c: [1] } }] },
-                { allowDots: true, encode: false, arrayFormat: 'indices' }
-            ),
-            'a[0].b.c[0]=1',
-            'indices => indices'
-        );
-        st.equal(
-            qs.stringify(
-                { a: [{ b: { c: [1] } }] },
-                { allowDots: true, encode: false, arrayFormat: 'brackets' }
-            ),
-            'a[].b.c[]=1',
-            'brackets => brackets'
-        );
-        st.equal(
-            qs.stringify(
-                { a: [{ b: { c: [1] } }] },
-                { allowDots: true, encode: false }
-            ),
-            'a[0].b.c[0]=1',
-            'default => indices'
-        );
-
-        st.end();
-    });
-
-    t.test('does not omit object keys when indices = false', function (st) {
-        st.equal(qs.stringify({ a: [{ b: 'c' }] }, { indices: false }), 'a%5Bb%5D=c');
-        st.end();
-    });
-
-    t.test('uses indices notation for arrays when indices=true', function (st) {
-        st.equal(qs.stringify({ a: ['b', 'c'] }, { indices: true }), 'a%5B0%5D=b&a%5B1%5D=c');
-        st.end();
-    });
-
-    t.test('uses indices notation for arrays when no arrayFormat is specified', function (st) {
-        st.equal(qs.stringify({ a: ['b', 'c'] }), 'a%5B0%5D=b&a%5B1%5D=c');
-        st.end();
-    });
-
-    t.test('uses indices notation for arrays when no arrayFormat=indices', function (st) {
-        st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'indices' }), 'a%5B0%5D=b&a%5B1%5D=c');
-        st.end();
-    });
-
-    t.test('uses repeat notation for arrays when no arrayFormat=repeat', function (st) {
-        st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'repeat' }), 'a=b&a=c');
-        st.end();
-    });
-
-    t.test('uses brackets notation for arrays when no arrayFormat=brackets', function (st) {
-        st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'brackets' }), 'a%5B%5D=b&a%5B%5D=c');
-        st.end();
-    });
-
-    t.test('stringifies a complicated object', function (st) {
-        st.equal(qs.stringify({ a: { b: 'c', d: 'e' } }), 'a%5Bb%5D=c&a%5Bd%5D=e');
-        st.end();
-    });
-
-    t.test('stringifies an empty value', function (st) {
-        st.equal(qs.stringify({ a: '' }), 'a=');
-        st.equal(qs.stringify({ a: null }, { strictNullHandling: true }), 'a');
-
-        st.equal(qs.stringify({ a: '', b: '' }), 'a=&b=');
-        st.equal(qs.stringify({ a: null, b: '' }, { strictNullHandling: true }), 'a&b=');
-
-        st.equal(qs.stringify({ a: { b: '' } }), 'a%5Bb%5D=');
-        st.equal(qs.stringify({ a: { b: null } }, { strictNullHandling: true }), 'a%5Bb%5D');
-        st.equal(qs.stringify({ a: { b: null } }, { strictNullHandling: false }), 'a%5Bb%5D=');
-
-        st.end();
-    });
-
-    t.test('stringifies a null object', { skip: !Object.create }, function (st) {
-        var obj = Object.create(null);
-        obj.a = 'b';
-        st.equal(qs.stringify(obj), 'a=b');
-        st.end();
-    });
-
-    t.test('returns an empty string for invalid input', function (st) {
-        st.equal(qs.stringify(undefined), '');
-        st.equal(qs.stringify(false), '');
-        st.equal(qs.stringify(null), '');
-        st.equal(qs.stringify(''), '');
-        st.end();
-    });
-
-    t.test('stringifies an object with a null object as a child', { skip: !Object.create }, function (st) {
-        var obj = { a: Object.create(null) };
-
-        obj.a.b = 'c';
-        st.equal(qs.stringify(obj), 'a%5Bb%5D=c');
-        st.end();
-    });
-
-    t.test('drops keys with a value of undefined', function (st) {
-        st.equal(qs.stringify({ a: undefined }), '');
-
-        st.equal(qs.stringify({ a: { b: undefined, c: null } }, { strictNullHandling: true }), 'a%5Bc%5D');
-        st.equal(qs.stringify({ a: { b: undefined, c: null } }, { strictNullHandling: false }), 'a%5Bc%5D=');
-        st.equal(qs.stringify({ a: { b: undefined, c: '' } }), 'a%5Bc%5D=');
-        st.end();
-    });
-
-    t.test('url encodes values', function (st) {
-        st.equal(qs.stringify({ a: 'b c' }), 'a=b%20c');
-        st.end();
-    });
-
-    t.test('stringifies a date', function (st) {
-        var now = new Date();
-        var str = 'a=' + encodeURIComponent(now.toISOString());
-        st.equal(qs.stringify({ a: now }), str);
-        st.end();
-    });
-
-    t.test('stringifies the weird object from qs', function (st) {
-        st.equal(qs.stringify({ 'my weird field': '~q1!2"\'w$5&7/z8)?' }), 'my%20weird%20field=~q1%212%22%27w%245%267%2Fz8%29%3F');
-        st.end();
-    });
-
-    t.test('skips properties that are part of the object prototype', function (st) {
-        Object.prototype.crash = 'test';
-        st.equal(qs.stringify({ a: 'b' }), 'a=b');
-        st.equal(qs.stringify({ a: { b: 'c' } }), 'a%5Bb%5D=c');
-        delete Object.prototype.crash;
-        st.end();
-    });
-
-    t.test('stringifies boolean values', function (st) {
-        st.equal(qs.stringify({ a: true }), 'a=true');
-        st.equal(qs.stringify({ a: { b: true } }), 'a%5Bb%5D=true');
-        st.equal(qs.stringify({ b: false }), 'b=false');
-        st.equal(qs.stringify({ b: { c: false } }), 'b%5Bc%5D=false');
-        st.end();
-    });
-
-    t.test('stringifies buffer values', function (st) {
-        st.equal(qs.stringify({ a: SaferBuffer.from('test') }), 'a=test');
-        st.equal(qs.stringify({ a: { b: SaferBuffer.from('test') } }), 'a%5Bb%5D=test');
-        st.end();
-    });
-
-    t.test('stringifies an object using an alternative delimiter', function (st) {
-        st.equal(qs.stringify({ a: 'b', c: 'd' }, { delimiter: ';' }), 'a=b;c=d');
-        st.end();
-    });
-
-    t.test('doesn\'t blow up when Buffer global is missing', function (st) {
-        var tempBuffer = global.Buffer;
-        delete global.Buffer;
-        var result = qs.stringify({ a: 'b', c: 'd' });
-        global.Buffer = tempBuffer;
-        st.equal(result, 'a=b&c=d');
-        st.end();
-    });
-
-    t.test('selects properties when filter=array', function (st) {
-        st.equal(qs.stringify({ a: 'b' }, { filter: ['a'] }), 'a=b');
-        st.equal(qs.stringify({ a: 1 }, { filter: [] }), '');
-
-        st.equal(
-            qs.stringify(
-                { a: { b: [1, 2, 3, 4], c: 'd' }, c: 'f' },
-                { filter: ['a', 'b', 0, 2], arrayFormat: 'indices' }
-            ),
-            'a%5Bb%5D%5B0%5D=1&a%5Bb%5D%5B2%5D=3',
-            'indices => indices'
-        );
-        st.equal(
-            qs.stringify(
-                { a: { b: [1, 2, 3, 4], c: 'd' }, c: 'f' },
-                { filter: ['a', 'b', 0, 2], arrayFormat: 'brackets' }
-            ),
-            'a%5Bb%5D%5B%5D=1&a%5Bb%5D%5B%5D=3',
-            'brackets => brackets'
-        );
-        st.equal(
-            qs.stringify(
-                { a: { b: [1, 2, 3, 4], c: 'd' }, c: 'f' },
-                { filter: ['a', 'b', 0, 2] }
-            ),
-            'a%5Bb%5D%5B0%5D=1&a%5Bb%5D%5B2%5D=3',
-            'default => indices'
-        );
-
-        st.end();
-    });
-
-    t.test('supports custom representations when filter=function', function (st) {
-        var calls = 0;
-        var obj = { a: 'b', c: 'd', e: { f: new Date(1257894000000) } };
-        var filterFunc = function (prefix, value) {
-            calls += 1;
-            if (calls === 1) {
-                st.equal(prefix, '', 'prefix is empty');
-                st.equal(value, obj);
-            } else if (prefix === 'c') {
-                return void 0;
-            } else if (value instanceof Date) {
-                st.equal(prefix, 'e[f]');
-                return value.getTime();
-            }
-            return value;
-        };
-
-        st.equal(qs.stringify(obj, { filter: filterFunc }), 'a=b&e%5Bf%5D=1257894000000');
-        st.equal(calls, 5);
-        st.end();
-    });
-
-    t.test('can disable uri encoding', function (st) {
-        st.equal(qs.stringify({ a: 'b' }, { encode: false }), 'a=b');
-        st.equal(qs.stringify({ a: { b: 'c' } }, { encode: false }), 'a[b]=c');
-        st.equal(qs.stringify({ a: 'b', c: null }, { strictNullHandling: true, encode: false }), 'a=b&c');
-        st.end();
-    });
-
-    t.test('can sort the keys', function (st) {
-        var sort = function (a, b) {
-            return a.localeCompare(b);
-        };
-        st.equal(qs.stringify({ a: 'c', z: 'y', b: 'f' }, { sort: sort }), 'a=c&b=f&z=y');
-        st.equal(qs.stringify({ a: 'c', z: { j: 'a', i: 'b' }, b: 'f' }, { sort: sort }), 'a=c&b=f&z%5Bi%5D=b&z%5Bj%5D=a');
-        st.end();
-    });
-
-    t.test('can sort the keys at depth 3 or more too', function (st) {
-        var sort = function (a, b) {
-            return a.localeCompare(b);
-        };
-        st.equal(
-            qs.stringify(
-                { a: 'a', z: { zj: { zjb: 'zjb', zja: 'zja' }, zi: { zib: 'zib', zia: 'zia' } }, b: 'b' },
-                { sort: sort, encode: false }
-            ),
-            'a=a&b=b&z[zi][zia]=zia&z[zi][zib]=zib&z[zj][zja]=zja&z[zj][zjb]=zjb'
-        );
-        st.equal(
-            qs.stringify(
-                { a: 'a', z: { zj: { zjb: 'zjb', zja: 'zja' }, zi: { zib: 'zib', zia: 'zia' } }, b: 'b' },
-                { sort: null, encode: false }
-            ),
-            'a=a&z[zj][zjb]=zjb&z[zj][zja]=zja&z[zi][zib]=zib&z[zi][zia]=zia&b=b'
-        );
-        st.end();
-    });
-
-    t.test('can stringify with custom encoding', function (st) {
-        st.equal(qs.stringify({ 県: '大阪府', '': '' }, {
-            encoder: function (str) {
-                if (str.length === 0) {
-                    return '';
-                }
-                var buf = iconv.encode(str, 'shiftjis');
-                var result = [];
-                for (var i = 0; i < buf.length; ++i) {
-                    result.push(buf.readUInt8(i).toString(16));
-                }
-                return '%' + result.join('%');
-            }
-        }), '%8c%a7=%91%e5%8d%e3%95%7b&=');
-        st.end();
-    });
-
-    t.test('receives the default encoder as a second argument', function (st) {
-        st.plan(2);
-        qs.stringify({ a: 1 }, {
-            encoder: function (str, defaultEncoder) {
-                st.equal(defaultEncoder, utils.encode);
-            }
-        });
-        st.end();
-    });
-
-    t.test('throws error with wrong encoder', function (st) {
-        st['throws'](function () {
-            qs.stringify({}, { encoder: 'string' });
-        }, new TypeError('Encoder has to be a function.'));
-        st.end();
-    });
-
-    t.test('can use custom encoder for a buffer object', { skip: typeof Buffer === 'undefined' }, function (st) {
-        st.equal(qs.stringify({ a: SaferBuffer.from([1]) }, {
-            encoder: function (buffer) {
-                if (typeof buffer === 'string') {
-                    return buffer;
-                }
-                return String.fromCharCode(buffer.readUInt8(0) + 97);
-            }
-        }), 'a=b');
-        st.end();
-    });
-
-    t.test('serializeDate option', function (st) {
-        var date = new Date();
-        st.equal(
-            qs.stringify({ a: date }),
-            'a=' + date.toISOString().replace(/:/g, '%3A'),
-            'default is toISOString'
-        );
-
-        var mutatedDate = new Date();
-        mutatedDate.toISOString = function () {
-            throw new SyntaxError();
-        };
-        st['throws'](function () {
-            mutatedDate.toISOString();
-        }, SyntaxError);
-        st.equal(
-            qs.stringify({ a: mutatedDate }),
-            'a=' + Date.prototype.toISOString.call(mutatedDate).replace(/:/g, '%3A'),
-            'toISOString works even when method is not locally present'
-        );
-
-        var specificDate = new Date(6);
-        st.equal(
-            qs.stringify(
-                { a: specificDate },
-                { serializeDate: function (d) { return d.getTime() * 7; } }
-            ),
-            'a=42',
-            'custom serializeDate function called'
-        );
-
-        st.end();
-    });
-
-    t.test('RFC 1738 spaces serialization', function (st) {
-        st.equal(qs.stringify({ a: 'b c' }, { format: qs.formats.RFC1738 }), 'a=b+c');
-        st.equal(qs.stringify({ 'a b': 'c d' }, { format: qs.formats.RFC1738 }), 'a+b=c+d');
-        st.end();
-    });
-
-    t.test('RFC 3986 spaces serialization', function (st) {
-        st.equal(qs.stringify({ a: 'b c' }, { format: qs.formats.RFC3986 }), 'a=b%20c');
-        st.equal(qs.stringify({ 'a b': 'c d' }, { format: qs.formats.RFC3986 }), 'a%20b=c%20d');
-        st.end();
-    });
-
-    t.test('Backward compatibility to RFC 3986', function (st) {
-        st.equal(qs.stringify({ a: 'b c' }), 'a=b%20c');
-        st.end();
-    });
-
-    t.test('Edge cases and unknown formats', function (st) {
-        ['UFO1234', false, 1234, null, {}, []].forEach(
-            function (format) {
-                st['throws'](
-                    function () {
-                        qs.stringify({ a: 'b c' }, { format: format });
-                    },
-                    new TypeError('Unknown format option provided.')
-                );
-            }
-        );
-        st.end();
-    });
-
-    t.test('encodeValuesOnly', function (st) {
-        st.equal(
-            qs.stringify(
-                { a: 'b', c: ['d', 'e=f'], f: [['g'], ['h']] },
-                { encodeValuesOnly: true }
-            ),
-            'a=b&c[0]=d&c[1]=e%3Df&f[0][0]=g&f[1][0]=h'
-        );
-        st.equal(
-            qs.stringify(
-                { a: 'b', c: ['d', 'e'], f: [['g'], ['h']] }
-            ),
-            'a=b&c%5B0%5D=d&c%5B1%5D=e&f%5B0%5D%5B0%5D=g&f%5B1%5D%5B0%5D=h'
-        );
-        st.end();
-    });
-
-    t.test('encodeValuesOnly - strictNullHandling', function (st) {
-        st.equal(
-            qs.stringify(
-                { a: { b: null } },
-                { encodeValuesOnly: true, strictNullHandling: true }
-            ),
-            'a[b]'
-        );
-        st.end();
-    });
-
-    t.test('does not mutate the options argument', function (st) {
-        var options = {};
-        qs.stringify({}, options);
-        st.deepEqual(options, {});
-        st.end();
-    });
-
-    t.end();
-});
deleted file mode 100644
--- a/node_modules/alfred/node_modules/request/node_modules/qs/test/utils.js
+++ /dev/null
@@ -1,34 +0,0 @@
-'use strict';
-
-var test = require('tape');
-var utils = require('../lib/utils');
-
-test('merge()', function (t) {
-    t.deepEqual(utils.merge({ a: 'b' }, { a: 'c' }), { a: ['b', 'c'] }, 'merges two objects with the same key');
-
-    var oneMerged = utils.merge({ foo: 'bar' }, { foo: { first: '123' } });
-    t.deepEqual(oneMerged, { foo: ['bar', { first: '123' }] }, 'merges a standalone and an object into an array');
-
-    var twoMerged = utils.merge({ foo: ['bar', { first: '123' }] }, { foo: { second: '456' } });
-    t.deepEqual(twoMerged, { foo: { 0: 'bar', 1: { first: '123' }, second: '456' } }, 'merges a standalone and two objects into an array');
-
-    var sandwiched = utils.merge({ foo: ['bar', { first: '123', second: '456' }] }, { foo: 'baz' });
-    t.deepEqual(sandwiched, { foo: ['bar', { first: '123', second: '456' }, 'baz'] }, 'merges an object sandwiched by two standalones into an array');
-
-    var nestedArrays = utils.merge({ foo: ['baz'] }, { foo: ['bar', 'xyzzy'] });
-    t.deepEqual(nestedArrays, { foo: ['baz', 'bar', 'xyzzy'] });
-
-    t.end();
-});
-
-test('assign()', function (t) {
-    var target = { a: 1, b: 2 };
-    var source = { b: 3, c: 4 };
-    var result = utils.assign(target, source);
-
-    t.equal(result, target, 'returns the target');
-    t.deepEqual(target, { a: 1, b: 3, c: 4 }, 'target and source are merged');
-    t.deepEqual(source, { b: 3, c: 4 }, 'source is untouched');
-
-    t.end();
-});
deleted file mode 100644
--- a/node_modules/alfred/node_modules/superagent/.npmignore
+++ /dev/null
@@ -1,6 +0,0 @@
-support
-test
-examples
-*.sock
-lib-cov
-coverage.html
deleted file mode 100644
--- a/node_modules/alfred/node_modules/superagent/.travis.yml
+++ /dev/null
@@ -1,18 +0,0 @@
-sudo: false
-language: node_js
-node_js:
-  - "5.4"
-  - "4.2"
-  - "0.12"
-  - "0.10"
-  - "iojs"
-
-env:
-  global:
-    - SAUCE_USERNAME='shtylman-superagent'
-    - SAUCE_ACCESS_KEY='39a45464-cb1d-4b8d-aa1f-83c7c04fa673'
-
-matrix:
-  include:
-    - node_js: "4.2"
-      env: BROWSER=1
deleted file mode 100644
--- a/node_modules/alfred/node_modules/superagent/.zuul.yml
+++ /dev/null
@@ -1,15 +0,0 @@
-ui: mocha-bdd
-server: ./test/support/server.js
-browsers:
-  - name: chrome
-    version: latest
-  - name: firefox
-    version: latest
-  - name: safari
-    version: latest
-  - name: iphone
-    version: latest
-  - name: android
-    version: latest
-  - name: ie
-    version: 9..latest
deleted file mode 100644
--- a/node_modules/alfred/node_modules/superagent/Contributing.md
+++ /dev/null
@@ -1,7 +0,0 @@
-When submitting a PR, your chance of acceptance increases if you do the following:
-
-* Code style is consistent with existing in the file.
-* Tests are passing (client and server).
-* You add a test for the failing issue you are fixing.
-* Code changes are focused on the area of discussion.
-* Do not rebuild the distribution files or increment version numbers.
deleted file mode 100644
--- a/node_modules/alfred/node_modules/superagent/History.md
+++ /dev/null
@@ -1,554 +0,0 @@
-# 1.8.2 (2016-03-20)
-
-  * Fixed handling of HTTP status 204 with content-encoding: gzip (Andrew Shelton)
-  * Handling of FormData error events (scriptype)
-  * Fixed parsing of `vnd+json` MIME types (Kornel Lesiński)
-  * Aliased browser implementation of `.parse()` as `.serialize()` for forward compatibility
-
-# 1.8.1 (2016-03-14)
-
-  * Fixed form-data incompatibility with IE9
-
-# 1.8.0 (2016-03-09)
-
- * Extracted common code into request-base class (Peter Lyons)
-   * It does not affect the public API, but please let us know if you notice any plugins/subclasses breaking!
- * Added option `{type:'auto'}` to `auth` method, which enables browser-native auth types (Jungle, Askar Yusupov)
- * Added `responseType()` to set XHR `responseType` (chris)
- * Switched to form-data for browserify-compatible `FormData` (Peter Lyons)
- * Added `statusCode` to error response when JSON response is malformed (mattdell)
- * Prevented TCP port conflicts in all tests (Peter Lyons)
- * Updated form-data dependency
-
-# 1.7.2 (2016-01-26)
-
- * Fix case-sensitivity of header fields introduced by a4ddd6a. (Edward J. Jinotti)
- * bump extend dependency, as former version did not contain any license information (Lukas Eipert)
-
-# 1.7.1 (2016-01-21)
-
- * Fixed a conflict with express when using npm 3.x (Glenn)
- * Fixed redirects after a multipart/form-data POST request (cyclist2)
-
-# 1.7.0 (2016-01-18)
-
- * When attaching files, read default filename from the `File` object (JD Isaacks)
- * Add `direction` property to `progress` events (Joseph Dykstra)
- * Update component-emitter & formidable (Kornel Lesiński)
- * Don't re-encode query string needlessly (Ruben Verborgh)
- * ensure querystring is appended when doing `stream.pipe(request)` (Keith Grennan)
- * change set header function, not call `this.request()` until call `this.end()` (vicanso)
- * Add no-op `withCredentials` to Node API (markdalgleish)
- * fix `delete` breaking on ie8 (kenjiokabe)
- * Don't let request error override responses (Clay Reimann)
- * Increased number of tests shared between node and client (Kornel Lesiński)
-
-# 1.6.0/1.6.1 (2015-12-09)
-
- * avoid misleading CORS error message
- * added 'progress' event on file/form upload in Node (Olivier Lalonde)
- * return raw response if the response parsing fails (Rei Colina)
- * parse content-types ending with `+json` as JSON (Eiryyy)
- * fix to avoid throwing errors on aborted requests (gjurgens)
- * retain cookies on redirect when hosts match (Tom Conroy)
- * added Bower manifest (Johnny Freeman)
- * upgrade to latest cookiejar (Andy Burke)
-
-# 1.5.0 (2015-11-30)
-
- * encode array values as `key=1&key=2&key=3` etc... (aalpern, Davis Kim)
- * avoid the error which is omitted from 'socket hang up'
- * faster JSON parsing, handling of zlib errors (jbellenger)
- * fix IE11 sends 'undefined' string if data was undefined (Vadim Goncharov)
- * alias `del()` method as `delete()` (Aaron Krause)
- * revert Request#parse since it was actually Response#parse
-
-# 1.4.0 (2015-09-14)
-
- * add Request#parse method to client library
- * add missing statusCode in client response
- * don't apply JSON heuristics if a valid parser is found
- * fix detection of root object for webworkers
-
-# 1.3.0 (2015-08-05)
-
- * fix incorrect content-length of data set to buffer
- * serialize request data takes into account charsets
- * add basic promise support via a `then` function
-
-# 1.2.0 (2015-04-13)
-
- * add progress events to downlodas
- * make usable in webworkers
- * add support for 308 redirects
- * update node-form-data dependency
- * update to work in react native
- * update node-mime dependency
-
-# 1.1.0 (2015-03-13)
-
- * Fix responseType checks without xhr2 and ie9 tests (rase-)
- * errors have .status and .response fields if applicable (defunctzombie)
- * fix end callback called before saving cookies (rase-)
-
-1.0.0 / 2015-03-08
-==================
-
- * All non-200 responses are treated as errors now. (The callback is called with an error when the response has a status < 200 or >= 300 now. In previous versions this would not have raised an error and the client would have to check the `res` object. See [#283](https://github.com/visionmedia/superagent/issues/283).
- * keep timeouts intact across redirects (hopkinsth)
- * handle falsy json values (themaarten)
- * fire response events in browser version (Schoonology)
- * getXHR exported in client version (KidsKilla)
- * remove arity check on `.end()` callbacks (defunctzombie)
- * avoid setting content-type for host objects (rexxars)
- * don't index array strings in querystring (travisjeffery)
- * fix pipe() with redirects (cyrilis)
- * add xhr2 file download (vstirbu)
- * set default response type to text/plain if not specified (warrenseine)
-
-0.21.0 / 2014-11-11
-==================
-
- * Trim text before parsing json (gjohnson)
- * Update tests to express 4 (gaastonsr)
- * Prevent double callback when error is thrown (pgn-vole)
- * Fix missing clearTimeout (nickdima)
- * Update debug (TooTallNate)
-
-0.20.0 / 2014-10-02
-==================
-
- * Add toJSON() to request and response instances. (yields)
- * Prevent HEAD requests from getting parsed. (gjohnson)
- * Update debug. (TooTallNate)
-
-0.19.1 / 2014-09-24
-==================
-
- * Fix basic auth issue when password is falsey value. (gjohnson)
-
-0.19.0 / 2014-09-24
-==================
-
- * Add unset() to browser. (shesek)
- * Prefer XHR over ActiveX. (omeid)
- * Catch parse errors. (jacwright)
- * Update qs dependency. (wercker)
- * Add use() to node. (Financial-Times)
- * Add response text to errors. (yields)
- * Don't send empty cookie headers. (undoZen)
- * Don't parse empty response bodies. (DveMac)
- * Use hostname when setting cookie host. (prasunsultania)
-
-0.18.2 / 2014-07-12
-==================
-
- * Handle parser errors. (kof)
- * Ensure not to use default parsers when there is a user defined one. (kof)
-
-0.18.1 / 2014-07-05
-==================
-
- * Upgrade cookiejar dependency (juanpin)
- * Support image mime types (nebulade)
- * Make .agent chainable (kof)
- * Upgrade debug (TooTallNate)
- * Fix docs (aheckmann)
-
-0.18.0 / 2014-04-29
-===================
-
-* Use "form-data" module for the multipart/form-data implementation. (TooTallNate)
-* Add basic `field()` and `attach()` functions for HTML5 FormData. (TooTallNate)
-* Deprecate `part()`. (TooTallNate)
-* Set default user-agent header. (bevacqua)
-* Add `unset()` method for removing headers. (bevacqua)
-* Update cookiejar. (missinglink)
-* Fix response error formatting. (shesek)
-
-0.17.0 / 2014-03-06
-===================
-
- * supply uri malformed error to the callback (yields)
- * add request event (yields)
- * allow simple auth (yields)
- * add request event (yields)
- * switch to component/reduce (visionmedia)
- * fix part content-disposition (mscdex)
- * add browser testing via zuul (defunctzombie)
- * adds request.use() (johntron)
-
-0.16.0 / 2014-01-07
-==================
-
- * remove support for 0.6 (superjoe30)
- * fix CORS withCredentials (wejendorp)
- * add "test" script (superjoe30)
- * add request .accept() method (nickl-)
- * add xml to mime types mappings (nickl-)
- * fix parse body error on HEAD requests (gjohnson)
- * fix documentation typos (matteofigus)
- * fix content-type + charset (bengourley)
- * fix null values on query parameters (cristiandouce)
-
-0.15.7 / 2013-10-19
-==================
-
- * pin should.js to 1.3.0 due to breaking change in 2.0.x
- * fix browserify regression
-
-0.15.5 / 2013-10-09
-==================
-
- * add browser field to support browserify
- * fix .field() value number support
-
-0.15.4 / 2013-07-09
-==================
-
- * node: add a Request#agent() function to set the http Agent to use
-
-0.15.3 / 2013-07-05
-==================
-
- * fix .pipe() unzipping on more recent nodes. Closes #240
- * fix passing an empty object to .query() no longer appends "?"
- * fix formidable error handling
- * update formidable
-
-0.15.2 / 2013-07-02
-==================
-
- * fix: emit 'end' when piping.
-
-0.15.1 / 2013-06-26
-==================
-
- * add try/catch around parseLinks
-
-0.15.0 / 2013-06-25
-==================
-
- * make `Response#toError()` have a more meaningful `message`
-
-0.14.9 / 2013-06-15
-==================
-
- * add debug()s to the node client
- * add .abort() method to node client
-
-0.14.8 / 2013-06-13
-==================
-
- * set .agent = false always
- * remove X-Requested-With. Closes #189
-
-0.14.7 / 2013-06-06
-==================
-
- * fix unzip error handling
-
-0.14.6 / 2013-05-23
-==================
-
- * fix HEAD unzip bug
-
-0.14.5 / 2013-05-23
-==================
-
- * add flag to ensure the callback is __never__ invoked twice
-
-0.14.4 / 2013-05-22
-==================
-
- * add superagent.js build output
- * update qs
- * update emitter-component
- * revert "add browser field to support browserify" see GH-221
-
-0.14.3 / 2013-05-18
-==================
-
- * add browser field to support browserify
-
-0.14.2/ 2013-05-07
-==================
-
-  * add host object check to fix serialization of File/Blobs etc as json
-
-0.14.1 / 2013-04-09
-==================
-
-  * update qs
-
-0.14.0 / 2013-04-02
-==================
-
-  * add client-side basic auth
-  * fix retaining of .set() header field case
-
-0.13.0 / 2013-03-13
-==================
-
-  * add progress events to client
-  * add simple example
-  * add res.headers as alias of res.header for browser client
-  * add res.get(field) to node/client
-
-0.12.4 / 2013-02-11
-==================
-
-  * fix get content-type even if can't get other headers in firefox. fixes #181
-
-0.12.3 / 2013-02-11
-==================
-
-  * add quick "progress" event support
-
-0.12.2 / 2013-02-04
-==================
-
-  * add test to check if response acts as a readable stream
-  * add ReadableStream in the Response prototype.
-  * add test to assert correct redirection when the host changes in the location header.
-  * add default Accept-Encoding. Closes #155
-  * fix req.pipe() return value of original stream for node parity. Closes #171
-  * remove the host header when cleaning headers to properly follow the redirection.
-
-0.12.1 / 2013-01-10
-==================
-
-  * add x-domain error handling
-
-0.12.0 / 2013-01-04
-==================
-
-  * add header persistence on redirects
-
-0.11.0 / 2013-01-02
-==================
-
-  * add .error Error object. Closes #156
-  * add forcing of res.text removal for FF HEAD responses. Closes #162
-  * add reduce component usage. Closes #90
-  * move better-assert dep to development deps
-
-0.10.0 / 2012-11-14
-==================
-
-  * add req.timeout(ms) support for the client
-
-0.9.10 / 2012-11-14
-==================
-
-  * fix client-side .query(str) support
-
-0.9.9 / 2012-11-14
-==================
-
-  * add .parse(fn) support
-  * fix socket hangup with dates in querystring. Closes #146
-  * fix socket hangup "error" event when a callback of arity 2 is provided
-
-0.9.8 / 2012-11-03
-==================
-
-  * add emission of error from `Request#callback()`
-  * add a better fix for nodes weird socket hang up error
-  * add PUT/POST/PATCH data support to client short-hand functions
-  * add .license property to component.json
-  * change client portion to build using component(1)
-  * fix GET body support [guille]
-
-0.9.7 / 2012-10-19
-==================
-
-  * fix `.buffer()` `res.text` when no parser matches
-
-0.9.6 / 2012-10-17
-==================
-
-  * change: use `this` when `window` is undefined
-  * update to new component spec [juliangruber]
-  * fix emission of "data" events for compressed responses without encoding. Closes #125
-
-0.9.5 / 2012-10-01
-==================
-
-  * add field name to .attach()
-  * add text "parser"
-  * refactor isObject()
-  * remove wtf isFunction() helper
-
-0.9.4 / 2012-09-20
-==================
-
-  * fix `Buffer` responses [TooTallNate]
-  * fix `res.type` when a "type" param is present [TooTallNate]
-
-0.9.3 / 2012-09-18
-==================
-
-  * remove __GET__ `.send()` == `.query()` special-case (__API__ change !!!)
-
-0.9.2 / 2012-09-17
-==================
-
-  * add `.aborted` prop
-  * add `.abort()`. Closes #115
-
-0.9.1 / 2012-09-07
-==================
-
-  * add `.forbidden` response property
-  * add component.json
-  * change emitter-component to 0.0.5
-  * fix client-side tests
-
-0.9.0 / 2012-08-28
-==================
-
-  * add `.timeout(ms)`. Closes #17
-
-0.8.2 / 2012-08-28
-==================
-
-  * fix pathname relative redirects. Closes #112
-
-0.8.1 / 2012-08-21
-==================
-
-  * fix redirects when schema is specified
-
-0.8.0 / 2012-08-19
-==================
-
-  * add `res.buffered` flag
-  * add buffering of text/*, json and forms only by default. Closes #61
-  * add `.buffer(false)` cancellation
-  * add cookie jar support [hunterloftis]
-  * add agent functionality [hunterloftis]
-
-0.7.0 / 2012-08-03
-==================
-
-  * allow `query()` to be called after the internal `req` has been created [tootallnate]
-
-0.6.0 / 2012-07-17
-==================
-
-  * add `res.send('foo=bar')` default of "application/x-www-form-urlencoded"
-
-0.5.1 / 2012-07-16
-==================
-
-  * add "methods" dep
-  * add `.end()` arity check to node callbacks
-  * fix unzip support due to weird node internals
-
-0.5.0 / 2012-06-16
-==================
-
-  * Added "Link" response header field parsing, exposing `res.links`
-
-0.4.3 / 2012-06-15
-==================
-
-  * Added 303, 305 and 307 as redirect status codes [slaskis]
-  * Fixed passing an object as the url
-
-0.4.2 / 2012-06-02
-==================
-
-  * Added component support
-  * Fixed redirect data
-
-0.4.1 / 2012-04-13
-==================
-
-  * Added HTTP PATCH support
-  * Fixed: GET / HEAD when following redirects. Closes #86
-  * Fixed Content-Length detection for multibyte chars
-
-0.4.0 / 2012-03-04
-==================
-
-  * Added `.head()` method [browser]. Closes #78
-  * Added `make test-cov` support
-  * Added multipart request support. Closes #11
-  * Added all methods that node supports. Closes #71
-  * Added "response" event providing a Response object. Closes #28
-  * Added `.query(obj)`. Closes #59
-  * Added `res.type` (browser). Closes #54
-  * Changed: default `res.body` and `res.files` to {}
-  * Fixed: port existing query-string fix (browser). Closes #57
-
-0.3.0 / 2012-01-24
-==================
-
-  * Added deflate/gzip support [guillermo]
-  * Added `res.type` (Content-Type void of params)
-  * Added `res.statusCode` to mirror node
-  * Added `res.headers` to mirror node
-  * Changed: parsers take callbacks
-  * Fixed optional schema support. Closes #49
-
-0.2.0 / 2012-01-05
-==================
-
-  * Added url auth support
-  * Added `.auth(username, password)`
-  * Added basic auth support [node]. Closes #41
-  * Added `make test-docs`
-  * Added guillermo's EventEmitter. Closes #16
-  * Removed `Request#data()` for SS, renamed to `send()`
-  * Removed `Request#data()` from client, renamed to `send()`
-  * Fixed array support. [browser]
-  * Fixed array support. Closes #35 [node]
-  * Fixed `EventEmitter#emit()`
-
-0.1.3 / 2011-10-25
-==================
-
-  * Added error to callback
-  * Bumped node dep for 0.5.x
-
-0.1.2 / 2011-09-24
-==================
-
-  * Added markdown documentation
-  * Added `request(url[, fn])` support to the client
-  * Added `qs` dependency to package.json
-  * Added options for `Request#pipe()`
-  * Added support for `request(url, callback)`
-  * Added `request(url)` as shortcut for `request.get(url)`
-  * Added `Request#pipe(stream)`
-  * Added inherit from `Stream`
-  * Added multipart support
-  * Added ssl support (node)
-  * Removed Content-Length field from client
-  * Fixed buffering, `setEncoding()` to utf8 [reported by stagas]
-  * Fixed "end" event when piping
-
-0.1.1 / 2011-08-20
-==================
-
-  * Added `res.redirect` flag (node)
-  * Added redirect support (node)
-  * Added `Request#redirects(n)` (node)
-  * Added `.set(object)` header field support
-  * Fixed `Content-Length` support
-
-0.1.0 / 2011-08-09
-==================
-
-  * Added support for multiple calls to `.data()`
-  * Added support for `.get(uri, obj)`
-  * Added GET `.data()` querystring support
-  * Added IE{6,7,8} support [alexyoung]
-
-0.0.1 / 2011-08-05
-==================
-
-  * Initial commit
-
deleted file mode 100644
--- a/node_modules/alfred/node_modules/superagent/Makefile
+++ /dev/null
@@ -1,57 +0,0 @@
-
-NODETESTS ?= test/*.js test/node/*.js
-BROWSERTESTS ?= test/*.js test/client/*.js
-REPORTER = spec
-
-all: superagent.js
-
-test:
-	@if [ "x$(BROWSER)" = "x" ]; then make test-node; else make test-browser; fi
-
-test-node:
-	@NODE_ENV=test NODE_TLS_REJECT_UNAUTHORIZED=0 ./node_modules/.bin/mocha \
-		--require should \
-		--reporter $(REPORTER) \
-		--timeout 5000 \
-		--growl \
-		$(NODETESTS)
-
-test-cov: lib-cov
-	SUPERAGENT_COV=1 $(MAKE) test REPORTER=html-cov > coverage.html
-
-test-browser:
-	./node_modules/.bin/zuul -- $(BROWSERTESTS)
-
-test-browser-local:
-	./node_modules/.bin/zuul --local 4000 -- $(BROWSERTESTS)
-
-lib-cov:
-	jscoverage lib lib-cov
-
-superagent.js: lib/node/*.js lib/node/parsers/*.js
-	@./node_modules/.bin/browserify \
-		--standalone superagent \
-		--outfile superagent.js .
-
-test-server:
-	@node test/server
-
-docs: index.html test-docs
-
-index.html: docs/index.md
-	marked < $< \
-		| cat docs/head.html - docs/tail.html \
-		> $@
-
-docclean:
-	rm -f index.html test.html
-
-test-docs:
-	make test REPORTER=doc \
-		| cat docs/head.html - docs/tail.html \
-		> test.html
-
-clean:
-	rm -fr superagent.js components
-
-.PHONY: test-cov test docs test-docs clean test-browser-local
deleted file mode 100644
--- a/node_modules/alfred/node_modules/superagent/Readme.md
+++ /dev/null
@@ -1,116 +0,0 @@
-# SuperAgent [![Build Status](https://travis-ci.org/visionmedia/superagent.svg?branch=master)](https://travis-ci.org/visionmedia/superagent)
-
-[![Sauce Test Status](https://saucelabs.com/browser-matrix/shtylman-superagent.svg)](https://saucelabs.com/u/shtylman-superagent)
-
-SuperAgent is a small progressive __client-side__ HTTP request library, and __Node.js__ module with the same API, sporting many high-level HTTP client features. View the [docs](http://visionmedia.github.io/superagent/).
-
-![super agent](http://f.cl.ly/items/3d282n3A0h0Z0K2w0q2a/Screenshot.png)
-
-## Installation
-
-node:
-
-```
-$ npm install superagent
-```
-
-component:
-
-```
-$ component install visionmedia/superagent
-```
-
-Works with [browserify](https://github.com/substack/node-browserify) and should work with [webpack](https://github.com/visionmedia/superagent/wiki/Superagent-for-Webpack)
-
-```js
-request
-  .post('/api/pet')
-  .send({ name: 'Manny', species: 'cat' })
-  .set('X-API-Key', 'foobar')
-  .set('Accept', 'application/json')
-  .end(function(err, res){
-    // Calling the end function will send the request
-  });
-```
-
-## Supported browsers
-
-Tested browsers:
-
-- Latest Android
-- Latest Firefox
-- Latest Chrome
-- IE9 through latest
-- Latest iPhone
-- Latest Safari
-
-Even though IE9 is supported, a polyfill `window.btoa` is needed to use basic auth.
-
-# Plugins
-
-Superagent is easily extended via plugins.
-
-```js
-var nocache = require('superagent-no-cache');
-var request = require('superagent');
-var prefix = require('superagent-prefix')('/static');
-
-request
-.get('/some-url')
-.use(prefix) // Prefixes *only* this request
-.use(nocache) // Prevents caching of *only* this request
-.end(function(err, res){
-    // Do something
-});
-```
-
-Existing plugins:
- * [superagent-no-cache](https://github.com/johntron/superagent-no-cache) - prevents caching by including Cache-Control header
- * [superagent-prefix](https://github.com/johntron/superagent-prefix) - prefixes absolute URLs (useful in test environment)
- * [superagent-suffix](https://github.com/timneutkens1/superagent-suffix) - suffix URLs with a given path
- * [superagent-mock](https://github.com/M6Web/superagent-mock) - simulate HTTP calls by returning data fixtures based on the requested URL
- * [superagent-mocker](https://github.com/shuvalov-anton/superagent-mocker) — simulate REST API
- * [superagent-cache](https://github.com/jpodwys/superagent-cache) - superagent with built-in, flexible caching
- * [superagent-jsonapify](https://github.com/alex94puchades/superagent-jsonapify) - A lightweight [json-api](http://jsonapi.org/format/) client addon for superagent
- * [superagent-serializer](https://github.com/zzarcon/superagent-serializer) - Converts server payload into different cases
- * [superagent-promise-plugin](https://github.com/jomaxx/superagent-promise-plugin) - Shims req.end to return a promise when executed with no callback.
- * [superagent-use](https://github.com/koenpunt/superagent-use) - A client addon to apply plugins to all requests.
-
-Please prefix your plugin with `superagent-*` so that it can easily be found by others.
-
-For superagent extensions such as couchdb and oauth visit the [wiki](https://github.com/visionmedia/superagent/wiki).
-
-## Running node tests
-
-Install dependencies:
-
-```shell
-$ npm install
-```
-Run em!
-
-```shell
-$ make test
-```
-
-## Running browser tests
-
-Install dependencies:
-
-```shell
-$ npm install
-```
-
-Start the test runner:
-
-```shell
-$ make test-browser-local
-```
-
-Visit `http://localhost:4000/__zuul` in your browser.
-
-Edit tests and refresh your browser. You do not have to restart the test runner.
-
-## License
-
-MIT
deleted file mode 100644
--- a/node_modules/alfred/node_modules/superagent/docs/head.html
+++ /dev/null
@@ -1,21 +0,0 @@
-<!DOCTYPE html>
-<html>
-  <head>
-    <title>SuperAgent - Ajax with less suck</title>
-    <link rel="stylesheet" href="docs/style.css">
-    <script src="docs/jquery.js"></script>
-    <script src="docs/jquery-ui.min.js"></script>
-    <script src="docs/highlight.js"></script>
-    <script src="docs/jquery.tocify.min.js"></script>
-    <script>
-      $(function(){
-        $('#menu').tocify({
-          selectors: 'h2',
-          hashGenerator: 'pretty'
-        });
-      });
-    </script>
-  </head>
-  <body>
-    <ul id="menu"></ul>
-    <div id="content">
deleted file mode 100644
--- a/node_modules/alfred/node_modules/superagent/docs/highlight.js
+++ /dev/null
@@ -1,17 +0,0 @@
-
-$(function(){
-  $('code').each(function(){
-    $(this).html(highlight($(this).text()));
-  });
-});
-
-function highlight(js) {
-  return js
-    .replace(/</g, '&lt;')
-    .replace(/>/g, '&gt;')
-    .replace(/('.*?')/gm, '<span class="string">$1</span>')
-    .replace(/(\d+\.\d+)/gm, '<span class="number">$1</span>')
-    .replace(/(\d+)/gm, '<span class="number">$1</span>')
-    .replace(/\bnew *(\w+)/gm, '<span class="keyword">new</span> <span class="init">$1</span>')
-    .replace(/\b(function|new|throw|return|var|if|else)\b/gm, '<span class="keyword">$1</span>')
-}
\ No newline at end of file
deleted file mode 100644
Binary files a/node_modules/alfred/node_modules/superagent/docs/images/bg.png and /dev/null differ
deleted file mode 100644
--- a/node_modules/alfred/node_modules/superagent/docs/index.md
+++ /dev/null
@@ -1,448 +0,0 @@
-
-# SuperAgent
-
- Super Agent is light-weight progressive ajax API crafted for flexibility, readability, and a low learning curve after being frustrated with many of the existing request APIs. It also works with Node.js!
-
-     request
-       .post('/api/pet')
-       .send({ name: 'Manny', species: 'cat' })
-       .set('X-API-Key', 'foobar')
-       .set('Accept', 'application/json')
-       .end(function(err, res){
-         if (err || !res.ok) {
-           alert('Oh no! error');
-         } else {
-           alert('yay got ' + JSON.stringify(res.body));
-         }
-       });
-
-## Test documentation
-
-  The following [test documentation](docs/test.html) was generated with [Mocha's](http://visionmedia.github.com/mocha) "doc" reporter, and directly reflects the test suite. This provides an additional source of documentation.
-
-## Request basics
-
- A request can be initiated by invoking the appropriate method on the `request` object, then calling `.end()` to send the request. For example a simple GET request:
-
-     request
-       .get('/search')
-       .end(function(err, res){
-
-       });
-
-  A method string may also be passed:
-
-    request('GET', '/search').end(callback);
-
- The __node__ client may also provide absolute urls:
-
-     request
-       .get('http://example.com/search')
-       .end(function(err, res){
-
-       });
-
-  __DELETE__, __HEAD__, __POST__, __PUT__ and other __HTTP__ verbs may also be used, simply change the method name:
-
-    request
-      .head('/favicon.ico')
-      .end(function(err, res){
-
-      });
-
-  __DELETE__ is a special-case, as it's a reserved word, so the method is named `.del()`:
-
-    request
-      .del('/user/1')
-      .end(function(err, res){
-
-      });
-
-  The HTTP method defaults to __GET__, so if you wish, the following is valid:
-
-     request('/search', function(err, res){
-
-     });
-
-## Setting header fields
-
-  Setting header fields is simple, invoke `.set()` with a field name and value:
-
-     request
-       .get('/search')
-       .set('API-Key', 'foobar')
-       .set('Accept', 'application/json')
-       .end(callback);
-
-  You may also pass an object to set several fields in a single call:
-
-     request
-       .get('/search')
-       .set({ 'API-Key': 'foobar', Accept: 'application/json' })
-       .end(callback);
-
-## GET requests
-
- The `.query()` method accepts objects, which when used with the __GET__ method will form a query-string. The following will produce the path `/search?query=Manny&range=1..5&order=desc`.
-
-     request
-       .get('/search')
-       .query({ query: 'Manny' })
-       .query({ range: '1..5' })
-       .query({ order: 'desc' })
-       .end(function(err, res){
-
-       });
-
-  Or as a single object:
-
-    request
-      .get('/search')
-      .query({ query: 'Manny', range: '1..5', order: 'desc' })
-      .end(function(err, res){
-
-      });
-
-  The `.query()` method accepts strings as well:
-
-      request
-        .get('/querystring')
-        .query('search=Manny&range=1..5')
-        .end(function(err, res){
-
-        });
-
-  Or joined:
-
-      request
-        .get('/querystring')
-        .query('search=Manny')
-        .query('range=1..5')
-        .end(function(err, res){
-
-        });
-
-## HEAD requests
-
-You can also use the `.query()` method for HEAD requests. The following will produce the path `/users?email=joe@smith.com`.
-
-      request
-        .head('/users')
-        .query({ email: 'joe@smith.com' })
-        .end(function(err, res){
-
-        });
-
-## POST / PUT requests
-
-  A typical JSON __POST__ request might look a little like the following, where we set the Content-Type header field appropriately, and "write" some data, in this case just a JSON string.
-
-      request.post('/user')
-        .set('Content-Type', 'application/json')
-        .send('{"name":"tj","pet":"tobi"}')
-        .end(callback)
-
-  Since JSON is undoubtably the most common, it's the _default_! The following example is equivalent to the previous.
-
-      request.post('/user')
-        .send({ name: 'tj', pet: 'tobi' })
-        .end(callback)
-
-  Or using multiple `.send()` calls:
-
-      request.post('/user')
-        .send({ name: 'tj' })
-        .send({ pet: 'tobi' })
-        .end(callback)
-
-  By default sending strings will set the Content-Type to `application/x-www-form-urlencoded`,
-  multiple calls will be concatenated with `&`, here resulting in `name=tj&pet=tobi`:
-
-      request.post('/user')
-        .send('name=tj')
-        .send('pet=tobi')
-        .end(callback);
-
-  SuperAgent formats are extensible, however by default "json" and "form" are supported. To send the data as `application/x-www-form-urlencoded` simply invoke `.type()` with "form", where the default is "json". This request will POST the body "name=tj&pet=tobi".
-
-      request.post('/user')
-        .type('form')
-        .send({ name: 'tj' })
-        .send({ pet: 'tobi' })
-        .end(callback)
-
- Note: "form" is aliased as "form-data" and "urlencoded" for backwards compat.
-
-## Setting the Content-Type
-
-  The obvious solution is to use the `.set()` method:
-
-     request.post('/user')
-       .set('Content-Type', 'application/json')
-
-  As a short-hand the `.type()` method is also available, accepting
-  the canonicalized MIME type name complete with type/subtype, or
-  simply the extension name such as "xml", "json", "png", etc:
-
-     request.post('/user')
-       .type('application/json')
-
-     request.post('/user')
-       .type('json')
-
-     request.post('/user')
-       .type('png')
-
-## Setting Accept
-
-In a similar fashion to the `.type()` method it is also possible to set the Accept header via the short hand method `.accept()`. Which references `request.types` as well allowing you to specify either the full canonicalized MIME type name as type/subtype, or the extension suffix form as "xml", "json", "png", etc for convenience:
-
-     request.get('/user')
-       .accept('application/json')
-
-     request.get('/user')
-       .accept('json')
-
-     request.post('/user')
-       .accept('png')
-
-## Query strings
-
-  `res.query(obj)` is a method which may be used to build up a query-string. For example populating `?format=json&dest=/login` on a __POST__:
-
-    request
-      .post('/')
-      .query({ format: 'json' })
-      .query({ dest: '/login' })
-      .send({ post: 'data', here: 'wahoo' })
-      .end(callback);
-
-## Parsing response bodies
-
-  Super Agent will parse known response-body data for you, currently supporting _application/x-www-form-urlencoded_, _application/json_, and _multipart/form-data_.
-
-### JSON / Urlencoded
-
-  The property `res.body` is the parsed object, for example if a request responded with the JSON string '{"user":{"name":"tobi"}}', `res.body.user.name` would be "tobi". Likewise the x-www-form-urlencoded value of "user[name]=tobi" would yield the same result.
-
-### Multipart
-
-  The Node client supports _multipart/form-data_ via the [Formidable](https://github.com/felixge/node-formidable) module. When parsing multipart responses, the object `res.files` is also available to you. Suppose for example a request responds with the following multipart body:
-
-    --whoop
-    Content-Disposition: attachment; name="image"; filename="tobi.png"
-    Content-Type: image/png
-
-    ... data here ...
-    --whoop
-    Content-Disposition: form-data; name="name"
-    Content-Type: text/plain
-
-    Tobi
-    --whoop--
-
-  You would have the values `res.body.name` provided as "Tobi", and `res.files.image` as a `File` object containing the path on disk, filename, and other properties.
-
-## Response properties
-
-  Many helpful flags and properties are set on the `Response` object, ranging from the response text, parsed response body, header fields, status flags and more.
-
-### Response text
-
-  The `res.text` property contains the unparsed response body string. This
-  property is always present for the client API, and only when the mime type
-  matches "text/*", "*/json", or "x-www-form-urlencoding" by default for node. The
-  reasoning is to conserve memory, as buffering text of large bodies such as multipart files or images is extremely inefficient.
-
-  To force buffering see the "Buffering responses" section.
-
-### Response body
-
-  Much like SuperAgent can auto-serialize request data, it can also automatically parse it. When a parser is defined for the Content-Type, it is parsed, which by default includes "application/json" and "application/x-www-form-urlencoded". The parsed object is then available via `res.body`.
-
-### Response header fields
-
-  The `res.header` contains an object of parsed header fields, lowercasing field names much like node does. For example `res.header['content-length']`.
-
-### Response Content-Type
-
-  The Content-Type response header is special-cased, providing `res.type`, which is void of the charset (if any). For example the Content-Type of "text/html; charset=utf8" will provide "text/html" as `res.type`, and the `res.charset` property would then contain "utf8".
-
-### Response status
-
-  The response status flags help determine if the request was a success, among other useful information, making SuperAgent ideal for interacting with RESTful web services. These flags are currently defined as:
-
-     var type = status / 100 | 0;
-
-     // status / class
-     res.status = status;
-     res.statusType = type;
-
-     // basics
-     res.info = 1 == type;
-     res.ok = 2 == type;
-     res.clientError = 4 == type;
-     res.serverError = 5 == type;
-     res.error = 4 == type || 5 == type;
-
-     // sugar
-     res.accepted = 202 == status;
-     res.noContent = 204 == status || 1223 == status;
-     res.badRequest = 400 == status;
-     res.unauthorized = 401 == status;
-     res.notAcceptable = 406 == status;
-     res.notFound = 404 == status;
-     res.forbidden = 403 == status;
-
-## Aborting requests
-
-  To abort requests simply invoke the `req.abort()` method.
-
-## Request timeouts
-
-  A timeout can be applied by invoking `req.timeout(ms)`, after which an error
-  will be triggered. To differentiate between other errors the `err.timeout` property
-  is set to the `ms` value. __NOTE__ that this is a timeout applied to the request
-  and all subsequent redirects, not per request.
-
-## Basic authentication
-
-  Basic auth is currently provided by the _node_ client in two forms, first via the URL as "user:pass":
-
-    request.get('http://tobi:learnboost@local').end(callback);
-
-  As well as via the `.auth()` method:
-
-    request
-      .get('http://local')
-      .auth('tobi', 'learnboost')
-      .end(callback);
-
-## Following redirects
-
-  By default up to 5 redirects will be followed, however you may specify this with the `res.redirects(n)` method:
-
-    request
-      .get('/some.png')
-      .redirects(2)
-      .end(callback);
-
-## Piping data
-
-  The Node client allows you to pipe data to and from the request. For example piping a file's contents as the request:
-
-    var request = require('superagent')
-      , fs = require('fs');
-
-    var stream = fs.createReadStream('path/to/my.json');
-    var req = request.post('/somewhere');
-    req.type('json');
-    stream.pipe(req);
-
-  Or piping the response to a file:
-
-    var request = require('superagent')
-      , fs = require('fs');
-
-    var stream = fs.createWriteStream('path/to/my.json');
-    var req = request.get('/some.json');
-    req.pipe(stream);
-
-## Multipart requests
-
-  Super Agent is also great for _building_ multipart requests for which it provides methods `.attach()` and `.field()`.
-
-### Attaching files
-
-  As mentioned a higher-level API is also provided, in the form of `.attach(name, [path], [filename])` and `.field(name, value)`. Attaching several files is simple, you can also provide a custom filename for the attachment, otherwise the basename of the attached file is used.
-
-    request
-      .post('/upload')
-      .attach('avatar', 'path/to/tobi.png', 'user.png')
-      .attach('image', 'path/to/loki.png')
-      .attach('file', 'path/to/jane.png')
-      .end(callback);
-
-### Field values
-
-  Much like form fields in HTML, you can set field values with the `.field(name, value)` method. Suppose you want to upload a few images with your name and email, your request might look something like this:
-
-     request
-       .post('/upload')
-       .field('user[name]', 'Tobi')
-       .field('user[email]', 'tobi@learnboost.com')
-       .attach('image', 'path/to/tobi.png')
-       .end(callback);
-
-## Compression
-
-  The node client supports compressed responses, best of all, you don't have to do anything! It just works.
-
-## Buffering responses
-
-  To force buffering of response bodies as `res.text` you may invoke `req.buffer()`. To undo the default of buffering for text responses such
-  as "text/plain", "text/html" etc you may invoke `req.buffer(false)`.
-
-  When buffered the `res.buffered` flag is provided, you may use this to
-  handle both buffered and unbuffered responses in the same callback.
-
-## CORS
-
-  The `.withCredentials()` method enables the ability to send cookies
-  from the origin, however only when "Access-Control-Allow-Origin" is
-  _not_ a wildcard ("*"), and "Access-Control-Allow-Credentials" is "true".
-
-    request
-      .get('http://localhost:4001/')
-      .withCredentials()
-      .end(function(err, res){
-        assert(200 == res.status);
-        assert('tobi' == res.text);
-        next();
-      })
-
-## Error handling
-
-Your callback function will always be passed two arguments: error and response. If no error occurred, the first argument will be null:
-
-    request
-     .post('/upload')
-     .attach('image', 'path/to/tobi.png')
-     .end(function(err, res){
-
-     });
-
-     An "error" event is also emitted, with you can listen for:
-
-    request
-      .post('/upload')
-      .attach('image', 'path/to/tobi.png')
-      .on('error', handle)
-      .end(function(err, res){
-
-      });
-
-  Note that a 4xx or 5xx response with super agent **are** considered an error by default. For example if you get a 500 or 403 response, this status information will be available via `err.status`. Errors from such responses also contain an `err.response` field with all of the properties mentioned in "Response properties". The library behaves in this way to handle the common case of wanting success responses and treating HTTP error status codes as errors while still allowing for custom logic around specific error conditions.
-
-  Network failures, timeouts, and other errors that produce no response will contain no `err.status` or `err.response` fields.
-
-  If you wish to handle 404 or other HTTP error responses, you can query the `err.status` property.
-  When an HTTP error occurs (4xx or 5xx response) the `res.error` property is an `Error` object,
-  this allows you to perform checks such as:
-
-    if (err && err.status === 404) {
-      alert('oh no ' + res.body.message);
-    }
-    else if (err) {
-      // all other error types we handle generically
-    }
-
-## Generator support
-
-Superagent now supports easier control flow using generators. By using a generator control flow
-like [co](https://github.com/tj/co) or a web framework like [koa](https://github.com/koajs/koa),
-you can `yield` on any superagent method:
-
-    var res = yield request
-      .get('http://local')
-      .auth('tobi', 'learnboost')
deleted file mode 100644
--- a/node_modules/alfred/node_modules/superagent/docs/jquery-ui.min.js
+++ /dev/null
@@ -1,6 +0,0 @@
-/*! jQuery UI - v1.11.4 - 2015-11-20
-* http://jqueryui.com
-* Includes: widget.js
-* Copyright jQuery Foundation and other contributors; Licensed MIT */
-
-(function(e){"function"==typeof define&&define.amd?define(["jquery"],e):e(jQuery)})(function(e){var t=0,i=Array.prototype.slice;e.cleanData=function(t){return function(i){var s,n,a;for(a=0;null!=(n=i[a]);a++)try{s=e._data(n,"events"),s&&s.remove&&e(n).triggerHandler("remove")}catch(o){}t(i)}}(e.cleanData),e.widget=function(t,i,s){var n,a,o,r,h={},l=t.split(".")[0];return t=t.split(".")[1],n=l+"-"+t,s||(s=i,i=e.Widget),e.expr[":"][n.toLowerCase()]=function(t){return!!e.data(t,n)},e[l]=e[l]||{},a=e[l][t],o=e[l][t]=function(e,t){return this._createWidget?(arguments.length&&this._createWidget(e,t),void 0):new o(e,t)},e.extend(o,a,{version:s.version,_proto:e.extend({},s),_childConstructors:[]}),r=new i,r.options=e.widget.extend({},r.options),e.each(s,function(t,s){return e.isFunction(s)?(h[t]=function(){var e=function(){return i.prototype[t].apply(this,arguments)},n=function(e){return i.prototype[t].apply(this,e)};return function(){var t,i=this._super,a=this._superApply;return this._super=e,this._superApply=n,t=s.apply(this,arguments),this._super=i,this._superApply=a,t}}(),void 0):(h[t]=s,void 0)}),o.prototype=e.widget.extend(r,{widgetEventPrefix:a?r.widgetEventPrefix||t:t},h,{constructor:o,namespace:l,widgetName:t,widgetFullName:n}),a?(e.each(a._childConstructors,function(t,i){var s=i.prototype;e.widget(s.namespace+"."+s.widgetName,o,i._proto)}),delete a._childConstructors):i._childConstructors.push(o),e.widget.bridge(t,o),o},e.widget.extend=function(t){for(var s,n,a=i.call(arguments,1),o=0,r=a.length;r>o;o++)for(s in a[o])n=a[o][s],a[o].hasOwnProperty(s)&&void 0!==n&&(t[s]=e.isPlainObject(n)?e.isPlainObject(t[s])?e.widget.extend({},t[s],n):e.widget.extend({},n):n);return t},e.widget.bridge=function(t,s){var n=s.prototype.widgetFullName||t;e.fn[t]=function(a){var o="string"==typeof a,r=i.call(arguments,1),h=this;return o?this.each(function(){var i,s=e.data(this,n);return"instance"===a?(h=s,!1):s?e.isFunction(s[a])&&"_"!==a.charAt(0)?(i=s[a].apply(s,r),i!==s&&void 0!==i?(h=i&&i.jquery?h.pushStack(i.get()):i,!1):void 0):e.error("no such method '"+a+"' for "+t+" widget instance"):e.error("cannot call methods on "+t+" prior to initialization; "+"attempted to call method '"+a+"'")}):(r.length&&(a=e.widget.extend.apply(null,[a].concat(r))),this.each(function(){var t=e.data(this,n);t?(t.option(a||{}),t._init&&t._init()):e.data(this,n,new s(a,this))})),h}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(i,s){s=e(s||this.defaultElement||this)[0],this.element=e(s),this.uuid=t++,this.eventNamespace="."+this.widgetName+this.uuid,this.bindings=e(),this.hoverable=e(),this.focusable=e(),s!==this&&(e.data(s,this.widgetFullName,this),this._on(!0,this.element,{remove:function(e){e.target===s&&this.destroy()}}),this.document=e(s.style?s.ownerDocument:s.document||s),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this.options=e.widget.extend({},this.options,this._getCreateOptions(),i),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:e.noop,_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled "+"ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:e.noop,widget:function(){return this.element},option:function(t,i){var s,n,a,o=t;if(0===arguments.length)return e.widget.extend({},this.options);if("string"==typeof t)if(o={},s=t.split("."),t=s.shift(),s.length){for(n=o[t]=e.widget.extend({},this.options[t]),a=0;s.length-1>a;a++)n[s[a]]=n[s[a]]||{},n=n[s[a]];if(t=s.pop(),1===arguments.length)return void 0===n[t]?null:n[t];n[t]=i}else{if(1===arguments.length)return void 0===this.options[t]?null:this.options[t];o[t]=i}return this._setOptions(o),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return this.options[e]=t,"disabled"===e&&(this.widget().toggleClass(this.widgetFullName+"-disabled",!!t),t&&(this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus"))),this},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_on:function(t,i,s){var n,a=this;"boolean"!=typeof t&&(s=i,i=t,t=!1),s?(i=n=e(i),this.bindings=this.bindings.add(i)):(s=i,i=this.element,n=this.widget()),e.each(s,function(s,o){function r(){return t||a.options.disabled!==!0&&!e(this).hasClass("ui-state-disabled")?("string"==typeof o?a[o]:o).apply(a,arguments):void 0}"string"!=typeof o&&(r.guid=o.guid=o.guid||r.guid||e.guid++);var h=s.match(/^([\w:-]*)\s*(.*)$/),l=h[1]+a.eventNamespace,u=h[2];u?n.delegate(u,l,r):i.bind(l,r)})},_off:function(t,i){i=(i||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,t.unbind(i).undelegate(i),this.bindings=e(this.bindings.not(t).get()),this.focusable=e(this.focusable.not(t).get()),this.hoverable=e(this.hoverable.not(t).get())},_delay:function(e,t){function i(){return("string"==typeof e?s[e]:e).apply(s,arguments)}var s=this;return setTimeout(i,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){e(t.currentTarget).addClass("ui-state-hover")},mouseleave:function(t){e(t.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){e(t.currentTarget).addClass("ui-state-focus")},focusout:function(t){e(t.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(t,i,s){var n,a,o=this.options[t];if(s=s||{},i=e.Event(i),i.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),i.target=this.element[0],a=i.originalEvent)for(n in a)n in i||(i[n]=a[n]);return this.element.trigger(i,s),!(e.isFunction(o)&&o.apply(this.element[0],[i].concat(s))===!1||i.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},function(t,i){e.Widget.prototype["_"+t]=function(s,n,a){"string"==typeof n&&(n={effect:n});var o,r=n?n===!0||"number"==typeof n?i:n.effect||i:t;n=n||{},"number"==typeof n&&(n={duration:n}),o=!e.isEmptyObject(n),n.complete=a,n.delay&&s.delay(n.delay),o&&e.effects&&e.effects.effect[r]?s[t](n):r!==t&&s[r]?s[r](n.duration,n.easing,a):s.queue(function(i){e(this)[t](),a&&a.call(s[0]),i()})}}),e.widget});
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/node_modules/superagent/docs/jquery.js
+++ /dev/null
@@ -1,4 +0,0 @@
-/*! jQuery v1.7 jquery.com | jquery.org/license */
-(function(a,b){function cA(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cx(a){if(!cm[a]){var b=c.body,d=f("<"+a+">").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){cn||(cn=c.createElement("iframe"),cn.frameBorder=cn.width=cn.height=0),b.appendChild(cn);if(!co||!cn.createElement)co=(cn.contentWindow||cn.contentDocument).document,co.write((c.compatMode==="CSS1Compat"?"<!doctype html>":"")+"<html><body>"),co.close();d=co.createElement(a),co.body.appendChild(d),e=f.css(d,"display"),b.removeChild(cn)}cm[a]=e}return cm[a]}function cw(a,b){var c={};f.each(cs.concat.apply([],cs.slice(0,b)),function(){c[this]=a});return c}function cv(){ct=b}function cu(){setTimeout(cv,0);return ct=f.now()}function cl(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ck(){try{return new a.XMLHttpRequest}catch(b){}}function ce(a,c){a.dataFilter&&(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g<i;g++){if(g===1)for(h in a.converters)typeof h=="string"&&(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&&l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&&(n=o);break}}}}!n&&!p&&f.error("No conversion from "+m.replace(" "," to ")),n!==!0&&(c=n?n(c):p(o(c)))}}return c}function cd(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&&(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&&(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&&e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&&f.unshift(j);return d[j]}}function cc(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bG.test(a)?d(a,e):cc(a+"["+(typeof e=="object"||f.isArray(e)?b:"")+"]",e,c,d)});else if(!c&&b!=null&&typeof b=="object")for(var e in b)cc(a+"["+e+"]",b[e],c,d);else d(a,b)}function cb(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&&((g[d]?a:e||(e={}))[d]=c[d]);e&&f.extend(!0,a,e)}function ca(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bV,l;for(;i<j&&(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&&(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=ca(a,c,d,e,l,g)));(k||!l)&&!g["*"]&&(l=ca(a,c,d,e,"*",g));return l}function b_(a){return function(b,c){typeof b!="string"&&(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bR),e=0,g=d.length,h,i,j;for(;e<g;e++)h=d[e],j=/^\+/.test(h),j&&(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function bE(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?bz:bA;if(d>0){c!=="border"&&f.each(e,function(){c||(d-=parseFloat(f.css(a,"padding"+this))||0),c==="margin"?d+=parseFloat(f.css(a,c+this))||0:d-=parseFloat(f.css(a,"border"+this+"Width"))||0});return d+"px"}d=bB(a,b,b);if(d<0||d==null)d=a.style[b]||0;d=parseFloat(d)||0,c&&f.each(e,function(){d+=parseFloat(f.css(a,"padding"+this))||0,c!=="padding"&&(d+=parseFloat(f.css(a,"border"+this+"Width"))||0),c==="margin"&&(d+=parseFloat(f.css(a,c+this))||0)});return d+"px"}function br(a,b){b.src?f.ajax({url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bi,"/*$0*/")),b.parentNode&&b.parentNode.removeChild(b)}function bq(a){var b=(a.nodeName||"").toLowerCase();b==="input"?bp(a):b!=="script"&&typeof a.getElementsByTagName!="undefined"&&f.grep(a.getElementsByTagName("input"),bp)}function bp(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bo(a){return typeof a.getElementsByTagName!="undefined"?a.getElementsByTagName("*"):typeof a.querySelectorAll!="undefined"?a.querySelectorAll("*"):[]}function bn(a,b){var c;if(b.nodeType===1){b.clearAttributes&&b.clearAttributes(),b.mergeAttributes&&b.mergeAttributes(a),c=b.nodeName.toLowerCase();if(c==="object")b.outerHTML=a.outerHTML;else if(c!=="input"||a.type!=="checkbox"&&a.type!=="radio"){if(c==="option")b.selected=a.defaultSelected;else if(c==="input"||c==="textarea")b.defaultValue=a.defaultValue}else a.checked&&(b.defaultChecked=b.checked=a.checked),b.value!==a.value&&(b.value=a.value);b.removeAttribute(f.expando)}}function bm(a,b){if(b.nodeType===1&&!!f.hasData(a)){var c,d,e,g=f._data(a),h=f._data(b,g),i=g.events;if(i){delete h.handle,h.events={};for(c in i)for(d=0,e=i[c].length;d<e;d++)f.event.add(b,c+(i[c][d].namespace?".":"")+i[c][d].namespace,i[c][d],i[c][d].data)}h.data&&(h.data=f.extend({},h.data))}}function bl(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function X(a){var b=Y.split(" "),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}function W(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(R.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)>=0===c})}function V(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function N(){return!0}function M(){return!1}function n(a,b,c){var d=b+"defer",e=b+"queue",g=b+"mark",h=f._data(a,d);h&&(c==="queue"||!f._data(a,e))&&(c==="mark"||!f._data(a,g))&&setTimeout(function(){!f._data(a,e)&&!f._data(a,g)&&(f.removeData(a,d,!0),h.fire())},0)}function m(a){for(var b in a){if(b==="data"&&f.isEmptyObject(a[b]))continue;if(b!=="toJSON")return!1}return!0}function l(a,c,d){if(d===b&&a.nodeType===1){var e="data-"+c.replace(k,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNumeric(d)?parseFloat(d):j.test(d)?f.parseJSON(d):d}catch(g){}f.data(a,c,d)}else d=b}return d}function h(a){var b=g[a]={},c,d;a=a.split(/\s+/);for(c=0,d=a.length;c<d;c++)b[a[c]]=!0;return b}var c=a.document,d=a.navigator,e=a.location,f=function(){function K(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(K,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/\d/,n=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,o=/^[\],:{}\s]*$/,p=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,q=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,r=/(?:^|:|,)(?:\s*\[)+/g,s=/(webkit)[ \/]([\w.]+)/,t=/(opera)(?:.*version)?[ \/]([\w.]+)/,u=/(msie) ([\w.]+)/,v=/(mozilla)(?:.*? rv:([\w.]+))?/,w=/-([a-z]|[0-9])/ig,x=/^-ms-/,y=function(a,b){return(b+"").toUpperCase()},z=d.userAgent,A,B,C,D=Object.prototype.toString,E=Object.prototype.hasOwnProperty,F=Array.prototype.push,G=Array.prototype.slice,H=String.prototype.trim,I=Array.prototype.indexOf,J={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&&!d&&c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="<"||a.charAt(a.length-1)!==">"||a.length<3?g=i.exec(a):g=[null,a,null];if(g&&(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=n.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&&h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&&(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.7",length:0,size:function(){return this.length},toArray:function(){return G.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?F.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&&(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),B.add(a);return this},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(G.apply(this,arguments),"slice",G.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:F,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&&(l=i,i=arguments[1]||{},j=2),typeof i!="object"&&!e.isFunction(i)&&(i={}),k===j&&(i=this,--j);for(;j<k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&&f&&(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&&e.isArray(d)?d:[]):h=d&&e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&&(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&&(a.$=g),b&&a.jQuery===e&&(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&&!--e.readyWait||a!==!0&&!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&&--e.readyWait>0)return;B.fireWith(c,[e]),e.fn.trigger&&e(c).trigger("ready").unbind("ready")}},bindReady:function(){if(!B){B=e.Callbacks("once memory");if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",C,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",C),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&&b&&K()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a&&typeof a=="object"&&"setInterval"in a},isNumeric:function(a){return a!=null&&m.test(a)&&!isNaN(a)},type:function(a){return a==null?String(a):J[D.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&&!E.call(a,"constructor")&&!E.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||E.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw a},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);if(o.test(b.replace(p,"@").replace(q,"]").replace(r,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&&e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&&j.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(x,"ms-").replace(w,y)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g<h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g<h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:H?function(a){return a==null?"":H.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?F.call(c,a):e.merge(c,a)}return c},inArray:function(a,b,c){var d;if(b){if(I)return I.call(b,a,c);d=b.length,c=c?c<0?Math.max(0,d+c):c:0;for(;c<d;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e<f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f<g;f++)e=!!b(a[f],f),c!==e&&d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&&typeof j=="number"&&(j>0&&a[0]&&a[j-1]||j===0||e.isArray(a));if(k)for(;i<j;i++)f=c(a[i],i,d),f!=null&&(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&&(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=G.call(arguments,2),g=function(){return a.apply(c,f.concat(G.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h){var i=a.length;if(typeof c=="object"){for(var j in c)e.access(a,j,c[j],f,g,d);return a}if(d!==b){f=!h&&f&&e.isFunction(d);for(var k=0;k<i;k++)g(a[k],c,f?d.call(a[k],k,g(a[k],c)):d,h);return a}return i?g(a[0],c):b},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=s.exec(a)||t.exec(a)||u.exec(a)||a.indexOf("compatible")<0&&v.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&&f instanceof e&&!(f instanceof a)&&(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){J["[object "+b+"]"]=b.toLowerCase()}),A=e.uaMatch(z),A.browser&&(e.browser[A.browser]=!0,e.browser.version=A.version),e.browser.webkit&&(e.browser.safari=!0),j.test(" ")&&(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?C=function(){c.removeEventListener("DOMContentLoaded",C,!1),e.ready()}:c.attachEvent&&(C=function(){c.readyState==="complete"&&(c.detachEvent("onreadystatechange",C),e.ready())}),typeof define=="function"&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return e});return e}(),g={};f.Callbacks=function(a){a=a?g[a]||h(a):{};var c=[],d=[],e,i,j,k,l,m=function(b){var d,e,g,h,i;for(d=0,e=b.length;d<e;d++)g=b[d],h=f.type(g),h==="array"?m(g):h==="function"&&(!a.unique||!o.has(g))&&c.push(g)},n=function(b,f){f=f||[],e=!a.memory||[b,f],i=!0,l=j||0,j=0,k=c.length;for(;c&&l<k;l++)if(c[l].apply(b,f)===!1&&a.stopOnFalse){e=!0;break}i=!1,c&&(a.once?e===!0?o.disable():c=[]:d&&d.length&&(e=d.shift(),o.fireWith(e[0],e[1])))},o={add:function(){if(c){var a=c.length;m(arguments),i?k=c.length:e&&e!==!0&&(j=a,n(e[0],e[1]))}return this},remove:function(){if(c){var b=arguments,d=0,e=b.length;for(;d<e;d++)for(var f=0;f<c.length;f++)if(b[d]===c[f]){i&&f<=k&&(k--,f<=l&&l--),c.splice(f--,1);if(a.unique)break}}return this},has:function(a){if(c){var b=0,d=c.length;for(;b<d;b++)if(a===c[b])return!0}return!1},empty:function(){c=[];return this},disable:function(){c=d=e=b;return this},disabled:function(){return!c},lock:function(){d=b,(!e||e===!0)&&o.disable();return this},locked:function(){return!d},fireWith:function(b,c){d&&(i?a.once||d.push([b,c]):(!a.once||!e)&&n(b,c));return this},fire:function(){o.fireWith(this,arguments);return this},fired:function(){return!!e}};return o};var i=[].slice;f.extend({Deferred:function(a){var b=f.Callbacks("once memory"),c=f.Callbacks("once memory"),d=f.Callbacks("memory"),e="pending",g={resolve:b,reject:c,notify:d},h={done:b.add,fail:c.add,progress:d.add,state:function(){return e},isResolved:b.fired,isRejected:c.fired,then:function(a,b,c){i.done(a).fail(b).progress(c);return this},always:function(){return i.done.apply(i,arguments).fail.apply(i,arguments)},pipe:function(a,b,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[b,"reject"],progress:[c,"notify"]},function(a,b){var c=b[0],e=b[1],g;f.isFunction(c)?i[a](function(){g=c.apply(this,arguments),g&&f.isFunction(g.promise)?g.promise().then(d.resolve,d.reject,d.notify):d[e+"With"](this===i?d:this,[g])}):i[a](d[e])})}).promise()},promise:function(a){if(a==null)a=h;else for(var b in h)a[b]=h[b];return a}},i=h.promise({}),j;for(j in g)i[j]=g[j].fire,i[j+"With"]=g[j].fireWith;i.done(function(){e="resolved"},c.disable,d.lock).fail(function(){e="rejected"},b.disable,d.lock),a&&a.call(i,i);return i},when:function(a){function m(a){return function(b){e[a]=arguments.length>1?i.call(arguments,0):b,j.notifyWith(k,e)}}function l(a){return function(c){b[a]=arguments.length>1?i.call(arguments,0):c,--g||j.resolveWith(j,b)}}var b=i.call(arguments,0),c=0,d=b.length,e=Array(d),g=d,h=d,j=d<=1&&a&&f.isFunction(a.promise)?a:f.Deferred(),k=j.promise();if(d>1){for(;c<d;c++)b[c]&&b[c].promise&&f.isFunction(b[c].promise)?b[c].promise().then(l(c),j.reject,m(c)):--g;g||j.resolveWith(j,b)}else j!==a&&j.resolveWith(j,d?[a]:[]);return k}}),f.support=function(){var a=c.createElement("div"),b=c.documentElement,d,e,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u;a.setAttribute("className","t"),a.innerHTML="   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/><nav></nav>",d=a.getElementsByTagName("*"),e=a.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=a.getElementsByTagName("input")[0],k={leadingWhitespace:a.firstChild.nodeType===3,tbody:!a.getElementsByTagName("tbody").length,htmlSerialize:!!a.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,unknownElems:!!a.getElementsByTagName("nav").length,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:a.className!=="t",enctype:!!c.createElement("form").enctype,submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0},i.checked=!0,k.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,k.optDisabled=!h.disabled;try{delete a.test}catch(v){k.deleteExpando=!1}!a.addEventListener&&a.attachEvent&&a.fireEvent&&(a.attachEvent("onclick",function(){k.noCloneEvent=!1}),a.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),k.radioValue=i.value==="t",i.setAttribute("checked","checked"),a.appendChild(i),l=c.createDocumentFragment(),l.appendChild(a.lastChild),k.checkClone=l.cloneNode(!0).cloneNode(!0).lastChild.checked,a.innerHTML="",a.style.width=a.style.paddingLeft="1px",m=c.getElementsByTagName("body")[0],o=c.createElement(m?"div":"body"),p={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},m&&f.extend(p,{position:"absolute",left:"-999px",top:"-999px"});for(t in p)o.style[t]=p[t];o.appendChild(a),n=m||b,n.insertBefore(o,n.firstChild),k.appendChecked=i.checked,k.boxModel=a.offsetWidth===2,"zoom"in a.style&&(a.style.display="inline",a.style.zoom=1,k.inlineBlockNeedsLayout=a.offsetWidth===2,a.style.display="",a.innerHTML="<div style='width:4px;'></div>",k.shrinkWrapBlocks=a.offsetWidth!==2),a.innerHTML="<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>",q=a.getElementsByTagName("td"),u=q[0].offsetHeight===0,q[0].style.display="",q[1].style.display="none",k.reliableHiddenOffsets=u&&q[0].offsetHeight===0,a.innerHTML="",c.defaultView&&c.defaultView.getComputedStyle&&(j=c.createElement("div"),j.style.width="0",j.style.marginRight="0",a.appendChild(j),k.reliableMarginRight=(parseInt((c.defaultView.getComputedStyle(j,null)||{marginRight:0}).marginRight,10)||0)===0);if(a.attachEvent)for(t in{submit:1,change:1,focusin:1})s="on"+t,u=s in a,u||(a.setAttribute(s,"return;"),u=typeof a[s]=="function"),k[t+"Bubbles"]=u;f(function(){var a,b,d,e,g,h,i=1,j="position:absolute;top:0;left:0;width:1px;height:1px;margin:0;",l="visibility:hidden;border:0;",n="style='"+j+"border:5px solid #000;padding:0;'",p="<div "+n+"><div></div></div>"+"<table "+n+" cellpadding='0' cellspacing='0'>"+"<tr><td></td></tr></table>";m=c.getElementsByTagName("body")[0];!m||(a=c.createElement("div"),a.style.cssText=l+"width:0;height:0;position:static;top:0;margin-top:"+i+"px",m.insertBefore(a,m.firstChild),o=c.createElement("div"),o.style.cssText=j+l,o.innerHTML=p,a.appendChild(o),b=o.firstChild,d=b.firstChild,g=b.nextSibling.firstChild.firstChild,h={doesNotAddBorder:d.offsetTop!==5,doesAddBorderForTableAndCells:g.offsetTop===5},d.style.position="fixed",d.style.top="20px",h.fixedPosition=d.offsetTop===20||d.offsetTop===15,d.style.position=d.style.top="",b.style.overflow="hidden",b.style.position="relative",h.subtractsBorderForOverflowNotVisible=d.offsetTop===-5,h.doesNotIncludeMarginInBodyOffset=m.offsetTop!==i,m.removeChild(a),o=a=null,f.extend(k,h))}),o.innerHTML="",n.removeChild(o),o=l=g=h=m=j=a=i=null;return k}(),f.boxModel=f.support.boxModel;var j=/^(?:\{.*\}|\[.*\])$/,k=/([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&&!m(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i,j=f.expando,k=typeof c=="string",l=a.nodeType,m=l?f.cache:a,n=l?a[f.expando]:a[f.expando]&&f.expando,o=c==="events";if((!n||!m[n]||!o&&!e&&!m[n].data)&&k&&d===b)return;n||(l?a[f.expando]=n=++f.uuid:n=f.expando),m[n]||(m[n]={},l||(m[n].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?m[n]=f.extend(m[n],c):m[n].data=f.extend(m[n].data,c);g=h=m[n],e||(h.data||(h.data={}),h=h.data),d!==b&&(h[f.camelCase(c)]=d);if(o&&!h[c])return g.events;k?(i=h[c],i==null&&(i=h[f.camelCase(c)])):i=h;return i}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e,g,h=f.expando,i=a.nodeType,j=i?f.cache:a,k=i?a[f.expando]:f.expando;if(!j[k])return;if(b){d=c?j[k]:j[k].data;if(d){f.isArray(b)?b=b:b in d?b=[b]:(b=f.camelCase(b),b in d?b=[b]:b=b.split(" "));for(e=0,g=b.length;e<g;e++)delete d[b[e]];if(!(c?m:f.isEmptyObject)(d))return}}if(!c){delete j[k].data;if(!m(j[k]))return}f.support.deleteExpando||!j.setInterval?delete j[k]:j[k]=null,i&&(f.support.deleteExpando?delete a[f.expando]:a.removeAttribute?a.removeAttribute(f.expando):a[f.expando]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&&a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d,e,g,h=null;if(typeof a=="undefined"){if(this.length){h=f.data(this[0]);if(this[0].nodeType===1&&!f._data(this[0],"parsedAttrs")){e=this[0].attributes;for(var i=0,j=e.length;i<j;i++)g=e[i].name,g.indexOf("data-")===0&&(g=f.camelCase(g.substring(5)),l(this[0],g,h[g]));f._data(this[0],"parsedAttrs",!0)}}return h}if(typeof a=="object")return this.each(function(){f.data(this,a)});d=a.split("."),d[1]=d[1]?"."+d[1]:"";if(c===b){h=this.triggerHandler("getData"+d[1]+"!",[d[0]]),h===b&&this.length&&(h=f.data(this[0],a),h=l(this[0],a,h));return h===b&&d[1]?this.data(d[0]):h}return this.each(function(){var b=f(this),e=[d[0],c];b.triggerHandler("setData"+d[1]+"!",e),f.data(this,a,c),b.triggerHandler("changeData"+d[1]+"!",e)})},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,b){a&&(b=(b||"fx")+"mark",f._data(a,b,(f._data(a,b)||0)+1))},_unmark:function(a,b,c){a!==!0&&(c=b,b=a,a=!1);if(b){c=c||"fx";var d=c+"mark",e=a?0:(f._data(b,d)||1)-1;e?f._data(b,d,e):(f.removeData(b,d,!0),n(b,c,"mark"))}},queue:function(a,b,c){var d;if(a){b=(b||"fx")+"queue",d=f._data(a,b),c&&(!d||f.isArray(c)?d=f._data(a,b,f.makeArray(c)):d.push(c));return d||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e={};d==="inprogress"&&(d=c.shift()),d&&(b==="fx"&&c.unshift("inprogress"),f._data(a,b+".run",e),d.call(a,function(){f.dequeue(a,b)},e)),c.length||(f.removeData(a,b+"queue "+b+".run",!0),n(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){typeof a!="string"&&(c=a,a="fx");if(c===b)return f.queue(this[0],a);return this.each(function(){var b=f.queue(this,a,c);a==="fx"&&b[0]!=="inprogress"&&f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&&(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&&f.data(e[g],i,f.Callbacks("once memory"),!0))h++,l.add(m);m();return d.promise()}});var o=/[\n\t\r]/g,p=/\s+/,q=/\r/g,r=/^(?:button|input)$/i,s=/^(?:button|input|object|select|textarea)$/i,t=/^a(?:rea)?$/i,u=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,v=f.support.getSetAttribute,w,x,y;f.fn.extend({attr:function(a,b){return f.access(this,a,b,!0,f.attr)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,a,b,!0,f.prop)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&&typeof a=="string"){b=a.split(p);for(c=0,d=this.length;c<d;c++){e=this[c];if(e.nodeType===1)if(!e.className&&b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h<i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&&typeof a=="string"||a===b){c=(a||"").split(p);for(d=0,e=this.length;d<e;d++){g=this[d];if(g.nodeType===1&&g.className)if(a){h=(" "+g.className+" ").replace(o," ");for(i=0,j=c.length;i<j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(p);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&&f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ",c=0,d=this.length;for(;c<d;c++)if(this[c].nodeType===1&&(" "+this[c].className+" ").replace(o," ").indexOf(b)>-1)return!0;return!1},val:function(a){var c,d,e,g=this[0];if(!arguments.length){if(g){c=f.valHooks[g.nodeName.toLowerCase()]||f.valHooks[g.type];if(c&&"get"in c&&(d=c.get(g,"value"))!==b)return d;d=g.value;return typeof d=="string"?d.replace(q,""):d==null?"":d}return b}e=f.isFunction(a);return this.each(function(d){var g=f(this),h;if(this.nodeType===1){e?h=a.call(this,d,g.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&&(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.nodeName.toLowerCase()]||f.valHooks[this.type];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c,d,e,g=a.selectedIndex,h=[],i=a.options,j=a.type==="select-one";if(g<0)return null;c=j?g:0,d=j?g+1:i.length;for(;c<d;c++){e=i[c];if(e.selected&&(f.support.optDisabled?!e.disabled:e.getAttribute("disabled")===null)&&(!e.parentNode.disabled||!f.nodeName(e.parentNode,"optgroup"))){b=f(e).val();if(j)return b;h.push(b)}}if(j&&!h.length&&i.length)return f(i[g]).val();return h},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)>=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attr:function(a,c,d,e){var g,h,i,j=a.nodeType;if(!a||j===3||j===8||j===2)return b;if(e&&c in f.attrFn)return f(a)[c](d);if(!("getAttribute"in a))return f.prop(a,c,d);i=j!==1||!f.isXMLDoc(a),i&&(c=c.toLowerCase(),h=f.attrHooks[c]||(u.test(c)?x:w));if(d!==b){if(d===null){f.removeAttr(a,c);return b}if(h&&"set"in h&&i&&(g=h.set(a,d,c))!==b)return g;a.setAttribute(c,""+d);return d}if(h&&"get"in h&&i&&(g=h.get(a,c))!==null)return g;g=a.getAttribute(c);return g===null?b:g},removeAttr:function(a,b){var c,d,e,g,h=0;if(a.nodeType===1){d=(b||"").split(p),g=d.length;for(;h<g;h++)e=d[h].toLowerCase(),c=f.propFix[e]||e,f.attr(a,e,""),a.removeAttribute(v?e:c),u.test(e)&&c in a&&(a[c]=!1)}},attrHooks:{type:{set:function(a,b){if(r.test(a.nodeName)&&a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&&b==="radio"&&f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&&(a.value=c);return b}}},value:{get:function(a,b){if(w&&f.nodeName(a,"button"))return w.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(w&&f.nodeName(a,"button"))return w.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e,g,h,i=a.nodeType;if(!a||i===3||i===8||i===2)return b;h=i!==1||!f.isXMLDoc(a),h&&(c=f.propFix[c]||c,g=f.propHooks[c]);return d!==b?g&&"set"in g&&(e=g.set(a,d,c))!==b?e:a[c]=d:g&&"get"in g&&(e=g.get(a,c))!==null?e:a[c]},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&&c.specified?parseInt(c.value,10):s.test(a.nodeName)||t.test(a.nodeName)&&a.href?0:b}}}}),f.attrHooks.tabindex=f.propHooks.tabIndex,x={get:function(a,c){var d,e=f.prop(a,c);return e===!0||typeof e!="boolean"&&(d=a.getAttributeNode(c))&&d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&&(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},v||(y={name:!0,id:!0},w=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&&(y[c]?d.nodeValue!=="":d.specified)?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.attrHooks.tabindex.set=w.set,f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})}),f.attrHooks.contenteditable={get:w.get,set:function(a,b,c){b===""&&(b="false"),w.set(a,b,c)}}),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex);return null}})),f.support.enctype||(f.propFix.enctype="encoding"),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)>=0}})});var z=/\.(.*)$/,A=/^(?:textarea|input|select)$/i,B=/\./g,C=/ /g,D=/[^\w\s.|`]/g,E=/^([^\.]*)?(?:\.(.+))?$/,F=/\bhover(\.\S+)?/,G=/^key/,H=/^(?:mouse|contextmenu)|click/,I=/^(\w*)(?:#([\w\-]+))?(?:\.([\w\-]+))?$/,J=function(a){var b=I.exec(a);b&&
-(b[1]=(b[1]||"").toLowerCase(),b[3]=b[3]&&new RegExp("(?:^|\\s)"+b[3]+"(?:\\s|$)"));return b},K=function(a,b){return(!b[1]||a.nodeName.toLowerCase()===b[1])&&(!b[2]||a.id===b[2])&&(!b[3]||b[3].test(a.className))},L=function(a){return f.event.special.hover?a:a.replace(F,"mouseenter$1 mouseleave$1")};f.event={add:function(a,c,d,e,g){var h,i,j,k,l,m,n,o,p,q,r,s;if(!(a.nodeType===3||a.nodeType===8||!c||!d||!(h=f._data(a)))){d.handler&&(p=d,d=p.handler),d.guid||(d.guid=f.guid++),j=h.events,j||(h.events=j={}),i=h.handle,i||(h.handle=i=function(a){return typeof f!="undefined"&&(!a||f.event.triggered!==a.type)?f.event.dispatch.apply(i.elem,arguments):b},i.elem=a),c=L(c).split(" ");for(k=0;k<c.length;k++){l=E.exec(c[k])||[],m=l[1],n=(l[2]||"").split(".").sort(),s=f.event.special[m]||{},m=(g?s.delegateType:s.bindType)||m,s=f.event.special[m]||{},o=f.extend({type:m,origType:l[1],data:e,handler:d,guid:d.guid,selector:g,namespace:n.join(".")},p),g&&(o.quick=J(g),!o.quick&&f.expr.match.POS.test(g)&&(o.isPositional=!0)),r=j[m];if(!r){r=j[m]=[],r.delegateCount=0;if(!s.setup||s.setup.call(a,e,n,i)===!1)a.addEventListener?a.addEventListener(m,i,!1):a.attachEvent&&a.attachEvent("on"+m,i)}s.add&&(s.add.call(a,o),o.handler.guid||(o.handler.guid=d.guid)),g?r.splice(r.delegateCount++,0,o):r.push(o),f.event.global[m]=!0}a=null}},global:{},remove:function(a,b,c,d){var e=f.hasData(a)&&f._data(a),g,h,i,j,k,l,m,n,o,p,q;if(!!e&&!!(m=e.events)){b=L(b||"").split(" ");for(g=0;g<b.length;g++){h=E.exec(b[g])||[],i=h[1],j=h[2];if(!i){j=j?"."+j:"";for(l in m)f.event.remove(a,l+j,c,d);return}n=f.event.special[i]||{},i=(d?n.delegateType:n.bindType)||i,p=m[i]||[],k=p.length,j=j?new RegExp("(^|\\.)"+j.split(".").sort().join("\\.(?:.*\\.)?")+"(\\.|$)"):null;if(c||j||d||n.remove)for(l=0;l<p.length;l++){q=p[l];if(!c||c.guid===q.guid)if(!j||j.test(q.namespace))if(!d||d===q.selector||d==="**"&&q.selector)p.splice(l--,1),q.selector&&p.delegateCount--,n.remove&&n.remove.call(a,q)}else p.length=0;p.length===0&&k!==p.length&&((!n.teardown||n.teardown.call(a,j)===!1)&&f.removeEvent(a,i,e.handle),delete m[i])}f.isEmptyObject(m)&&(o=e.handle,o&&(o.elem=null),f.removeData(a,["events","handle"],!0))}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){if(!e||e.nodeType!==3&&e.nodeType!==8){var h=c.type||c,i=[],j,k,l,m,n,o,p,q,r,s;h.indexOf("!")>=0&&(h=h.slice(0,-1),k=!0),h.indexOf(".")>=0&&(i=h.split("."),h=i.shift(),i.sort());if((!e||f.event.customEvent[h])&&!f.event.global[h])return;c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.isTrigger=!0,c.exclusive=k,c.namespace=i.join("."),c.namespace_re=c.namespace?new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)"):null,o=h.indexOf(":")<0?"on"+h:"",(g||!e)&&c.preventDefault();if(!e){j=f.cache;for(l in j)j[l].events&&j[l].events[h]&&f.event.trigger(c,d,j[l].handle.elem,!0);return}c.result=b,c.target||(c.target=e),d=d!=null?f.makeArray(d):[],d.unshift(c),p=f.event.special[h]||{};if(p.trigger&&p.trigger.apply(e,d)===!1)return;r=[[e,p.bindType||h]];if(!g&&!p.noBubble&&!f.isWindow(e)){s=p.delegateType||h,n=null;for(m=e.parentNode;m;m=m.parentNode)r.push([m,s]),n=m;n&&n===e.ownerDocument&&r.push([n.defaultView||n.parentWindow||a,s])}for(l=0;l<r.length;l++){m=r[l][0],c.type=r[l][1],q=(f._data(m,"events")||{})[c.type]&&f._data(m,"handle"),q&&q.apply(m,d),q=o&&m[o],q&&f.acceptData(m)&&q.apply(m,d);if(c.isPropagationStopped())break}c.type=h,c.isDefaultPrevented()||(!p._default||p._default.apply(e.ownerDocument,d)===!1)&&(h!=="click"||!f.nodeName(e,"a"))&&f.acceptData(e)&&o&&e[h]&&(h!=="focus"&&h!=="blur"||c.target.offsetWidth!==0)&&!f.isWindow(e)&&(n=e[o],n&&(e[o]=null),f.event.triggered=h,e[h](),f.event.triggered=b,n&&(e[o]=n));return c.result}},dispatch:function(c){c=f.event.fix(c||a.event);var d=(f._data(this,"events")||{})[c.type]||[],e=d.delegateCount,g=[].slice.call(arguments,0),h=!c.exclusive&&!c.namespace,i=(f.event.special[c.type]||{}).handle,j=[],k,l,m,n,o,p,q,r,s,t,u;g[0]=c,c.delegateTarget=this;if(e&&!c.target.disabled&&(!c.button||c.type!=="click"))for(m=c.target;m!=this;m=m.parentNode||this){o={},q=[];for(k=0;k<e;k++)r=d[k],s=r.selector,t=o[s],r.isPositional?t=(t||(o[s]=f(s))).index(m)>=0:t===b&&(t=o[s]=r.quick?K(m,r.quick):f(m).is(s)),t&&q.push(r);q.length&&j.push({elem:m,matches:q})}d.length>e&&j.push({elem:this,matches:d.slice(e)});for(k=0;k<j.length&&!c.isPropagationStopped();k++){p=j[k],c.currentTarget=p.elem;for(l=0;l<p.matches.length&&!c.isImmediatePropagationStopped();l++){r=p.matches[l];if(h||!c.namespace&&!r.namespace||c.namespace_re&&c.namespace_re.test(r.namespace))c.data=r.data,c.handleObj=r,n=(i||r.handler).apply(p.elem,g),n!==b&&(c.result=n,n===!1&&(c.preventDefault(),c.stopPropagation()))}}return c.result},props:"attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){a.which==null&&(a.which=b.charCode!=null?b.charCode:b.keyCode);return a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement wheelDelta".split(" "),filter:function(a,d){var e,f,g,h=d.button,i=d.fromElement;a.pageX==null&&d.clientX!=null&&(e=a.target.ownerDocument||c,f=e.documentElement,g=e.body,a.pageX=d.clientX+(f&&f.scrollLeft||g&&g.scrollLeft||0)-(f&&f.clientLeft||g&&g.clientLeft||0),a.pageY=d.clientY+(f&&f.scrollTop||g&&g.scrollTop||0)-(f&&f.clientTop||g&&g.clientTop||0)),!a.relatedTarget&&i&&(a.relatedTarget=i===a.target?d.toElement:i),!a.which&&h!==b&&(a.which=h&1?1:h&2?3:h&4?2:0);return a}},fix:function(a){if(a[f.expando])return a;var d,e,g=a,h=f.event.fixHooks[a.type]||{},i=h.props?this.props.concat(h.props):this.props;a=f.Event(g);for(d=i.length;d;)e=i[--d],a[e]=g[e];a.target||(a.target=g.srcElement||c),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey===b&&(a.metaKey=a.ctrlKey);return h.filter?h.filter(a,g):a},special:{ready:{setup:f.bindReady},focus:{delegateType:"focusin",noBubble:!0},blur:{delegateType:"focusout",noBubble:!0},beforeunload:{setup:function(a,b,c){f.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=f.extend(new f.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?f.event.trigger(e,null,b):f.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},f.event.handle=f.event.dispatch,f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&&a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!(this instanceof f.Event))return new f.Event(a,b);a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?N:M):this.type=a,b&&f.extend(this,b),this.timeStamp=a&&a.timeStamp||f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=N;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=N;var a=this.originalEvent;!a||(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=N,this.stopPropagation()},isDefaultPrevented:M,isPropagationStopped:M,isImmediatePropagationStopped:M},f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]=f.event.special[b]={delegateType:b,bindType:b,handle:function(a){var b=this,c=a.relatedTarget,d=a.handleObj,e=d.selector,g,h;if(!c||d.origType===a.type||c!==b&&!f.contains(b,c))g=a.type,a.type=d.origType,h=d.handler.apply(this,arguments),a.type=g;return h}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(){if(f.nodeName(this,"form"))return!1;f.event.add(this,"click._submit keypress._submit",function(a){var c=a.target,d=f.nodeName(c,"input")||f.nodeName(c,"button")?c.form:b;d&&!d._submit_attached&&(f.event.add(d,"submit._submit",function(a){this.parentNode&&f.event.simulate("submit",this.parentNode,a,!0)}),d._submit_attached=!0)})},teardown:function(){if(f.nodeName(this,"form"))return!1;f.event.remove(this,"._submit")}}),f.support.changeBubbles||(f.event.special.change={setup:function(){if(A.test(this.nodeName)){if(this.type==="checkbox"||this.type==="radio")f.event.add(this,"propertychange._change",function(a){a.originalEvent.propertyName==="checked"&&(this._just_changed=!0)}),f.event.add(this,"click._change",function(a){this._just_changed&&(this._just_changed=!1,f.event.simulate("change",this,a,!0))});return!1}f.event.add(this,"beforeactivate._change",function(a){var b=a.target;A.test(b.nodeName)&&!b._change_attached&&(f.event.add(b,"change._change",function(a){this.parentNode&&!a.isSimulated&&f.event.simulate("change",this.parentNode,a,!0)}),b._change_attached=!0)})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!=="radio"&&b.type!=="checkbox")return a.handleObj.handler.apply(this,arguments)},teardown:function(){f.event.remove(this,"._change");return A.test(this.nodeName)}}),f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){var d=0,e=function(a){f.event.simulate(b,a.target,f.event.fix(a),!0)};f.event.special[b]={setup:function(){d++===0&&c.addEventListener(a,e,!0)},teardown:function(){--d===0&&c.removeEventListener(a,e,!0)}}}),f.fn.extend({on:function(a,c,d,e,g){var h,i;if(typeof a=="object"){typeof c!="string"&&(d=c,c=b);for(i in a)this.on(i,c,d,a[i],g);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c=="string"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=M;else if(!e)return this;g===1&&(h=e,e=function(a){f().off(a);return h.apply(this,arguments)},e.guid=h.guid||(h.guid=f.guid++));return this.each(function(){f.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on.call(this,a,b,c,d,1)},off:function(a,c,d){if(a&&a.preventDefault&&a.handleObj){var e=a.handleObj;f(a.delegateTarget).off(e.namespace?e.type+"."+e.namespace:e.type,e.selector,e.handler);return this}if(typeof a=="object"){for(var g in a)this.off(g,c,a[g]);return this}if(c===!1||typeof c=="function")d=c,c=b;d===!1&&(d=M);return this.each(function(){f.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){f(this.context).on(a,this.selector,b,c);return this},die:function(a,b){f(this.context).off(a,this.selector||"**",b);return this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length==1?this.off(a,"**"):this.off(b,a,c)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f._data(this,"lastToggle"+a.guid)||0)%d;f._data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){f.fn[b]=function(a,c){c==null&&(c=a,a=null);return arguments.length>0?this.bind(b,a,c):this.trigger(b)},f.attrFn&&(f.attrFn[b]=!0),G.test(b)&&(f.event.fixHooks[b]=f.event.keyHooks),H.test(b)&&(f.event.fixHooks[b]=f.event.mouseHooks)}),function(){function x(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}if(j.nodeType===1){g||(j[d]=c,j.sizset=h);if(typeof b!="string"){if(j===b){k=!0;break}}else if(m.filter(b,[j]).length>0){k=j;break}}j=j[a]}e[h]=k}}}function w(a,b,c,e,f,g){for(var h=0,i=e.length;h<i;h++){var j=e[h];if(j){var k=!1;j=j[a];while(j){if(j[d]===c){k=e[j.sizset];break}j.nodeType===1&&!g&&(j[d]=c,j.sizset=h);if(j.nodeName.toLowerCase()===b){k=j;break}j=j[a]}e[h]=k}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d="sizcache"+(Math.random()+"").replace(".",""),e=0,g=Object.prototype.toString,h=!1,i=!0,j=/\\/g,k=/\r\n/g,l=/\W/;[0,0].sort(function(){i=!1;return 0});var m=function(b,d,e,f){e=e||[],d=d||c;var h=d;if(d.nodeType!==1&&d.nodeType!==9)return[];if(!b||typeof b!="string")return e;var i,j,k,l,n,q,r,t,u=!0,v=m.isXML(d),w=[],x=b;do{a.exec(""),i=a.exec(x);if(i){x=i[3],w.push(i[1]);if(i[2]){l=i[3];break}}}while(i);if(w.length>1&&p.exec(b))if(w.length===2&&o.relative[w[0]])j=y(w[0]+w[1],d,f);else{j=o.relative[w[0]]?[d]:m(w.shift(),d);while(w.length)b=w.shift(),o.relative[b]&&(b+=w.shift()),j=y(b,j,f)}else{!f&&w.length>1&&d.nodeType===9&&!v&&o.match.ID.test(w[0])&&!o.match.ID.test(w[w.length-1])&&(n=m.find(w.shift(),d,v),d=n.expr?m.filter(n.expr,n.set)[0]:n.set[0]);if(d){n=f?{expr:w.pop(),set:s(f)}:m.find(w.pop(),w.length===1&&(w[0]==="~"||w[0]==="+")&&d.parentNode?d.parentNode:d,v),j=n.expr?m.filter(n.expr,n.set):n.set,w.length>0?k=s(j):u=!1;while(w.length)q=w.pop(),r=q,o.relative[q]?r=w.pop():q="",r==null&&(r=d),o.relative[q](k,r,v)}else k=w=[]}k||(k=j),k||m.error(q||b);if(g.call(k)==="[object Array]")if(!u)e.push.apply(e,k);else if(d&&d.nodeType===1)for(t=0;k[t]!=null;t++)k[t]&&(k[t]===!0||k[t].nodeType===1&&m.contains(d,k[t]))&&e.push(j[t]);else for(t=0;k[t]!=null;t++)k[t]&&k[t].nodeType===1&&e.push(j[t]);else s(k,e);l&&(m(l,h,e,f),m.uniqueSort(e));return e};m.uniqueSort=function(a){if(u){h=i,a.sort(u);if(h)for(var b=1;b<a.length;b++)a[b]===a[b-1]&&a.splice(b--,1)}return a},m.matches=function(a,b){return m(a,null,null,b)},m.matchesSelector=function(a,b){return m(b,null,null,[a]).length>0},m.find=function(a,b,c){var d,e,f,g,h,i;if(!a)return[];for(e=0,f=o.order.length;e<f;e++){h=o.order[e];if(g=o.leftMatch[h].exec(a)){i=g[1],g.splice(1,1);if(i.substr(i.length-1)!=="\\"){g[1]=(g[1]||"").replace(j,""),d=o.find[h](g,b,c);if(d!=null){a=a.replace(o.match[h],"");break}}}}d||(d=typeof b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},m.filter=function(a,c,d,e){var f,g,h,i,j,k,l,n,p,q=a,r=[],s=c,t=c&&c[0]&&m.isXML(c[0]);while(a&&c.length){for(h in o.filter)if((f=o.leftMatch[h].exec(a))!=null&&f[2]){k=o.filter[h],l=f[1],g=!1,f.splice(1,1);if(l.substr(l.length-1)==="\\")continue;s===r&&(r=[]);if(o.preFilter[h]){f=o.preFilter[h](f,s,d,r,e,t);if(!f)g=i=!0;else if(f===!0)continue}if(f)for(n=0;(j=s[n])!=null;n++)j&&(i=k(j,f,n,s),p=e^i,d&&i!=null?p?g=!0:s[n]=!1:p&&(r.push(j),g=!0));if(i!==b){d||(s=r),a=a.replace(o.match[h],"");if(!g)return[];break}}if(a===q)if(g==null)m.error(a);else break;q=a}return s},m.error=function(a){throw"Syntax error, unrecognized expression: "+a};var n=m.getText=function(a){var b,c,d=a.nodeType,e="";if(d){if(d===1){if(typeof a.textContent=="string")return a.textContent;if(typeof a.innerText=="string")return a.innerText.replace(k,"");for(a=a.firstChild;a;a=a.nextSibling)e+=n(a)}else if(d===3||d===4)return a.nodeValue}else for(b=0;c=a[b];b++)c.nodeType!==8&&(e+=n(c));return e},o=m.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof b=="string",d=c&&!l.test(b),e=c&&!d;d&&(b=b.toLowerCase());for(var f=0,g=a.length,h;f<g;f++)if(h=a[f]){while((h=h.previousSibling)&&h.nodeType!==1);a[f]=e||h&&h.nodeName.toLowerCase()===b?h||!1:h===b}e&&m.filter(b,a,!0)},">":function(a,b){var c,d=typeof b=="string",e=0,f=a.length;if(d&&!l.test(b)){b=b.toLowerCase();for(;e<f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e<f;e++)c=a[e],c&&(a[e]=d?c.parentNode:c.parentNode===b);d&&m.filter(b,a,!0)}},"":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("parentNode",b,f,a,d,c)},"~":function(a,b,c){var d,f=e++,g=x;typeof b=="string"&&!l.test(b)&&(b=b.toLowerCase(),d=b,g=w),g("previousSibling",b,f,a,d,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!="undefined"&&!c){var d=b.getElementById(a[1]);return d&&d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e<f;e++)d[e].getAttribute("name")===a[1]&&c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=" "+a[1].replace(j,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&&(e^(h.className&&(" "+h.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)>=0)?c||d.push(h):c&&(b[g]=!1));return!1},ID:function(a){return a[1].replace(j,"")},TAG:function(a,b){return a[1].replace(j,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||m.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&&"2n"||a[2]==="odd"&&"2n+1"||!/\D/.test(a[2])&&"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&&m.error(a[0]);a[0]=e++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(j,"");!f&&o.attrMap[g]&&(a[1]=o.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(j,""),a[2]==="~="&&(a[4]=" "+a[4]+" ");return a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length>1||/^\w/.test(b[3]))b[3]=m(b[3],null,null,c);else{var g=m.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(o.match.POS.test(b[0])||o.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&&a.type!=="hidden"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&&a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!m(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return a.nodeName.toLowerCase()==="input"&&"text"===c&&(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()==="input"&&"radio"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()==="input"&&"checkbox"===a.type},file:function(a){return a.nodeName.toLowerCase()==="input"&&"file"===a.type},password:function(a){return a.nodeName.toLowerCase()==="input"&&"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"submit"===a.type},image:function(a){return a.nodeName.toLowerCase()==="input"&&"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&&"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&&"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b<c[3]-0},gt:function(a,b,c){return b>c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=o.filters[e];if(f)return f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||n([a])||"").indexOf(b[3])>=0;if(e==="not"){var g=b[3];for(var h=0,i=g.length;h<i;h++)if(g[h]===a)return!1;return!0}m.error(e)},CHILD:function(a,b){var c,e,f,g,h,i,j,k=b[1],l=a;switch(k){case"only":case"first":while(l=l.previousSibling)if(l.nodeType===1)return!1;if(k==="first")return!0;l=a;case"last":while(l=l.nextSibling)if(l.nodeType===1)return!1;return!0;case"nth":c=b[2],e=b[3];if(c===1&&e===0)return!0;f=b[0],g=a.parentNode;if(g&&(g[d]!==f||!a.nodeIndex)){i=0;for(l=g.firstChild;l;l=l.nextSibling)l.nodeType===1&&(l.nodeIndex=++i);g[d]=f}j=a.nodeIndex-e;return c===0?j===0:j%c===0&&j/c>=0}},ID:function(a,b){return a.nodeType===1&&a.getAttribute("id")===b},TAG:function(a,b){return b==="*"&&a.nodeType===1||!!a.nodeName&&a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)>-1},ATTR:function(a,b){var c=b[1],d=m.attr?m.attr(a,c):o.attrHandle[c]?o.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return d==null?f==="!=":!f&&m.attr?d!=null:f==="="?e===g:f==="*="?e.indexOf(g)>=0:f==="~="?(" "+e+" ").indexOf(g)>=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&&d!==!1},POS:function(a,b,c,d){var e=b[2],f=o.setFilters[e];if(f)return f(a,c,b,d)}}},p=o.match.POS,q=function(a,b){return"\\"+(b-0+1)};for(var r in o.match)o.match[r]=new RegExp(o.match[r].source+/(?![^\[]*\])(?![^\(]*\))/.source),o.leftMatch[r]=new RegExp(/(^(?:.|\r|\n)*?)/.source+o.match[r].source.replace(/\\(\d+)/g,q));var s=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(t){s=function(a,b){var c=0,d=b||[];if(g.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var e=a.length;c<e;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var u,v;c.documentElement.compareDocumentPosition?u=function(a,b){if(a===b){h=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&4?-1:1}:(u=function(a,b){if(a===b){h=!0;return 0}if(a.sourceIndex&&b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],g=a.parentNode,i=b.parentNode,j=g;if(g===i)return v(a,b);if(!g)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k<c&&k<d;k++)if(e[k]!==f[k])return v(e[k],f[k]);return k===c?v(a,f[k],-1):v(e[k],b,1)},v=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),function(){var a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="<a name='"+d+"'/>",e.insertBefore(a,e.firstChild),c.getElementById(d)&&(o.find.ID=function(a,c,d){if(typeof c.getElementById!="undefined"&&!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!="undefined"&&e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},o.filter.ID=function(a,b){var c=typeof a.getAttributeNode!="undefined"&&a.getAttributeNode("id");return a.nodeType===1&&c&&c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length>0&&(o.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&&d.push(c[e]);c=d}return c}),a.innerHTML="<a href='#'></a>",a.firstChild&&typeof a.firstChild.getAttribute!="undefined"&&a.firstChild.getAttribute("href")!=="#"&&(o.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&&function(){var a=m,b=c.createElement("div"),d="__sizzle__";b.innerHTML="<p class='TEST'></p>";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){m=function(b,e,f,g){e=e||c;if(!g&&!m.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&&(e.nodeType===1||e.nodeType===9)){if(h[1])return s(e.getElementsByTagName(b),f);if(h[2]&&o.find.CLASS&&e.getElementsByClassName)return s(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&&e.body)return s([e.body],f);if(h&&h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return s([],f);if(i.id===h[3])return s([i],f)}try{return s(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&&e.nodeName.toLowerCase()!=="object"){var k=e,l=e.getAttribute("id"),n=l||d,p=e.parentNode,q=/^\s*[+~]/.test(b);l?n=n.replace(/'/g,"\\$&"):e.setAttribute("id",n),q&&p&&(e=e.parentNode);try{if(!q||p)return s(e.querySelectorAll("[id='"+n+"'] "+b),f)}catch(r){}finally{l||k.removeAttribute("id")}}}return a(b,e,f,g)};for(var e in a)m[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}m.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!m.isXML(a))try{if(e||!o.match.PSEUDO.test(c)&&!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&&a.document.nodeType!==11)return f}}catch(g){}return m(c,null,null,[a]).length>0}}}(),function(){var a=c.createElement("div");a.innerHTML="<div class='test e'></div><div class='test'></div>";if(!!a.getElementsByClassName&&a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;o.order.splice(1,0,"CLASS"),o.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!="undefined"&&!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?m.contains=function(a,b){return a!==b&&(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?m.contains=function(a,b){return!!(a.compareDocumentPosition(b)&16)}:m.contains=function(){return!1},m.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var y=function(a,b,c){var d,e=[],f="",g=b.nodeType?[b]:b;while(d=o.match.PSEUDO.exec(a))f+=d[0],a=a.replace(o.match.PSEUDO,"");a=o.relative[a]?a+"*":a;for(var h=0,i=g.length;h<i;h++)m(a,g[h],e,c);return m.filter(f,e)};m.attr=f.attr,m.selectors.attrMap={},f.find=m,f.expr=m.selectors,f.expr[":"]=f.expr.filters,f.unique=m.uniqueSort,f.text=m.getText,f.isXMLDoc=m.isXML,f.contains=m.contains}();var O=/Until$/,P=/^(?:parents|prevUntil|prevAll)/,Q=/,/,R=/^.[^:#\[\.,]*$/,S=Array.prototype.slice,T=f.expr.match.POS,U={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c<d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c<d;c++){g=e.length,f.find(a,this[c],e);if(c>0)for(h=g;h<e.length;h++)for(i=0;i<g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a<c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(W(this,a,!1),"not",a)},filter:function(a){return this.pushStack(W(this,a,!0),"filter",a)},is:function(a){return!!a&&(typeof a=="string"?T.test(a)?f(a,this.context).index(this[0])>=0:f.filter(a,this).length>0:this.filter(a).length>0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h=1;while(g&&g.ownerDocument&&g!==b){for(d=0;d<a.length;d++)f(g).is(a[d])&&c.push({selector:a[d],elem:g,level:h});g=g.parentNode,h++}return c}var i=T.test(a)||typeof a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d<e;d++){g=this[d];while(g){if(i?i.index(g)>-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length>1?f.unique(c):c;return this.pushStack(c,"closest",a)},index:function(a){if(!a)return this[0]&&this[0].parentNode?this.prevAll().length:-1;if(typeof a=="string")return f.inArray(this[0],f(a));return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a=="string"?f(a,b):f.makeArray(a&&a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(V(c[0])||V(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&&b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return f.dir(a,"previousSibling",c)},siblings:function(a){return f.sibling(a.parentNode.firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c),g=S.call(arguments);O.test(a)||(d=c),d&&typeof d=="string"&&(e=f.filter(d,e)),e=this.length>1&&!U[a]?f.unique(e):e,(this.length>1||Q.test(d))&&P.test(a)&&(e=e.reverse());return this.pushStack(e,a,g.join(","))}}),f.extend({filter:function(a,b,c){c&&(a=":not("+a+")");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&&g.nodeType!==9&&(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&&e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&&++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&&a!==b&&c.push(a);return c}});var Y="abbr article aside audio canvas datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video",Z=/ jQuery\d+="(?:\d+|null)"/g,$=/^\s+/,_=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,ba=/<([\w:]+)/,bb=/<tbody/i,bc=/<|&#?\w+;/,bd=/<(?:script|style)/i,be=/<(?:script|object|embed|option|style)/i,bf=new RegExp("<(?:"+Y.replace(" ","|")+")","i"),bg=/checked\s*(?:[^=]|=\s*.checked.)/i,bh=/\/(java|ecma)script/i,bi=/^\s*<!(?:\[CDATA\[|\-\-)/,bj={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],_default:[0,"",""]},bk=X(c);bj.optgroup=bj.option,bj.tbody=bj.tfoot=bj.colgroup=bj.caption=bj.thead,bj.th=bj.td,f.support.htmlSerialize||(bj._default=[1,"div<div>","</div>"]),f.fn.extend({text:function(a){if(f.isFunction(a))return this.each(function(b){var c=f(this);c.text(a.call(this,b,c.text()))});if(typeof a!="object"&&a!==b)return this.empty().append((this[0]&&this[0].ownerDocument||c).createTextNode(a));return f.text(this)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){f(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f(arguments[0]);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after"
-,arguments);a.push.apply(a,f(arguments[0]).toArray());return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&&d.nodeType===1&&(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d])),d.parentNode&&d.parentNode.removeChild(d);return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&&f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){if(a===b)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(Z,""):null;if(typeof a=="string"&&!bd.test(a)&&(f.support.leadingWhitespace||!$.test(a))&&!bj[(ba.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(_,"<$1></$2>");try{for(var c=0,d=this.length;c<d;c++)this[c].nodeType===1&&(f.cleanData(this[c].getElementsByTagName("*")),this[c].innerHTML=a)}catch(e){this.empty().append(a)}}else f.isFunction(a)?this.each(function(b){var c=f(this);c.html(a.call(this,b,c.html()))}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&&this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&&(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&&arguments.length===3&&typeof j=="string"&&bg.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&&j.parentNode,f.support.parentNode&&i&&i.nodeType===11&&i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&&f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l<m;l++)d.call(c?bl(this[l],g):this[l],e.cacheable||m>1&&l<n?f.clone(h,!0,!0):h)}k.length&&f.each(k,br)}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i,j=a[0];b&&b[0]&&(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&&typeof j=="string"&&j.length<512&&i===c&&j.charAt(0)==="<"&&!be.test(j)&&(f.support.checkClone||!bg.test(j))&&!f.support.unknownElems&&bf.test(j)&&(g=!0,h=f.fragments[j],h&&h!==1&&(e=h)),e||(e=i.createDocumentFragment(),f.clean(a,i,e,d)),g&&(f.fragments[j]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&&this[0].parentNode;if(g&&g.nodeType===11&&g.childNodes.length===1&&e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h<i;h++){var j=(h>0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d=a.cloneNode(!0),e,g,h;if((!f.support.noCloneEvent||!f.support.noCloneChecked)&&(a.nodeType===1||a.nodeType===11)&&!f.isXMLDoc(a)){bn(a,d),e=bo(a),g=bo(d);for(h=0;e[h];++h)g[h]&&bn(e[h],g[h])}if(b){bm(a,d);if(c){e=bo(a),g=bo(d);for(h=0;e[h];++h)bm(e[h],g[h])}}e=g=null;return d},clean:function(a,b,d,e){var g;b=b||c,typeof b.createElement=="undefined"&&(b=b.ownerDocument||b[0]&&b[0].ownerDocument||c);var h=[],i;for(var j=0,k;(k=a[j])!=null;j++){typeof k=="number"&&(k+="");if(!k)continue;if(typeof k=="string")if(!bc.test(k))k=b.createTextNode(k);else{k=k.replace(_,"<$1></$2>");var l=(ba.exec(k)||["",""])[1].toLowerCase(),m=bj[l]||bj._default,n=m[0],o=b.createElement("div");b===c?bk.appendChild(o):X(b).appendChild(o),o.innerHTML=m[1]+k+m[2];while(n--)o=o.lastChild;if(!f.support.tbody){var p=bb.test(k),q=l==="table"&&!p?o.firstChild&&o.firstChild.childNodes:m[1]==="<table>"&&!p?o.childNodes:[];for(i=q.length-1;i>=0;--i)f.nodeName(q[i],"tbody")&&!q[i].childNodes.length&&q[i].parentNode.removeChild(q[i])}!f.support.leadingWhitespace&&$.test(k)&&o.insertBefore(b.createTextNode($.exec(k)[0]),o.firstChild),k=o.childNodes}var r;if(!f.support.appendChecked)if(k[0]&&typeof (r=k.length)=="number")for(i=0;i<r;i++)bq(k[i]);else bq(k);k.nodeType?h.push(k):h=f.merge(h,k)}if(d){g=function(a){return!a.type||bh.test(a.type)};for(j=0;h[j];j++)if(e&&f.nodeName(h[j],"script")&&(!h[j].type||h[j].type.toLowerCase()==="text/javascript"))e.push(h[j].parentNode?h[j].parentNode.removeChild(h[j]):h[j]);else{if(h[j].nodeType===1){var s=f.grep(h[j].getElementsByTagName("script"),g);h.splice.apply(h,[j+1,0].concat(s))}d.appendChild(h[j])}}return h},cleanData:function(a){var b,c,d=f.cache,e=f.event.special,g=f.support.deleteExpando;for(var h=0,i;(i=a[h])!=null;h++){if(i.nodeName&&f.noData[i.nodeName.toLowerCase()])continue;c=i[f.expando];if(c){b=d[c];if(b&&b.events){for(var j in b.events)e[j]?f.event.remove(i,j):f.removeEvent(i,j,b.handle);b.handle&&(b.handle.elem=null)}g?delete i[f.expando]:i.removeAttribute&&i.removeAttribute(f.expando),delete d[c]}}}});var bs=/alpha\([^)]*\)/i,bt=/opacity=([^)]*)/,bu=/([A-Z]|^ms)/g,bv=/^-?\d+(?:px)?$/i,bw=/^-?\d/,bx=/^([\-+])=([\-+.\de]+)/,by={position:"absolute",visibility:"hidden",display:"block"},bz=["Left","Right"],bA=["Top","Bottom"],bB,bC,bD;f.fn.css=function(a,c){if(arguments.length===2&&c===b)return this;return f.access(this,a,c,!0,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)})},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bB(a,"opacity","opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&&a.nodeType!==3&&a.nodeType!==8&&!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&&"get"in k&&(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d,h==="string"&&(g=bx.exec(d))&&(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h="number");if(d==null||h==="number"&&isNaN(d))return;h==="number"&&!f.cssNumber[i]&&(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&&(c="float");if(g&&"get"in g&&(e=g.get(a,!0,d))!==b)return e;if(bB)return bB(a,c)},swap:function(a,b,c){var d={};for(var e in b)d[e]=a.style[e],a.style[e]=b[e];c.call(a);for(e in b)a.style[e]=d[e]}}),f.curCSS=f.css,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){var e;if(c){if(a.offsetWidth!==0)return bE(a,b,d);f.swap(a,by,function(){e=bE(a,b,d)});return e}},set:function(a,b){if(!bv.test(b))return b;b=parseFloat(b);if(b>=0)return b+"px"}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return bt.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNumeric(b)?"alpha(opacity="+b*100+")":"",g=d&&d.filter||c.filter||"";c.zoom=1;if(b>=1&&f.trim(g.replace(bs,""))===""){c.removeAttribute("filter");if(d&&!d.filter)return}c.filter=bs.test(g)?g.replace(bs,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){var c;f.swap(a,{display:"inline-block"},function(){b?c=bB(a,"margin-right","marginRight"):c=a.style.marginRight});return c}})}),c.defaultView&&c.defaultView.getComputedStyle&&(bC=function(a,c){var d,e,g;c=c.replace(bu,"-$1").toLowerCase();if(!(e=a.ownerDocument.defaultView))return b;if(g=e.getComputedStyle(a,null))d=g.getPropertyValue(c),d===""&&!f.contains(a.ownerDocument.documentElement,a)&&(d=f.style(a,c));return d}),c.documentElement.currentStyle&&(bD=function(a,b){var c,d,e,f=a.currentStyle&&a.currentStyle[b],g=a.style;f===null&&g&&(e=g[b])&&(f=e),!bv.test(f)&&bw.test(f)&&(c=g.left,d=a.runtimeStyle&&a.runtimeStyle.left,d&&(a.runtimeStyle.left=a.currentStyle.left),g.left=b==="fontSize"?"1em":f||0,f=g.pixelLeft+"px",g.left=c,d&&(a.runtimeStyle.left=d));return f===""?"auto":f}),bB=bC||bD,f.expr&&f.expr.filters&&(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&&c===0||!f.support.reliableHiddenOffsets&&(a.style&&a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)});var bF=/%20/g,bG=/\[\]$/,bH=/\r?\n/g,bI=/#.*$/,bJ=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bK=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bL=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bM=/^(?:GET|HEAD)$/,bN=/^\/\//,bO=/\?/,bP=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,bQ=/^(?:select|textarea)/i,bR=/\s+/,bS=/([?&])_=[^&]*/,bT=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bU=f.fn.load,bV={},bW={},bX,bY,bZ=["*/"]+["*"];try{bX=e.href}catch(b$){bX=c.createElement("a"),bX.href="",bX=bX.href}bY=bT.exec(bX.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!="string"&&bU)return bU.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e>=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&&(f.isFunction(c)?(d=c,c=b):typeof c=="object"&&(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&&(a.done(function(a){c=a}),i.html(g?f("<div>").append(c.replace(bP,"")).find(g):c)),d&&i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||bQ.test(this.nodeName)||bK.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bH,"\r\n")}}):{name:b.name,value:c.replace(bH,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.bind(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&&(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?cb(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),cb(a,b);return a},ajaxSettings:{url:bX,isLocal:bL.test(bY[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":bZ},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:b_(bV),ajaxTransport:b_(bW),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&&clearTimeout(q),p=b,n=m||"",v.readyState=a>0?4:0;var o,r,u,w=c,x=l?cd(d,v,l):b,y,z;if(a>=200&&a<300||a===304){if(d.ifModified){if(y=v.getResponseHeader("Last-Modified"))f.lastModified[k]=y;if(z=v.getResponseHeader("Etag"))f.etag[k]=z}if(a===304)w="notmodified",o=!0;else try{r=ce(d,x),w="success",o=!0}catch(A){w="parsererror",u=A}}else{u=w;if(!w||a)w="error",a<0&&(a=0)}v.status=a,v.statusText=""+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&&g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.fireWith(e,[v,w]),t&&(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&&(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&&(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f.Callbacks("once memory"),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bJ.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&&p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.add,v.statusCode=function(a){if(a){var b;if(s<2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bI,"").replace(bN,bY[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bR),d.crossDomain==null&&(r=bT.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bY[1]&&r[2]==bY[2]&&(r[3]||(r[1]==="http:"?80:443))==(bY[3]||(bY[1]==="http:"?80:443)))),d.data&&d.processData&&typeof d.data!="string"&&(d.data=f.param(d.data,d.traditional)),ca(bV,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bM.test(d.type),t&&f.active++===0&&f.event.trigger("ajaxStart");if(!d.hasContent){d.data&&(d.url+=(bO.test(d.url)?"&":"?")+d.data,delete d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bS,"$1_="+x);d.url=y+(y===d.url?(bO.test(d.url)?"&":"?")+"_="+x:"")}}(d.data&&d.hasContent&&d.contentType!==!1||c.contentType)&&v.setRequestHeader("Content-Type",d.contentType),d.ifModified&&(k=k||d.url,f.lastModified[k]&&v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&&v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", "+bZ+"; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&&(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=ca(bW,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&&g.trigger("ajaxSend",[v,d]),d.async&&d.timeout>0&&(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){s<2?w(-1,z):f.error(z)}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&&(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&&!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)cc(g,a[g],c,e);return d.join("&").replace(bF,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var cf=f.now(),cg=/(\=)\?(&|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+cf++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=b.contentType==="application/x-www-form-urlencoded"&&typeof b.data=="string";if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&&(cg.test(b.url)||e&&cg.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&&(j=j.replace(cg,l),b.url===j&&(e&&(k=k.replace(cg,l)),b.data===k&&(j+=(/\?/.test(j)?"&":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&&f.isFunction(i)&&a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&&(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&&d.parentNode&&e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&&d.onload(0,1)}}}});var ch=a.ActiveXObject?function(){for(var a in cj)cj[a](0,1)}:!1,ci=0,cj;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&&ck()||cl()}:ck,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&&"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&&f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&&h.overrideMimeType&&h.overrideMimeType(c.mimeType),!c.crossDomain&&!e["X-Requested-With"]&&(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&&c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&&(e||h.readyState===4)){d=b,i&&(h.onreadystatechange=f.noop,ch&&delete cj[i]);if(e)h.readyState!==4&&h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&&n.documentElement&&(m.xml=n),m.text=h.responseText;try{k=h.statusText}catch(o){k=""}!j&&c.isLocal&&!c.crossDomain?j=m.text?200:404:j===1223&&(j=204)}}}catch(p){e||g(-1,p)}m&&g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++ci,ch&&(cj||(cj={},f(a).unload(ch)),cj[i]=d),h.onreadystatechange=d)},abort:function(){d&&d(0,1)}}}});var cm={},cn,co,cp=/^(?:toggle|show|hide)$/,cq=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,cr,cs=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],ct;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(cw("show",3),a,b,c);for(var g=0,h=this.length;g<h;g++)d=this[g],d.style&&(e=d.style.display,!f._data(d,"olddisplay")&&e==="none"&&(e=d.style.display=""),e===""&&f.css(d,"display")==="none"&&f._data(d,"olddisplay",cx(d.nodeName)));for(g=0;g<h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(cw("hide",3),a,b,c);var d,e,g=0,h=this.length;for(;g<h;g++)d=this[g],d.style&&(e=f.css(d,"display"),e!=="none"&&!f._data(d,"olddisplay")&&f._data(d,"olddisplay",e));for(g=0;g<h;g++)this[g].style&&(this[g].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&&f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(cw("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){function g(){e.queue===!1&&f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&&f(this).is(":hidden"),g,h,i,j,k,l,m,n,o;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&&(a[g]=a[i],delete a[i]),h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&&b.specialEasing[g]||b.easing||"swing";if(h==="hide"&&d||h==="show"&&!d)return b.complete.call(this);c&&(g==="height"||g==="width")&&(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&&f.css(this,"float")==="none"&&(!f.support.inlineBlockNeedsLayout||cx(this.nodeName)==="inline"?this.style.display="inline-block":this.style.zoom=1))}b.overflow!=null&&(this.style.overflow="hidden");for(i in a)j=new f.fx(this,b,i),h=a[i],cp.test(h)?(o=f._data(this,"toggle"+i)||(h==="toggle"?d?"show":"hide":0),o?(f._data(this,"toggle"+i,o==="show"?"hide":"show"),j[o]()):j[h]()):(k=cq.exec(h),l=j.cur(),k?(m=parseFloat(k[2]),n=k[3]||(f.cssNumber[i]?"":"px"),n!=="px"&&(f.style(this,i,(m||1)+n),l=(m||1)/j.cur()*l,f.style(this,i,l+n)),k[1]&&(m=(k[1]==="-="?-1:1)*m+l),j.custom(l,m,n)):j.custom(l,h,""));return!0}var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return e.queue===!1?this.each(g):this.queue(e.queue,g)},stop:function(a,c,d){typeof a!="string"&&(d=c,c=a,a=b),c&&a!==!1&&this.queue(a||"fx",[]);return this.each(function(){function h(a,b,c){var e=b[c];f.removeData(a,c,!0),e.stop(d)}var b,c=!1,e=f.timers,g=f._data(this);d||f._unmark(!0,this);if(a==null)for(b in g)g[b].stop&&b.indexOf(".run")===b.length-4&&h(this,g,b);else g[b=a+".run"]&&g[b].stop&&h(this,g,b);for(b=e.length;b--;)e[b].elem===this&&(a==null||e[b].queue===a)&&(d?e[b](!0):e[b].saveState(),c=!0,e.splice(b,1));(!d||!c)&&f.dequeue(this,a)})}}),f.each({slideDown:cw("show",1),slideUp:cw("hide",1),slideToggle:cw("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&&typeof a=="object"?f.extend({},a):{complete:c||!c&&b||f.isFunction(a)&&a,duration:a,easing:c&&b||b&&!f.isFunction(b)&&b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default;if(d.queue==null||d.queue===!0)d.queue="fx";d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&&d.old.call(this),d.queue?f.dequeue(this,d.queue):a!==!1&&f._unmark(this)};return d},easing:{linear:function(a,b,c,d){return c+d*a},swing:function(a,b,c,d){return(-Math.cos(a*Math.PI)/2+.5)*d+c}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,c,d){function h(a){return e.step(a)}var e=this,g=f.fx;this.startTime=ct||cu(),this.end=c,this.now=this.start=a,this.pos=this.state=0,this.unit=d||this.unit||(f.cssNumber[this.prop]?"":"px"),h.queue=this.options.queue,h.elem=this.elem,h.saveState=function(){e.options.hide&&f._data(e.elem,"fxshow"+e.prop)===b&&f._data(e.elem,"fxshow"+e.prop,e.start)},h()&&f.timers.push(h)&&!cr&&(cr=setInterval(g.tick,g.interval))},show:function(){var a=f._data(this.elem,"fxshow"+this.prop);this.options.orig[this.prop]=a||f.style(this.elem,this.prop),this.options.show=!0,a!==b?this.custom(this.cur(),a):this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f._data(this.elem,"fxshow"+this.prop)||f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b,c,d,e=ct||cu(),g=!0,h=this.elem,i=this.options;if(a||e>=i.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),i.animatedProperties[this.prop]=!0;for(b in i.animatedProperties)i.animatedProperties[b]!==!0&&(g=!1);if(g){i.overflow!=null&&!f.support.shrinkWrapBlocks&&f.each(["","X","Y"],function(a,b){h.style["overflow"+b]=i.overflow[a]}),i.hide&&f(h).hide();if(i.hide||i.show)for(b in i.animatedProperties)f.style(h,b,i.orig[b]),f.removeData(h,"fxshow"+b,!0),f.removeData(h,"toggle"+b,!0);d=i.complete,d&&(i.complete=!1,d.call(h))}return!1}i.duration==Infinity?this.now=e:(c=e-this.startTime,this.state=c/i.duration,this.pos=f.easing[i.animatedProperties[this.prop]](this.state,c,0,1,i.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){var a,b=f.timers,c=0;for(;c<b.length;c++)a=b[c],!a()&&b[c]===a&&b.splice(c--,1);b.length||f.fx.stop()},interval:13,stop:function(){clearInterval(cr),cr=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&&a.elem.style[a.prop]!=null?a.elem.style[a.prop]=a.now+a.unit:a.elem[a.prop]=a.now}}}),f.each(["width","height"],function(a,b){f.fx.step[b]=function(a){f.style(a.elem,b,Math.max(0,a.now))}}),f.expr&&f.expr.filters&&(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cy=/^t(?:able|d|h)$/i,cz=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?f.fn.offset=function(a){var b=this[0],c;if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);try{c=b.getBoundingClientRect()}catch(d){}var e=b.ownerDocument,g=e.documentElement;if(!c||!f.contains(g,b))return c?{top:c.top,left:c.left}:{top:0,left:0};var h=e.body,i=cA(e),j=g.clientTop||h.clientTop||0,k=g.clientLeft||h.clientLeft||0,l=i.pageYOffset||f.support.boxModel&&g.scrollTop||h.scrollTop,m=i.pageXOffset||f.support.boxModel&&g.scrollLeft||h.scrollLeft,n=c.top+l-j,o=c.left+m-k;return{top:n,left:o}}:f.fn.offset=function(a){var b=this[0];if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);var c,d=b.offsetParent,e=b,g=b.ownerDocument,h=g.documentElement,i=g.body,j=g.defaultView,k=j?j.getComputedStyle(b,null):b.currentStyle,l=b.offsetTop,m=b.offsetLeft;while((b=b.parentNode)&&b!==i&&b!==h){if(f.support.fixedPosition&&k.position==="fixed")break;c=j?j.getComputedStyle(b,null):b.currentStyle,l-=b.scrollTop,m-=b.scrollLeft,b===d&&(l+=b.offsetTop,m+=b.offsetLeft,f.support.doesNotAddBorder&&(!f.support.doesAddBorderForTableAndCells||!cy.test(b.nodeName))&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),e=d,d=b.offsetParent),f.support.subtractsBorderForOverflowNotVisible&&c.overflow!=="visible"&&(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),k=c}if(k.position==="relative"||k.position==="static")l+=i.offsetTop,m+=i.offsetLeft;f.support.fixedPosition&&k.position==="fixed"&&(l+=Math.max(h.scrollTop,i.scrollTop),m+=Math.max(h.scrollLeft,i.scrollLeft));return{top:l,left:m}},f.offset={bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.support.doesNotIncludeMarginInBodyOffset&&(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&&(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&&f.inArray("auto",[h,i])>-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&&(b=b.call(a,c,g)),b.top!=null&&(k.top=b.top-g.top+m),b.left!=null&&(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=cz.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&&!cz.test(a.nodeName)&&f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each(["Left","Top"],function(a,c){var d="scroll"+c;f.fn[d]=function(c){var e,g;if(c===b){e=this[0];if(!e)return null;g=cA(e);return g?"pageXOffset"in g?g[a?"pageYOffset":"pageXOffset"]:f.support.boxModel&&g.document.documentElement[d]||g.document.body[d]:e[d]}return this.each(function(){g=cA(this),g?g.scrollTo(a?f(g).scrollLeft():c,a?c:f(g).scrollTop()):this[d]=c})}}),f.each(["Height","Width"],function(a,c){var d=c.toLowerCase();f.fn["inner"+c]=function(){var a=this[0];return a?a.style?parseFloat(f.css(a,d,"padding")):this[d]():null},f.fn["outer"+c]=function(a){var b=this[0];return b?b.style?parseFloat(f.css(b,d,a?"margin":"border")):this[d]():null},f.fn[d]=function(a){var e=this[0];if(!e)return a==null?null:this;if(f.isFunction(a))return this.each(function(b){var c=f(this);c[d](a.call(this,b,c[d]()))});if(f.isWindow(e)){var g=e.document.documentElement["client"+c],h=e.document.body;return e.document.compatMode==="CSS1Compat"&&g||h&&h["client"+c]||g}if(e.nodeType===9)return Math.max(e.documentElement["client"+c],e.body["scroll"+c],e.documentElement["scroll"+c],e.body["offset"+c],e.documentElement["offset"+c]);if(a===b){var i=f.css(e,d),j=parseFloat(i);return f.isNumeric(j)?j:i}return this.css(d,typeof a=="string"?a:a+"px")}}),a.jQuery=a.$=f})(window);
\ No newline at end of file
deleted file mode 100755
--- a/node_modules/alfred/node_modules/superagent/docs/jquery.tocify.min.js
+++ /dev/null
@@ -1,4 +0,0 @@
-/*! jquery.tocify - v1.9.0 - 2013-10-01 
-* http://gregfranko.com/jquery.tocify.js/
-* Copyright (c) 2013 Greg Franko; Licensed MIT*/
-(function(e){"use strict";e(window.jQuery,window,document)})(function(e,t,s){"use strict";var i="tocify",o="tocify-focus",n="tocify-hover",a="tocify-hide",l="tocify-header",h="."+l,r="tocify-subheader",d="."+r,c="tocify-item",f="."+c,u="tocify-extend-page",p="."+u;e.widget("toc.tocify",{version:"1.9.0",options:{context:"body",ignoreSelector:null,selectors:"h1, h2, h3",showAndHide:!0,showEffect:"slideDown",showEffectSpeed:"medium",hideEffect:"slideUp",hideEffectSpeed:"medium",smoothScroll:!0,smoothScrollSpeed:"medium",scrollTo:0,showAndHideOnScroll:!0,highlightOnScroll:!0,highlightOffset:40,theme:"bootstrap",extendPage:!0,extendPageOffset:100,history:!0,scrollHistory:!1,hashGenerator:"compact",highlightDefault:!0},_create:function(){var s=this;s.extendPageScroll=!0,s.items=[],s._generateToc(),s._addCSSClasses(),s.webkit=function(){for(var e in t)if(e&&-1!==e.toLowerCase().indexOf("webkit"))return!0;return!1}(),s._setEventHandlers(),e(t).load(function(){s._setActiveElement(!0),e("html, body").promise().done(function(){setTimeout(function(){s.extendPageScroll=!1},0)})})},_generateToc:function(){var t,s,o=this,n=o.options.ignoreSelector;return t=-1!==this.options.selectors.indexOf(",")?e(this.options.context).find(this.options.selectors.replace(/ /g,"").substr(0,this.options.selectors.indexOf(","))):e(this.options.context).find(this.options.selectors.replace(/ /g,"")),t.length?(o.element.addClass(i),t.each(function(t){e(this).is(n)||(s=e("<ul/>",{id:l+t,"class":l}).append(o._nestElements(e(this),t)),o.element.append(s),e(this).nextUntil(this.nodeName.toLowerCase()).each(function(){0===e(this).find(o.options.selectors).length?e(this).filter(o.options.selectors).each(function(){e(this).is(n)||o._appendSubheaders.call(this,o,s)}):e(this).find(o.options.selectors).each(function(){e(this).is(n)||o._appendSubheaders.call(this,o,s)})}))}),undefined):(o.element.addClass(a),undefined)},_setActiveElement:function(e){var s=this,i=t.location.hash.substring(1),o=s.element.find('li[data-unique="'+i+'"]');return i.length?(s.element.find("."+s.focusClass).removeClass(s.focusClass),o.addClass(s.focusClass),s.options.showAndHide&&o.click()):(s.element.find("."+s.focusClass).removeClass(s.focusClass),!i.length&&e&&s.options.highlightDefault&&s.element.find(f).first().addClass(s.focusClass)),s},_nestElements:function(t,s){var i,o,n;return i=e.grep(this.items,function(e){return e===t.text()}),i.length?this.items.push(t.text()+s):this.items.push(t.text()),n=this._generateHashValue(i,t,s),o=e("<li/>",{"class":c,"data-unique":n}).append(e("<a/>",{text:t.text()})),t.before(e("<div/>",{name:n,"data-unique":n})),o},_generateHashValue:function(e,t,s){var i="",o=this.options.hashGenerator;if("pretty"===o){for(i=t.text().toLowerCase().replace(/\s/g,"-");i.indexOf("--")>-1;)i=i.replace(/--/g,"-");for(;i.indexOf(":-")>-1;)i=i.replace(/:-/g,"-")}else i="function"==typeof o?o(t.text(),t):t.text().replace(/\s/g,"");return e.length&&(i+=""+s),i},_appendSubheaders:function(t,s){var i=e(this).index(t.options.selectors),o=e(t.options.selectors).eq(i-1),n=+e(this).prop("tagName").charAt(1),a=+o.prop("tagName").charAt(1);a>n?t.element.find(d+"[data-tag="+n+"]").last().append(t._nestElements(e(this),i)):n===a?s.find(f).last().after(t._nestElements(e(this),i)):s.find(f).last().after(e("<ul/>",{"class":r,"data-tag":n})).next(d).append(t._nestElements(e(this),i))},_setEventHandlers:function(){var i=this;this.element.on("click.tocify","li",function(){if(i.options.history&&(t.location.hash=e(this).attr("data-unique")),i.element.find("."+i.focusClass).removeClass(i.focusClass),e(this).addClass(i.focusClass),i.options.showAndHide){var s=e('li[data-unique="'+e(this).attr("data-unique")+'"]');i._triggerShow(s)}i._scrollTo(e(this))}),this.element.find("li").on({"mouseenter.tocify":function(){e(this).addClass(i.hoverClass),e(this).css("cursor","pointer")},"mouseleave.tocify":function(){"bootstrap"!==i.options.theme&&e(this).removeClass(i.hoverClass)}}),(i.options.extendPage||i.options.highlightOnScroll||i.options.scrollHistory||i.options.showAndHideOnScroll)&&e(t).on("scroll.tocify",function(){e("html, body").promise().done(function(){var o,n,a,l,h=e(t).scrollTop(),r=e(t).height(),d=e(s).height(),c=e("body")[0].scrollHeight;if(i.options.extendPage&&(i.webkit&&h>=c-r-i.options.extendPageOffset||!i.webkit&&r+h>d-i.options.extendPageOffset)&&!e(p).length){if(n=e('div[data-unique="'+e(f).last().attr("data-unique")+'"]'),!n.length)return;a=n.offset().top,e(i.options.context).append(e("<div />",{"class":u,height:Math.abs(a-h)+"px","data-unique":u})),i.extendPageScroll&&(l=i.element.find("li.active"),i._scrollTo(e('div[data-unique="'+l.attr("data-unique")+'"]')))}setTimeout(function(){var s,n=null,a=null,l=e(i.options.context).find("div[data-unique]");l.each(function(t){var s=Math.abs((e(this).next().length?e(this).next():e(this)).offset().top-h-i.options.highlightOffset);return null==n||n>s?(n=s,a=t,undefined):!1}),s=e(l[a]).attr("data-unique"),o=e('li[data-unique="'+s+'"]'),i.options.highlightOnScroll&&o.length&&(i.element.find("."+i.focusClass).removeClass(i.focusClass),o.addClass(i.focusClass)),i.options.scrollHistory&&t.location.hash!=="#"+s&&t.location.replace("#"+s),i.options.showAndHideOnScroll&&i.options.showAndHide&&i._triggerShow(o,!0)},0)})})},show:function(t){var s=this;if(!t.is(":visible"))switch(t.find(d).length||t.parent().is(h)||t.parent().is(":visible")?t.children(d).length||t.parent().is(h)||(t=t.closest(d)):t=t.parents(d).add(t),s.options.showEffect){case"none":t.show();break;case"show":t.show(s.options.showEffectSpeed);break;case"slideDown":t.slideDown(s.options.showEffectSpeed);break;case"fadeIn":t.fadeIn(s.options.showEffectSpeed);break;default:t.show()}return t.parent().is(h)?s.hide(e(d).not(t)):s.hide(e(d).not(t.closest(h).find(d).not(t.siblings()))),s},hide:function(e){var t=this;switch(t.options.hideEffect){case"none":e.hide();break;case"hide":e.hide(t.options.hideEffectSpeed);break;case"slideUp":e.slideUp(t.options.hideEffectSpeed);break;case"fadeOut":e.fadeOut(t.options.hideEffectSpeed);break;default:e.hide()}return t},_triggerShow:function(e,t){var s=this;return e.parent().is(h)||e.next().is(d)?s.show(e.next(d),t):e.parent().is(d)&&s.show(e.parent(),t),s},_addCSSClasses:function(){return"jqueryui"===this.options.theme?(this.focusClass="ui-state-default",this.hoverClass="ui-state-hover",this.element.addClass("ui-widget").find(".toc-title").addClass("ui-widget-header").end().find("li").addClass("ui-widget-content")):"bootstrap"===this.options.theme?(this.element.find(h+","+d).addClass("nav nav-list"),this.focusClass="active"):(this.focusClass=o,this.hoverClass=n),this},setOption:function(){e.Widget.prototype._setOption.apply(this,arguments)},setOptions:function(){e.Widget.prototype._setOptions.apply(this,arguments)},_scrollTo:function(t){var s=this,i=s.options.smoothScroll||0,o=s.options.scrollTo,n=e('div[data-unique="'+t.attr("data-unique")+'"]');return n.length?(e("html, body").promise().done(function(){e("html, body").animate({scrollTop:n.offset().top-(e.isFunction(o)?o.call():o)+"px"},{duration:i})}),s):s}})});
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/node_modules/superagent/docs/style.css
+++ /dev/null
@@ -1,81 +0,0 @@
-body {
-  padding: 40px 80px;
-  font: 14px/1.5 "Helvetica Neue", Helvetica, sans-serif;
-  background: #181818 url(images/bg.png);
-  text-align: center;
-}
-
-#content {
-  margin: 0 auto;
-  padding: 10px 40px;
-  text-align: left;
-  background: white;
-  width: 50%;
-  -webkit-border-radius: 2px;
-  -moz-border-radius: 2px;
-  border-radius: 2px;
-  -webkit-box-shadow: 0 2px 5px 0 black;
-}
-
-#menu {
-  font-size: 13px;
-  margin: 0;
-  padding: 0;
-  text-align: left;
-  position: fixed;
-  top: 15px;
-  left: 15px;
-}
-
-#menu ul {
-  margin: 0;
-  padding: 0;
-}
-
-#menu li {
-  list-style: none;
-}
-
-#menu a {
-  color: rgba(255,255,255,.5);
-  text-decoration: none;
-}
-
-#menu a:hover {
-  color: white;
-}
-
-#menu .active a {
-  color: white;
-}
-
-pre {
-  padding: 10px;
-}
-
-code {
-  font: 12px/1 monaco, monospace;
-}
-
-p code {
-  border: 1px solid #ECEA75;
-  padding: 1px 3px;
-  -webkit-border-radius: 2px;
-  -moz-border-radius: 2px;
-  border-radius: 2px;
-  background: #FDFCD1;
-}
-
-pre {
-  padding: 20px 25px;
-  border: 1px solid #ddd;
-  -webkit-box-shadow: inset 0 0 5px #eee;
-  -moz-box-shadow: inset 0 0 5px #eee;
-  box-shadow: inset 0 0 5px #eee;
-}
-
-code .comment { color: #ddd }
-code .init { color: #2F6FAD }
-code .string { color: #5890AD }
-code .keyword { color: #8A6343 }
-code .number { color: #2F6FAD }
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/node_modules/superagent/docs/tail.html
+++ /dev/null
@@ -1,4 +0,0 @@
-    </div>
-    <a href="http://github.com/visionmedia/superagent"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://s3.amazonaws.com/github/ribbons/forkme_right_white_ffffff.png" alt="Fork me on GitHub"></a>
-  </body>
-</html>
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/node_modules/superagent/docs/test.html
+++ /dev/null
@@ -1,2082 +0,0 @@
-<!DOCTYPE html>
-<html>
-  <head>
-    <title>SuperAgent - Ajax with less suck</title>
-    <link rel="stylesheet" href="style.css">
-    <script src="jquery.js"></script>
-    <script src="jquery-ui.min.js"></script>
-    <script src="highlight.js"></script>
-    <script src="jquery.tocify.min.js"></script>
-    <script>
-      $(function(){
-        $('#menu').tocify({
-          selectors: 'h2',
-          hashGenerator: 'pretty'
-        });
-      });
-    </script>
-  </head>
-  <body>
-    <ul id="menu"></ul>
-    <div id="content">    <section class="suite">
-      <h1>request</h1>
-      <dl>
-        <section class="suite">
-          <h1>with a callback</h1>
-          <dl>
-            <dt>should invoke .end()</dt>
-            <dd><pre><code>request
-.get(uri + '/login', function(err, res){
-  assert(res.status == 200);
-  done();
-})</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>.end()</h1>
-          <dl>
-            <dt>should issue a request</dt>
-            <dd><pre><code>request
-.get(uri + '/login')
-.end(function(err, res){
-  assert(res.status == 200);
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>res.error</h1>
-          <dl>
-            <dt>should should be an Error object</dt>
-            <dd><pre><code>request
-.get(uri + '/error')
-.end(function(err, res){
-  if (NODE) {
-    res.error.message.should.equal('cannot GET /error (500)');
-  }
-  else {
-    res.error.message.should.equal('cannot GET ' + uri + '/error (500)');
-  }
-  assert(res.error.status === 500);
-  assert(err, 'should have an error for 500');
-  assert.equal(err.message, 'Internal Server Error');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>res.header</h1>
-          <dl>
-            <dt>should be an object</dt>
-            <dd><pre><code>request
-.get(uri + '/login')
-.end(function(err, res){
-  assert('Express' == res.header['x-powered-by']);
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>res.charset</h1>
-          <dl>
-            <dt>should be set when present</dt>
-            <dd><pre><code>request
-.get(uri + '/login')
-.end(function(err, res){
-  res.charset.should.equal('utf-8');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>res.statusType</h1>
-          <dl>
-            <dt>should provide the first digit</dt>
-            <dd><pre><code>request
-.get(uri + '/login')
-.end(function(err, res){
-  assert(!err, 'should not have an error for success responses');
-  assert(200 == res.status);
-  assert(2 == res.statusType);
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>res.type</h1>
-          <dl>
-            <dt>should provide the mime-type void of params</dt>
-            <dd><pre><code>request
-.get(uri + '/login')
-.end(function(err, res){
-  res.type.should.equal('text/html');
-  res.charset.should.equal('utf-8');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>req.set(field, val)</h1>
-          <dl>
-            <dt>should set the header field</dt>
-            <dd><pre><code>request
-.post(uri + '/echo')
-.set('X-Foo', 'bar')
-.set('X-Bar', 'baz')
-.end(function(err, res){
-  assert('bar' == res.header['x-foo']);
-  assert('baz' == res.header['x-bar']);
-  done();
-})</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>req.set(obj)</h1>
-          <dl>
-            <dt>should set the header fields</dt>
-            <dd><pre><code>request
-.post(uri + '/echo')
-.set({ 'X-Foo': 'bar', 'X-Bar': 'baz' })
-.end(function(err, res){
-  assert('bar' == res.header['x-foo']);
-  assert('baz' == res.header['x-bar']);
-  done();
-})</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>req.type(str)</h1>
-          <dl>
-            <dt>should set the Content-Type</dt>
-            <dd><pre><code>request
-.post(uri + '/echo')
-.type('text/x-foo')
-.end(function(err, res){
-  res.header['content-type'].should.equal('text/x-foo');
-  done();
-});</code></pre></dd>
-            <dt>should map &quot;json&quot;</dt>
-            <dd><pre><code>request
-.post(uri + '/echo')
-.type('json')
-.send('{&quot;a&quot;: 1}')
-.end(function(err, res){
-  res.should.be.json;
-  done();
-});</code></pre></dd>
-            <dt>should map &quot;html&quot;</dt>
-            <dd><pre><code>request
-.post(uri + '/echo')
-.type('html')
-.end(function(err, res){
-  res.header['content-type'].should.equal('text/html');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>req.accept(str)</h1>
-          <dl>
-            <dt>should set Accept</dt>
-            <dd><pre><code>request
-.get(uri + '/echo')
-.accept('text/x-foo')
-.end(function(err, res){
-   res.header['accept'].should.equal('text/x-foo');
-   done();
-});</code></pre></dd>
-            <dt>should map &quot;json&quot;</dt>
-            <dd><pre><code>request
-.get(uri + '/echo')
-.accept('json')
-.end(function(err, res){
-  res.header['accept'].should.equal('application/json');
-  done();
-});</code></pre></dd>
-            <dt>should map &quot;xml&quot;</dt>
-            <dd><pre><code>request
-.get(uri + '/echo')
-.accept('xml')
-.end(function(err, res){
-  res.header['accept'].should.equal('application/xml');
-  done();
-});</code></pre></dd>
-            <dt>should map &quot;html&quot;</dt>
-            <dd><pre><code>request
-.get(uri + '/echo')
-.accept('html')
-.end(function(err, res){
-  res.header['accept'].should.equal('text/html');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>req.send(str)</h1>
-          <dl>
-            <dt>should write the string</dt>
-            <dd><pre><code>request
-.post(uri + '/echo')
-.type('json')
-.send('{&quot;name&quot;:&quot;tobi&quot;}')
-.end(function(err, res){
-  res.text.should.equal('{&quot;name&quot;:&quot;tobi&quot;}');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>req.send(Object)</h1>
-          <dl>
-            <dt>should default to json</dt>
-            <dd><pre><code>request
-.post(uri + '/echo')
-.send({ name: 'tobi' })
-.end(function(err, res){
-  res.should.be.json
-  res.text.should.equal('{&quot;name&quot;:&quot;tobi&quot;}');
-  done();
-});</code></pre></dd>
-            <section class="suite">
-              <h1>when called several times</h1>
-              <dl>
-                <dt>should merge the objects</dt>
-                <dd><pre><code>request
-.post(uri + '/echo')
-.send({ name: 'tobi' })
-.send({ age: 1 })
-.end(function(err, res){
-  res.should.be.json
-  if (NODE) {
-    res.buffered.should.be.true;
-  }
-  res.text.should.equal('{&quot;name&quot;:&quot;tobi&quot;,&quot;age&quot;:1}');
-  done();
-});</code></pre></dd>
-              </dl>
-            </section>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>.end(fn)</h1>
-          <dl>
-            <dt>should check arity</dt>
-            <dd><pre><code>request
-.post(uri + '/echo')
-.send({ name: 'tobi' })
-.end(function(err, res){
-  assert(null == err);
-  res.text.should.equal('{&quot;name&quot;:&quot;tobi&quot;}');
-  done();
-});</code></pre></dd>
-            <dt>should emit request</dt>
-            <dd><pre><code>var req = request.post(uri + '/echo');
-req.on('request', function(request){
-  assert(req == request);
-  done();
-});
-req.end();</code></pre></dd>
-            <dt>should emit response</dt>
-            <dd><pre><code>request
-.post(uri + '/echo')
-.send({ name: 'tobi' })
-.on('response', function(res){
-  res.text.should.equal('{&quot;name&quot;:&quot;tobi&quot;}');
-  done();
-})
-.end();</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>.then(fulfill, reject)</h1>
-          <dl>
-            <dt>should support successful fulfills with .then(fulfill)</dt>
-            <dd><pre><code>request
-.post(uri + '/echo')
-.send({ name: 'tobi' })
-.then(function(res) {
-  res.text.should.equal('{&quot;name&quot;:&quot;tobi&quot;}');
-  done();
-})</code></pre></dd>
-            <dt>should reject an error with .then(null, reject)</dt>
-            <dd><pre><code>request
-.get(uri + '/error')
-.then(null, function(err) {
-  assert(err.status == 500);
-  assert(err.response.text == 'boom');
-  done();
-})</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>.abort()</h1>
-          <dl>
-            <dt>should abort the request</dt>
-            <dd><pre><code>var req = request
-.get(uri + '/delay/3000')
-.end(function(err, res){
-  assert(false, 'should not complete the request');
-});
-req.on('abort', done);
-setTimeout(function() {
-  req.abort();
-}, 1000);</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>request</h1>
-      <dl>
-        <section class="suite">
-          <h1>persistent agent</h1>
-          <dl>
-            <dt>should gain a session on POST</dt>
-            <dd><pre><code>agent3
-  .post('http://localhost:4000/signin')
-  .end(function(err, res) {
-    should.not.exist(err);
-    res.should.have.status(200);
-    should.not.exist(res.headers['set-cookie']);
-    res.text.should.include('dashboard');
-    done();
-  });</code></pre></dd>
-            <dt>should start with empty session (set cookies)</dt>
-            <dd><pre><code>agent1
-  .get('http://localhost:4000/dashboard')
-  .end(function(err, res) {
-    should.exist(err);
-    res.should.have.status(401);
-    should.exist(res.headers['set-cookie']);
-    done();
-  });</code></pre></dd>
-            <dt>should gain a session (cookies already set)</dt>
-            <dd><pre><code>agent1
-  .post('http://localhost:4000/signin')
-  .end(function(err, res) {
-    should.not.exist(err);
-    res.should.have.status(200);
-    should.not.exist(res.headers['set-cookie']);
-    res.text.should.include('dashboard');
-    done();
-  });</code></pre></dd>
-            <dt>should persist cookies across requests</dt>
-            <dd><pre><code>agent1
-  .get('http://localhost:4000/dashboard')
-  .end(function(err, res) {
-    should.not.exist(err);
-    res.should.have.status(200);
-    done();
-  });</code></pre></dd>
-            <dt>should have the cookie set in the end callback</dt>
-            <dd><pre><code>agent4
-  .post('http://localhost:4000/setcookie')
-  .end(function(err, res) {
-    agent4
-      .get('http://localhost:4000/getcookie')
-      .end(function(err, res) {
-        should.not.exist(err);
-        res.should.have.status(200);
-        assert(res.text === 'jar');
-        done();
-      });
-  });</code></pre></dd>
-            <dt>should not share cookies</dt>
-            <dd><pre><code>agent2
-  .get('http://localhost:4000/dashboard')
-  .end(function(err, res) {
-    should.exist(err);
-    res.should.have.status(401);
-    done();
-  });</code></pre></dd>
-            <dt>should not lose cookies between agents</dt>
-            <dd><pre><code>agent1
-  .get('http://localhost:4000/dashboard')
-  .end(function(err, res) {
-    should.not.exist(err);
-    res.should.have.status(200);
-    done();
-  });</code></pre></dd>
-            <dt>should be able to follow redirects</dt>
-            <dd><pre><code>agent1
-  .get('http://localhost:4000/')
-  .end(function(err, res) {
-    should.not.exist(err);
-    res.should.have.status(200);
-    res.text.should.include('dashboard');
-    done();
-  });</code></pre></dd>
-            <dt>should be able to post redirects</dt>
-            <dd><pre><code>agent1
-  .post('http://localhost:4000/redirect')
-  .send({ foo: 'bar', baz: 'blaaah' })
-  .end(function(err, res) {
-    should.not.exist(err);
-    res.should.have.status(200);
-    res.text.should.include('simple');
-    res.redirects.should.eql(['http://localhost:4000/simple']);
-    done();
-  });</code></pre></dd>
-            <dt>should be able to limit redirects</dt>
-            <dd><pre><code>agent1
-  .get('http://localhost:4000/')
-  .redirects(0)
-  .end(function(err, res) {
-    should.exist(err);
-    res.should.have.status(302);
-    res.redirects.should.eql([]);
-    res.header.location.should.equal('/dashboard');
-    done();
-  });</code></pre></dd>
-            <dt>should be able to create a new session (clear cookie)</dt>
-            <dd><pre><code>agent1
-  .post('http://localhost:4000/signout')
-  .end(function(err, res) {
-    should.not.exist(err);
-    res.should.have.status(200);
-    should.exist(res.headers['set-cookie']);
-    done();
-  });</code></pre></dd>
-            <dt>should regenerate with an empty session</dt>
-            <dd><pre><code>agent1
-  .get('http://localhost:4000/dashboard')
-  .end(function(err, res) {
-    should.exist(err);
-    res.should.have.status(401);
-    should.not.exist(res.headers['set-cookie']);
-    done();
-  });</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>Basic auth</h1>
-      <dl>
-        <section class="suite">
-          <h1>when credentials are present in url</h1>
-          <dl>
-            <dt>should set Authorization</dt>
-            <dd><pre><code>request
-.get('http://tobi:learnboost@localhost:3010')
-.end(function(err, res){
-  res.status.should.equal(200);
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>req.auth(user, pass)</h1>
-          <dl>
-            <dt>should set Authorization</dt>
-            <dd><pre><code>request
-.get('http://localhost:3010')
-.auth('tobi', 'learnboost')
-.end(function(err, res){
-  res.status.should.equal(200);
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>req.auth(user + &quot;:&quot; + pass)</h1>
-          <dl>
-            <dt>should set authorization</dt>
-            <dd><pre><code>request
-.get('http://localhost:3010/again')
-.auth('tobi')
-.end(function(err, res){
-  res.status.should.eql(200);
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>[node] request</h1>
-      <dl>
-        <section class="suite">
-          <h1>res.statusCode</h1>
-          <dl>
-            <dt>should set statusCode</dt>
-            <dd><pre><code>request
-.get('http://localhost:5000/login', function(err, res){
-  assert(res.statusCode === 200);
-  done();
-})</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>with an object</h1>
-          <dl>
-            <dt>should format the url</dt>
-            <dd><pre><code>request
-.get(url.parse('http://localhost:5000/login'))
-.end(function(err, res){
-  assert(res.ok);
-  done();
-})</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>without a schema</h1>
-          <dl>
-            <dt>should default to http</dt>
-            <dd><pre><code>request
-.get('localhost:5000/login')
-.end(function(err, res){
-  assert(res.status == 200);
-  done();
-})</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>req.toJSON()</h1>
-          <dl>
-            <dt>should describe the request</dt>
-            <dd><pre><code>request
-.post(':5000/echo')
-.send({ foo: 'baz' })
-.end(function(err, res){
-  var obj = res.request.toJSON();
-  assert('POST' == obj.method);
-  assert(':5000/echo' == obj.url);
-  assert('baz' == obj.data.foo);
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>should allow the send shorthand</h1>
-          <dl>
-            <dt>with callback in the method call</dt>
-            <dd><pre><code>request
-.get('http://localhost:5000/login', function(err, res) {
-    assert(res.status == 200);
-    done();
-});</code></pre></dd>
-            <dt>with data in the method call</dt>
-            <dd><pre><code>request
-.post('http://localhost:5000/echo', { foo: 'bar' })
-.end(function(err, res) {
-  assert('{&quot;foo&quot;:&quot;bar&quot;}' == res.text);
-  done();
-});</code></pre></dd>
-            <dt>with callback and data in the method call</dt>
-            <dd><pre><code>request
-.post('http://localhost:5000/echo', { foo: 'bar' }, function(err, res) {
-  assert('{&quot;foo&quot;:&quot;bar&quot;}' == res.text);
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>res.toJSON()</h1>
-          <dl>
-            <dt>should describe the response</dt>
-            <dd><pre><code>request
-.post('http://localhost:5000/echo')
-.send({ foo: 'baz' })
-.end(function(err, res){
-  var obj = res.toJSON();
-  assert('object' == typeof obj.header);
-  assert('object' == typeof obj.req);
-  assert(200 == obj.status);
-  assert('{&quot;foo&quot;:&quot;baz&quot;}' == obj.text);
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>res.links</h1>
-          <dl>
-            <dt>should default to an empty object</dt>
-            <dd><pre><code>request
-.get('http://localhost:5000/login')
-.end(function(err, res){
-  res.links.should.eql({});
-  done();
-})</code></pre></dd>
-            <dt>should parse the Link header field</dt>
-            <dd><pre><code>request
-.get('http://localhost:5000/links')
-.end(function(err, res){
-  res.links.next.should.equal('https://api.github.com/repos/visionmedia/mocha/issues?page=2');
-  done();
-})</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>req.unset(field)</h1>
-          <dl>
-            <dt>should remove the header field</dt>
-            <dd><pre><code>request
-.post('http://localhost:5000/echo')
-.unset('User-Agent')
-.end(function(err, res){
-  assert(void 0 == res.header['user-agent']);
-  done();
-})</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>req.write(str)</h1>
-          <dl>
-            <dt>should write the given data</dt>
-            <dd><pre><code>var req = request.post('http://localhost:5000/echo');
-req.set('Content-Type', 'application/json');
-req.write('{&quot;name&quot;').should.be.a.boolean;
-req.write(':&quot;tobi&quot;}').should.be.a.boolean;
-req.end(function(err, res){
-  res.text.should.equal('{&quot;name&quot;:&quot;tobi&quot;}');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>req.pipe(stream)</h1>
-          <dl>
-            <dt>should pipe the response to the given stream</dt>
-            <dd><pre><code>var stream = new EventEmitter;
-stream.buf = '';
-stream.writable = true;
-stream.write = function(chunk){
-  this.buf += chunk;
-};
-stream.end = function(){
-  this.buf.should.equal('{&quot;name&quot;:&quot;tobi&quot;}');
-  done();
-};
-request
-.post('http://localhost:5000/echo')
-.send('{&quot;name&quot;:&quot;tobi&quot;}')
-.pipe(stream);</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>.buffer()</h1>
-          <dl>
-            <dt>should enable buffering</dt>
-            <dd><pre><code>request
-.get('http://localhost:5000/custom')
-.buffer()
-.end(function(err, res){
-  assert(null == err);
-  assert('custom stuff' == res.text);
-  assert(res.buffered);
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>.buffer(false)</h1>
-          <dl>
-            <dt>should disable buffering</dt>
-            <dd><pre><code>request
-.post('http://localhost:5000/echo')
-.type('application/x-dog')
-.send('hello this is dog')
-.buffer(false)
-.end(function(err, res){
-  assert(null == err);
-  assert(null == res.text);
-  res.body.should.eql({});
-  var buf = '';
-  res.setEncoding('utf8');
-  res.on('data', function(chunk){ buf += chunk });
-  res.on('end', function(){
-    buf.should.equal('hello this is dog');
-    done();
-  });
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>.agent()</h1>
-          <dl>
-            <dt>should return the defaut agent</dt>
-            <dd><pre><code>var req = request.post('http://localhost:5000/echo');
-req.agent().should.equal(false);
-done();</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>.agent(undefined)</h1>
-          <dl>
-            <dt>should set an agent to undefined and ensure it is chainable</dt>
-            <dd><pre><code>var req = request.get('http://localhost:5000/echo');
-var ret = req.agent(undefined);
-ret.should.equal(req);
-assert(req.agent() === undefined);
-done();</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>.agent(new http.Agent())</h1>
-          <dl>
-            <dt>should set passed agent</dt>
-            <dd><pre><code>var http = require('http');
-var req = request.get('http://localhost:5000/echo');
-var agent = new http.Agent();
-var ret = req.agent(agent);
-ret.should.equal(req);
-req.agent().should.equal(agent)
-done();</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>with a content type other than application/json or text/*</h1>
-          <dl>
-            <dt>should disable buffering</dt>
-            <dd><pre><code>request
-.post('http://localhost:5000/echo')
-.type('application/x-dog')
-.send('hello this is dog')
-.end(function(err, res){
-  assert(null == err);
-  assert(null == res.text);
-  res.body.should.eql({});
-  var buf = '';
-  res.setEncoding('utf8');
-  res.buffered.should.be.false;
-  res.on('data', function(chunk){ buf += chunk });
-  res.on('end', function(){
-    buf.should.equal('hello this is dog');
-    done();
-  });
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>content-length</h1>
-          <dl>
-            <dt>should be set to the byte length of a non-buffer object</dt>
-            <dd><pre><code>var decoder = new StringDecoder('utf8');
-var img = fs.readFileSync(__dirname + '/fixtures/test.png');
-img = decoder.write(img);
-request
-.post('http://localhost:5000/echo')
-.type('application/x-image')
-.send(img)
-.buffer(false)
-.end(function(err, res){
-  assert(null == err);
-  assert(!res.buffered);
-  assert(res.header['content-length'] == Buffer.byteLength(img));
-  done();
-});</code></pre></dd>
-            <dt>should be set to the length of a buffer object</dt>
-            <dd><pre><code>var img = fs.readFileSync(__dirname + '/fixtures/test.png');
-request
-.post('http://localhost:5000/echo')
-.type('application/x-image')
-.send(img)
-.buffer(true)
-.end(function(err, res){
-  assert(null == err);
-  assert(res.buffered);
-  assert(res.header['content-length'] == img.length);
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>req.set(&quot;Content-Type&quot;, contentType)</h1>
-      <dl>
-        <dt>should work with just the contentType component</dt>
-        <dd><pre><code>request
-.post('http://localhost:3005/echo')
-.set('Content-Type', 'application/json')
-.send({ name: 'tobi' })
-.end(function(err, res){
-  assert(!err);
-  done();
-});</code></pre></dd>
-        <dt>should work with the charset component</dt>
-        <dd><pre><code>request
-.post('http://localhost:3005/echo')
-.set('Content-Type', 'application/json; charset=utf-8')
-.send({ name: 'tobi' })
-.end(function(err, res){
-  assert(!err);
-  done();
-});</code></pre></dd>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>exports</h1>
-      <dl>
-        <dt>should expose Part</dt>
-        <dd><pre><code>request.Part.should.be.a.function;</code></pre></dd>
-        <dt>should expose .protocols</dt>
-        <dd><pre><code>Object.keys(request.protocols)
-  .should.eql(['http:', 'https:']);</code></pre></dd>
-        <dt>should expose .serialize</dt>
-        <dd><pre><code>Object.keys(request.serialize)
-  .should.eql(['application/x-www-form-urlencoded', 'application/json']);</code></pre></dd>
-        <dt>should expose .parse</dt>
-        <dd><pre><code>Object.keys(request.parse)
-  .should.eql(['application/x-www-form-urlencoded', 'application/json', 'text', 'image']);</code></pre></dd>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>flags</h1>
-      <dl>
-        <section class="suite">
-          <h1>with 4xx response</h1>
-          <dl>
-            <dt>should set res.error and res.clientError</dt>
-            <dd><pre><code>request
-.get('http://localhost:3004/notfound')
-.end(function(err, res){
-  assert(err);
-  assert(!res.ok, 'response should not be ok');
-  assert(res.error, 'response should be an error');
-  assert(res.clientError, 'response should be a client error');
-  assert(!res.serverError, 'response should not be a server error');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>with 5xx response</h1>
-          <dl>
-            <dt>should set res.error and res.serverError</dt>
-            <dd><pre><code>request
-.get('http://localhost:3004/error')
-.end(function(err, res){
-  assert(err);
-  assert(!res.ok, 'response should not be ok');
-  assert(!res.notFound, 'response should not be notFound');
-  assert(res.error, 'response should be an error');
-  assert(!res.clientError, 'response should not be a client error');
-  assert(res.serverError, 'response should be a server error');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>with 404 Not Found</h1>
-          <dl>
-            <dt>should res.notFound</dt>
-            <dd><pre><code>request
-.get('http://localhost:3004/notfound')
-.end(function(err, res){
-  assert(err);
-  assert(res.notFound, 'response should be .notFound');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>with 400 Bad Request</h1>
-          <dl>
-            <dt>should set req.badRequest</dt>
-            <dd><pre><code>request
-.get('http://localhost:3004/bad-request')
-.end(function(err, res){
-  assert(err);
-  assert(res.badRequest, 'response should be .badRequest');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>with 401 Bad Request</h1>
-          <dl>
-            <dt>should set res.unauthorized</dt>
-            <dd><pre><code>request
-.get('http://localhost:3004/unauthorized')
-.end(function(err, res){
-  assert(err);
-  assert(res.unauthorized, 'response should be .unauthorized');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>with 406 Not Acceptable</h1>
-          <dl>
-            <dt>should set res.notAcceptable</dt>
-            <dd><pre><code>request
-.get('http://localhost:3004/not-acceptable')
-.end(function(err, res){
-  assert(err);
-  assert(res.notAcceptable, 'response should be .notAcceptable');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>with 204 No Content</h1>
-          <dl>
-            <dt>should set res.noContent</dt>
-            <dd><pre><code>request
-.get('http://localhost:3004/no-content')
-.end(function(err, res){
-  assert(!err);
-  assert(res.noContent, 'response should be .noContent');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>req.send(Object) as &quot;form&quot;</h1>
-      <dl>
-        <section class="suite">
-          <h1>with req.type() set to form</h1>
-          <dl>
-            <dt>should send x-www-form-urlencoded data</dt>
-            <dd><pre><code>request
-.post('http://localhost:3002/echo')
-.type('form')
-.send({ name: 'tobi' })
-.end(function(err, res){
-  res.header['content-type'].should.equal('application/x-www-form-urlencoded');
-  res.text.should.equal('name=tobi');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>when called several times</h1>
-          <dl>
-            <dt>should merge the objects</dt>
-            <dd><pre><code>request
-.post('http://localhost:3002/echo')
-.type('form')
-.send({ name: { first: 'tobi', last: 'holowaychuk' } })
-.send({ age: '1' })
-.end(function(err, res){
-  res.header['content-type'].should.equal('application/x-www-form-urlencoded');
-  res.text.should.equal('name%5Bfirst%5D=tobi&amp;name%5Blast%5D=holowaychuk&amp;age=1');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>req.send(String)</h1>
-      <dl>
-        <dt>should default to &quot;form&quot;</dt>
-        <dd><pre><code>request
-.post('http://localhost:3002/echo')
-.send('user[name]=tj')
-.send('user[email]=tj@vision-media.ca')
-.end(function(err, res){
-  res.header['content-type'].should.equal('application/x-www-form-urlencoded');
-  res.body.should.eql({ user: { name: 'tj', email: 'tj@vision-media.ca' } });
-  done();
-})</code></pre></dd>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>res.body</h1>
-      <dl>
-        <section class="suite">
-          <h1>application/x-www-form-urlencoded</h1>
-          <dl>
-            <dt>should parse the body</dt>
-            <dd><pre><code>request
-.get('http://localhost:3002/form-data')
-.end(function(err, res){
-  res.text.should.equal('pet[name]=manny');
-  res.body.should.eql({ pet: { name: 'manny' }});
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>https</h1>
-      <dl>
-        <section class="suite">
-          <h1>request</h1>
-          <dl>
-            <dt>should give a good response</dt>
-            <dd><pre><code>request
-.get('https://localhost:8443/')
-.ca(cert)
-.end(function(err, res){
-  assert(res.ok);
-  assert('Safe and secure!' === res.text);
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>.agent</h1>
-          <dl>
-            <dt>should be able to make multiple requests without redefining the certificate</dt>
-            <dd><pre><code>var agent = request.agent({ca: cert});
-agent
-.get('https://localhost:8443/')
-.end(function(err, res){
-  assert(res.ok);
-  assert('Safe and secure!' === res.text);
-  agent
-  .get(url.parse('https://localhost:8443/'))
-  .end(function(err, res){
-    assert(res.ok);
-    assert('Safe and secure!' === res.text);
-    done();
-  });
-});</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>res.body</h1>
-      <dl>
-        <section class="suite">
-          <h1>image/png</h1>
-          <dl>
-            <dt>should parse the body</dt>
-            <dd><pre><code>request
-.get('http://localhost:3011/image')
-.end(function(err, res){
-  (res.body.length - img.length).should.equal(0);
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>zlib</h1>
-      <dl>
-        <dt>should deflate the content</dt>
-        <dd><pre><code>request
-  .get('http://localhost:3080')
-  .end(function(err, res){
-    res.should.have.status(200);
-    res.text.should.equal(subject);
-    res.headers['content-length'].should.be.below(subject.length);
-    done();
-  });</code></pre></dd>
-        <dt>should handle corrupted responses</dt>
-        <dd><pre><code>request
-  .get('http://localhost:3080/corrupt')
-  .end(function(err, res){
-    assert(err, 'missing error');
-    assert(!res, 'response should not be defined');
-    done();
-  });</code></pre></dd>
-        <section class="suite">
-          <h1>without encoding set</h1>
-          <dl>
-            <dt>should emit buffers</dt>
-            <dd><pre><code>request
-  .get('http://localhost:3080/binary')
-  .end(function(err, res){
-    res.should.have.status(200);
-    res.headers['content-length'].should.be.below(subject.length);
-    res.on('data', function(chunk){
-      chunk.should.have.length(subject.length);
-    });
-    res.on('end', done);
-  });</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>req.send(Object) as &quot;json&quot;</h1>
-      <dl>
-        <dt>should default to json</dt>
-        <dd><pre><code>request
-.post('http://localhost:3005/echo')
-.send({ name: 'tobi' })
-.end(function(err, res){
-  res.should.be.json
-  res.text.should.equal('{&quot;name&quot;:&quot;tobi&quot;}');
-  done();
-});</code></pre></dd>
-        <dt>should work with arrays</dt>
-        <dd><pre><code>request
-.post('http://localhost:3005/echo')
-.send([1,2,3])
-.end(function(err, res){
-  res.should.be.json
-  res.text.should.equal('[1,2,3]');
-  done();
-});</code></pre></dd>
-        <dt>should work with value null</dt>
-        <dd><pre><code>request
-.post('http://localhost:3005/echo')
-.type('json')
-.send('null')
-.end(function(err, res){
-  res.should.be.json
-  assert(res.body === null);
-  done();
-});</code></pre></dd>
-        <dt>should work with value false</dt>
-        <dd><pre><code>request
-.post('http://localhost:3005/echo')
-.type('json')
-.send('false')
-.end(function(err, res){
-  res.should.be.json
-  res.body.should.equal(false);
-  done();
-});</code></pre></dd>
-        <dt>should work with value 0</dt>
-        <dd><pre><code>request
-.post('http://localhost:3005/echo')
-.type('json')
-.send('0')
-.end(function(err, res){
-  res.should.be.json
-  res.body.should.equal(0);
-  done();
-});</code></pre></dd>
-        <dt>should work with empty string value</dt>
-        <dd><pre><code>request
-.post('http://localhost:3005/echo')
-.type('json')
-.send('&quot;&quot;')
-.end(function(err, res){
-  res.should.be.json
-  res.body.should.equal(&quot;&quot;);
-  done();
-});</code></pre></dd>
-        <dt>should work with GET</dt>
-        <dd><pre><code>request
-.get('http://localhost:3005/echo')
-.send({ tobi: 'ferret' })
-.end(function(err, res){
-  res.should.be.json
-  res.text.should.equal('{&quot;tobi&quot;:&quot;ferret&quot;}');
-  done();
-});</code></pre></dd>
-        <dt>should work with vendor MIME type</dt>
-        <dd><pre><code>request
-.post('http://localhost:3005/echo')
-.set('Content-Type', 'application/vnd.example+json')
-.send({ name: 'vendor' })
-.end(function(err, res){
-  res.text.should.equal('{&quot;name&quot;:&quot;vendor&quot;}');
-  done();
-});</code></pre></dd>
-        <section class="suite">
-          <h1>when called several times</h1>
-          <dl>
-            <dt>should merge the objects</dt>
-            <dd><pre><code>request
-.post('http://localhost:3005/echo')
-.send({ name: 'tobi' })
-.send({ age: 1 })
-.end(function(err, res){
-  res.should.be.json
-  res.text.should.equal('{&quot;name&quot;:&quot;tobi&quot;,&quot;age&quot;:1}');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>res.body</h1>
-      <dl>
-        <section class="suite">
-          <h1>application/json</h1>
-          <dl>
-            <dt>should parse the body</dt>
-            <dd><pre><code>request
-.get('http://localhost:3005/json')
-.end(function(err, res){
-  res.text.should.equal('{&quot;name&quot;:&quot;manny&quot;}');
-  res.body.should.eql({ name: 'manny' });
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>HEAD requests</h1>
-          <dl>
-            <dt>should not throw a parse error</dt>
-            <dd><pre><code>request
-.head('http://localhost:3005/json')
-.end(function(err, res){
-  assert(err === null);
-  assert(res.text === undefined)
-  assert(Object.keys(res.body).length === 0)
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>Invalid JSON response</h1>
-          <dl>
-            <dt>should return the raw response</dt>
-            <dd><pre><code>request
-.get('http://localhost:3005/invalid-json')
-.end(function(err, res){
-  assert.deepEqual(err.rawResponse, &quot;)]}', {'header':{'code':200,'text':'OK','version':'1.0'},'data':'some data'}&quot;);
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>No content</h1>
-          <dl>
-            <dt>should not throw a parse error</dt>
-            <dd><pre><code>request
-.get('http://localhost:3005/no-content')
-.end(function(err, res){
-  assert(err === null);
-  assert(res.text === '');
-  assert(Object.keys(res.body).length === 0);
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>application/json+hal</h1>
-          <dl>
-            <dt>should parse the body</dt>
-            <dd><pre><code>request
-.get('http://localhost:3005/json-hal')
-.end(function(err, res){
-  if (err) return done(err);
-  res.text.should.equal('{&quot;name&quot;:&quot;hal 5000&quot;}');
-  res.body.should.eql({ name: 'hal 5000' });
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>vnd.collection+json</h1>
-          <dl>
-            <dt>should parse the body</dt>
-            <dd><pre><code>request
-.get('http://localhost:3005/collection-json')
-.end(function(err, res){
-  res.text.should.equal('{&quot;name&quot;:&quot;chewbacca&quot;}');
-  res.body.should.eql({ name: 'chewbacca' });
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>Request</h1>
-      <dl>
-        <section class="suite">
-          <h1>#attach(name, path, filename)</h1>
-          <dl>
-            <dt>should use the custom filename</dt>
-            <dd><pre><code>request
-.post(':3005/echo')
-.attach('document', 'test/node/fixtures/user.html', 'doc.html')
-.end(function(err, res){
-  if (err) return done(err);
-  var html = res.files.document;
-  html.name.should.equal('doc.html');
-  html.type.should.equal('text/html');
-  read(html.path).should.equal('&lt;h1&gt;name&lt;/h1&gt;');
-  done();
-})</code></pre></dd>
-            <dt>should fire progress event</dt>
-            <dd><pre><code>var loaded = 0;
-var total = 0;
-request
-.post(':3005/echo')
-.attach('document', 'test/node/fixtures/user.html')
-.on('progress', function (event) {
-  total = event.total;
-  loaded = event.loaded;
-})
-.end(function(err, res){
-  if (err) return done(err);
-  var html = res.files.document;
-  html.name.should.equal('user.html');
-  html.type.should.equal('text/html');
-  read(html.path).should.equal('&lt;h1&gt;name&lt;/h1&gt;');
-  total.should.equal(221);
-  loaded.should.equal(221);
-  done();
-})</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>with network error</h1>
-      <dl>
-        <dt>should error</dt>
-        <dd><pre><code>request
-.get('http://localhost:' + this.port + '/')
-.end(function(err, res){
-  assert(err, 'expected an error');
-  done();
-});</code></pre></dd>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>request</h1>
-      <dl>
-        <section class="suite">
-          <h1>not modified</h1>
-          <dl>
-            <dt>should start with 200</dt>
-            <dd><pre><code>request
-.get('http://localhost:3008/')
-.end(function(err, res){
-  res.should.have.status(200)
-  res.text.should.match(/^\d+$/);
-  ts = +res.text;
-  done();
-});</code></pre></dd>
-            <dt>should then be 304</dt>
-            <dd><pre><code>request
-.get('http://localhost:3008/')
-.set('If-Modified-Since', new Date(ts).toUTCString())
-.end(function(err, res){
-  res.should.have.status(304)
-  // res.text.should.be.empty
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>req.parse(fn)</h1>
-      <dl>
-        <dt>should take precedence over default parsers</dt>
-        <dd><pre><code>request
-.get('http://localhost:3033/manny')
-.parse(request.parse['application/json'])
-.end(function(err, res){
-  assert(res.ok);
-  assert('{&quot;name&quot;:&quot;manny&quot;}' == res.text);
-  assert('manny' == res.body.name);
-  done();
-});</code></pre></dd>
-        <dt>should be the only parser</dt>
-        <dd><pre><code>request
-.get('http://localhost:3033/image')
-.parse(function(res, fn) {
-  res.on('data', function() {});
-})
-.end(function(err, res){
-  assert(res.ok);
-  assert(res.text === undefined);
-  res.body.should.eql({});
-  done();
-});</code></pre></dd>
-        <dt>should emit error if parser throws</dt>
-        <dd><pre><code>request
-.get('http://localhost:3033/manny')
-.parse(function() {
-  throw new Error('I am broken');
-})
-.on('error', function(err) {
-  err.message.should.equal('I am broken');
-  done();
-})
-.end();</code></pre></dd>
-        <dt>should emit error if parser returns an error</dt>
-        <dd><pre><code>request
-.get('http://localhost:3033/manny')
-.parse(function(res, fn) {
-  fn(new Error('I am broken'));
-})
-.on('error', function(err) {
-  err.message.should.equal('I am broken');
-  done();
-})
-.end()</code></pre></dd>
-        <dt>should not emit error on chunked json</dt>
-        <dd><pre><code>request
-.get('http://localhost:3033/chunked-json')
-.end(function(err){
-  assert(!err);
-  done();
-});</code></pre></dd>
-        <dt>should not emit error on aborted chunked json</dt>
-        <dd><pre><code>var req = request
-.get('http://localhost:3033/chunked-json')
-.end(function(err){
-  assert(!err);
-  done();
-});
-setTimeout(function(){req.abort()},50);</code></pre></dd>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>pipe on redirect</h1>
-      <dl>
-        <dt>should follow Location</dt>
-        <dd><pre><code>var stream = fs.createWriteStream('test/node/fixtures/pipe.txt');
-var redirects = [];
-var req = request
-  .get('http://localhost:3012/')
-  .on('redirect', function (res) {
-    redirects.push(res.headers.location);
-  })
-  .on('end', function () {
-    var arr = [];
-    arr.push('/movies');
-    arr.push('/movies/all');
-    arr.push('/movies/all/0');
-    redirects.should.eql(arr);
-    fs.readFileSync('test/node/fixtures/pipe.txt', 'utf8').should.eql('first movie page');
-    done();
-  });
-  req.pipe(stream);</code></pre></dd>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>request pipe</h1>
-      <dl>
-        <dt>should act as a writable stream</dt>
-        <dd><pre><code>var req = request.post('http://localhost:3020');
-var stream = fs.createReadStream('test/node/fixtures/user.json');
-req.type('json');
-req.on('response', function(res){
-  res.body.should.eql({ name: 'tobi' });
-  done();
-});
-stream.pipe(req);</code></pre></dd>
-        <dt>should act as a readable stream</dt>
-        <dd><pre><code>var stream = fs.createWriteStream('test/node/fixtures/tmp.json');
-var req = request.get('http://localhost:3025');
-req.type('json');
-req.on('end', function(){
-  JSON.parse(fs.readFileSync('test/node/fixtures/tmp.json', 'utf8')).should.eql({ name: 'tobi' });
-  done();
-});
-req.pipe(stream);</code></pre></dd>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>req.query(String)</h1>
-      <dl>
-        <dt>should supply uri malformed error to the callback</dt>
-        <dd><pre><code>request
-.get('http://localhost:3006')
-.query('name=toby')
-.query('a=\uD800')
-.query({ b: '\uD800' })
-.end(function(err, res){
-  assert(err instanceof Error);
-  assert('URIError' == err.name);
-  done();
-});</code></pre></dd>
-        <dt>should support passing in a string</dt>
-        <dd><pre><code>request
-.del('http://localhost:3006')
-.query('name=t%F6bi')
-.end(function(err, res){
-  res.body.should.eql({ name: 't%F6bi' });
-  done();
-});</code></pre></dd>
-        <dt>should work with url query-string and string for query</dt>
-        <dd><pre><code>request
-.del('http://localhost:3006/?name=tobi')
-.query('age=2%20')
-.end(function(err, res){
-  res.body.should.eql({ name: 'tobi', age: '2 ' });
-  done();
-});</code></pre></dd>
-        <dt>should support compound elements in a string</dt>
-        <dd><pre><code>request
-  .del('http://localhost:3006/')
-  .query('name=t%F6bi&amp;age=2')
-  .end(function(err, res){
-    res.body.should.eql({ name: 't%F6bi', age: '2' });
-    done();
-  });</code></pre></dd>
-        <dt>should work when called multiple times with a string</dt>
-        <dd><pre><code>request
-.del('http://localhost:3006/')
-.query('name=t%F6bi')
-.query('age=2%F6')
-.end(function(err, res){
-  res.body.should.eql({ name: 't%F6bi', age: '2%F6' });
-  done();
-});</code></pre></dd>
-        <dt>should work with normal `query` object and query string</dt>
-        <dd><pre><code>request
-.del('http://localhost:3006/')
-.query('name=t%F6bi')
-.query({ age: '2' })
-.end(function(err, res){
-  res.body.should.eql({ name: 't%F6bi', age: '2' });
-  done();
-});</code></pre></dd>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>req.query(Object)</h1>
-      <dl>
-        <dt>should construct the query-string</dt>
-        <dd><pre><code>request
-.del('http://localhost:3006/')
-.query({ name: 'tobi' })
-.query({ order: 'asc' })
-.query({ limit: ['1', '2'] })
-.end(function(err, res){
-  res.body.should.eql({ name: 'tobi', order: 'asc', limit: ['1', '2'] });
-  done();
-});</code></pre></dd>
-        <dt>should not error on dates</dt>
-        <dd><pre><code>var date = new Date(0);
-request
-.del('http://localhost:3006/')
-.query({ at: date })
-.end(function(err, res){
-  assert(date.toISOString() == res.body.at);
-  done();
-});</code></pre></dd>
-        <dt>should work after setting header fields</dt>
-        <dd><pre><code>request
-.del('http://localhost:3006/')
-.set('Foo', 'bar')
-.set('Bar', 'baz')
-.query({ name: 'tobi' })
-.query({ order: 'asc' })
-.query({ limit: ['1', '2'] })
-.end(function(err, res){
-  res.body.should.eql({ name: 'tobi', order: 'asc', limit: ['1', '2'] });
-  done();
-});</code></pre></dd>
-        <dt>should append to the original query-string</dt>
-        <dd><pre><code>request
-.del('http://localhost:3006/?name=tobi')
-.query({ order: 'asc' })
-.end(function(err, res) {
-  res.body.should.eql({ name: 'tobi', order: 'asc' });
-  done();
-});</code></pre></dd>
-        <dt>should retain the original query-string</dt>
-        <dd><pre><code>request
-.del('http://localhost:3006/?name=tobi')
-.end(function(err, res) {
-  res.body.should.eql({ name: 'tobi' });
-  done();
-});</code></pre></dd>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>request.get</h1>
-      <dl>
-        <section class="suite">
-          <h1>on 301 redirect</h1>
-          <dl>
-            <dt>should follow Location with a GET request</dt>
-            <dd><pre><code>var req = request
-  .get('http://localhost:3210/test-301')
-  .redirects(1)
-  .end(function(err, res){
-    req.req._headers.host.should.eql('localhost:3211');
-    res.status.should.eql(200);
-    res.text.should.eql('GET');
-    done();
-  });</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>on 302 redirect</h1>
-          <dl>
-            <dt>should follow Location with a GET request</dt>
-            <dd><pre><code>var req = request
-  .get('http://localhost:3210/test-302')
-  .redirects(1)
-  .end(function(err, res){
-    req.req._headers.host.should.eql('localhost:3211');
-    res.status.should.eql(200);
-    res.text.should.eql('GET');
-    done();
-  });</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>on 303 redirect</h1>
-          <dl>
-            <dt>should follow Location with a GET request</dt>
-            <dd><pre><code>var req = request
-  .get('http://localhost:3210/test-303')
-  .redirects(1)
-  .end(function(err, res){
-    req.req._headers.host.should.eql('localhost:3211');
-    res.status.should.eql(200);
-    res.text.should.eql('GET');
-    done();
-  });</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>on 307 redirect</h1>
-          <dl>
-            <dt>should follow Location with a GET request</dt>
-            <dd><pre><code>var req = request
-  .get('http://localhost:3210/test-307')
-  .redirects(1)
-  .end(function(err, res){
-    req.req._headers.host.should.eql('localhost:3211');
-    res.status.should.eql(200);
-    res.text.should.eql('GET');
-    done();
-  });</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>on 308 redirect</h1>
-          <dl>
-            <dt>should follow Location with a GET request</dt>
-            <dd><pre><code>var req = request
-  .get('http://localhost:3210/test-308')
-  .redirects(1)
-  .end(function(err, res){
-    req.req._headers.host.should.eql('localhost:3211');
-    res.status.should.eql(200);
-    res.text.should.eql('GET');
-    done();
-  });</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>request.post</h1>
-      <dl>
-        <section class="suite">
-          <h1>on 301 redirect</h1>
-          <dl>
-            <dt>should follow Location with a GET request</dt>
-            <dd><pre><code>var req = request
-  .post('http://localhost:3210/test-301')
-  .redirects(1)
-  .end(function(err, res){
-    req.req._headers.host.should.eql('localhost:3211');
-    res.status.should.eql(200);
-    res.text.should.eql('GET');
-    done();
-  });</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>on 302 redirect</h1>
-          <dl>
-            <dt>should follow Location with a GET request</dt>
-            <dd><pre><code>var req = request
-  .post('http://localhost:3210/test-302')
-  .redirects(1)
-  .end(function(err, res){
-    req.req._headers.host.should.eql('localhost:3211');
-    res.status.should.eql(200);
-    res.text.should.eql('GET');
-    done();
-  });</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>on 303 redirect</h1>
-          <dl>
-            <dt>should follow Location with a GET request</dt>
-            <dd><pre><code>var req = request
-  .post('http://localhost:3210/test-303')
-  .redirects(1)
-  .end(function(err, res){
-    req.req._headers.host.should.eql('localhost:3211');
-    res.status.should.eql(200);
-    res.text.should.eql('GET');
-    done();
-  });</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>on 307 redirect</h1>
-          <dl>
-            <dt>should follow Location with a POST request</dt>
-            <dd><pre><code>var req = request
-  .post('http://localhost:3210/test-307')
-  .redirects(1)
-  .end(function(err, res){
-    req.req._headers.host.should.eql('localhost:3211');
-    res.status.should.eql(200);
-    res.text.should.eql('POST');
-    done();
-  });</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>on 308 redirect</h1>
-          <dl>
-            <dt>should follow Location with a POST request</dt>
-            <dd><pre><code>var req = request
-  .post('http://localhost:3210/test-308')
-  .redirects(1)
-  .end(function(err, res){
-    req.req._headers.host.should.eql('localhost:3211');
-    res.status.should.eql(200);
-    res.text.should.eql('POST');
-    done();
-  });</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>request</h1>
-      <dl>
-        <section class="suite">
-          <h1>on redirect</h1>
-          <dl>
-            <dt>should follow Location</dt>
-            <dd><pre><code>var redirects = [];
-request
-.get('http://localhost:3003/')
-.on('redirect', function(res){
-  redirects.push(res.headers.location);
-})
-.end(function(err, res){
-  var arr = [];
-  arr.push('/movies');
-  arr.push('/movies/all');
-  arr.push('/movies/all/0');
-  redirects.should.eql(arr);
-  res.text.should.equal('first movie page');
-  done();
-});</code></pre></dd>
-            <dt>should retain header fields</dt>
-            <dd><pre><code>request
-.get('http://localhost:3003/header')
-.set('X-Foo', 'bar')
-.end(function(err, res){
-  res.body.should.have.property('x-foo', 'bar');
-  done();
-});</code></pre></dd>
-            <dt>should remove Content-* fields</dt>
-            <dd><pre><code>request
-.post('http://localhost:3003/header')
-.type('txt')
-.set('X-Foo', 'bar')
-.set('X-Bar', 'baz')
-.send('hey')
-.end(function(err, res){
-  res.body.should.have.property('x-foo', 'bar');
-  res.body.should.have.property('x-bar', 'baz');
-  res.body.should.not.have.property('content-type');
-  res.body.should.not.have.property('content-length');
-  res.body.should.not.have.property('transfer-encoding');
-  done();
-});</code></pre></dd>
-            <dt>should retain cookies</dt>
-            <dd><pre><code>request
-.get('http://localhost:3003/header')
-.set('Cookie', 'foo=bar;')
-.end(function(err, res){
-  res.body.should.have.property('cookie', 'foo=bar;');
-  done();
-});</code></pre></dd>
-            <dt>should preserve timeout across redirects</dt>
-            <dd><pre><code>request
-.get('http://localhost:3003/movies/random')
-.timeout(250)
-.end(function(err, res){
-  assert(err instanceof Error, 'expected an error');
-  err.should.have.property('timeout', 250);
-  done();
-});</code></pre></dd>
-            <dt>should not resend query parameters</dt>
-            <dd><pre><code>var redirects = [];
-var query = [];
-request
-.get('http://localhost:3003/?foo=bar')
-.on('redirect', function(res){
-  query.push(res.headers.query);
-  redirects.push(res.headers.location);
-})
-.end(function(err, res){
-  var arr = [];
-  arr.push('/movies');
-  arr.push('/movies/all');
-  arr.push('/movies/all/0');
-  redirects.should.eql(arr);
-  res.text.should.equal('first movie page');
-  query.should.eql(['{&quot;foo&quot;:&quot;bar&quot;}', '{}', '{}']);
-  res.headers.query.should.eql('{}');
-  done();
-});</code></pre></dd>
-            <dt>should handle no location header</dt>
-            <dd><pre><code>request
-.get('http://localhost:3003/bad-redirect')
-.end(function(err, res){
-  err.message.should.equal('No location header for redirect');
-  done();
-});</code></pre></dd>
-            <section class="suite">
-              <h1>when relative</h1>
-              <dl>
-                <dt>should redirect to a sibling path</dt>
-                <dd><pre><code>var redirects = [];
-request
-.get('http://localhost:3003/relative')
-.on('redirect', function(res){
-  redirects.push(res.headers.location);
-})
-.end(function(err, res){
-  var arr = [];
-  redirects.should.eql(['tobi']);
-  res.text.should.equal('tobi');
-  done();
-});</code></pre></dd>
-                <dt>should redirect to a parent path</dt>
-                <dd><pre><code>var redirects = [];
-request
-.get('http://localhost:3003/relative/sub')
-.on('redirect', function(res){
-  redirects.push(res.headers.location);
-})
-.end(function(err, res){
-  var arr = [];
-  redirects.should.eql(['../tobi']);
-  res.text.should.equal('tobi');
-  done();
-});</code></pre></dd>
-              </dl>
-            </section>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>req.redirects(n)</h1>
-          <dl>
-            <dt>should alter the default number of redirects to follow</dt>
-            <dd><pre><code>var redirects = [];
-request
-.get('http://localhost:3003/')
-.redirects(2)
-.on('redirect', function(res){
-  redirects.push(res.headers.location);
-})
-.end(function(err, res){
-  var arr = [];
-  assert(res.redirect, 'res.redirect');
-  arr.push('/movies');
-  arr.push('/movies/all');
-  redirects.should.eql(arr);
-  res.text.should.match(/Moved Temporarily|Found/);
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>on POST</h1>
-          <dl>
-            <dt>should redirect as GET</dt>
-            <dd><pre><code>var redirects = [];
-request
-.post('http://localhost:3003/movie')
-.send({ name: 'Tobi' })
-.redirects(2)
-.on('redirect', function(res){
-  redirects.push(res.headers.location);
-})
-.end(function(err, res){
-  var arr = [];
-  arr.push('/movies/all/0');
-  redirects.should.eql(arr);
-  res.text.should.equal('first movie page');
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>on 303</h1>
-          <dl>
-            <dt>should redirect with same method</dt>
-            <dd><pre><code>request
-.put('http://localhost:3003/redirect-303')
-.send({msg: &quot;hello&quot;})
-.redirects(1)
-.on('redirect', function(res) {
-  res.headers.location.should.equal('/reply-method')
-})
-.end(function(err, res){
-  res.text.should.equal('method=get');
-  done();
-})</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>on 307</h1>
-          <dl>
-            <dt>should redirect with same method</dt>
-            <dd><pre><code>request
-.put('http://localhost:3003/redirect-307')
-.send({msg: &quot;hello&quot;})
-.redirects(1)
-.on('redirect', function(res) {
-  res.headers.location.should.equal('/reply-method')
-})
-.end(function(err, res){
-  res.text.should.equal('method=put');
-  done();
-})</code></pre></dd>
-          </dl>
-        </section>
-        <section class="suite">
-          <h1>on 308</h1>
-          <dl>
-            <dt>should redirect with same method</dt>
-            <dd><pre><code>request
-.put('http://localhost:3003/redirect-308')
-.send({msg: &quot;hello&quot;})
-.redirects(1)
-.on('redirect', function(res) {
-  res.headers.location.should.equal('/reply-method')
-})
-.end(function(err, res){
-  res.text.should.equal('method=put');
-  done();
-})</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>response</h1>
-      <dl>
-        <dt>should act as a readable stream</dt>
-        <dd><pre><code>var req = request
-  .get('http://localhost:3025')
-  .buffer(false);
-req.end(function(err,res){
-  if (err) return done(err);
-  var trackEndEvent = 0;
-  var trackCloseEvent = 0;
-  res.on('end',function(){
-    trackEndEvent++;
-    trackEndEvent.should.equal(1);
-    trackCloseEvent.should.equal(0);  // close should not have been called
-    done();
-  });
-  res.on('close',function(){
-    trackCloseEvent++;
-  });
-
-  (function(){ res.pause() }).should.not.throw();
-  (function(){ res.resume() }).should.not.throw();
-  (function(){ res.destroy() }).should.not.throw();
-});</code></pre></dd>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>.timeout(ms)</h1>
-      <dl>
-        <section class="suite">
-          <h1>when timeout is exceeded</h1>
-          <dl>
-            <dt>should error</dt>
-            <dd><pre><code>request
-.get('http://localhost:3009/500')
-.timeout(150)
-.end(function(err, res){
-  assert(err, 'expected an error');
-  assert('number' == typeof err.timeout, 'expected an error with .timeout');
-  assert('ECONNABORTED' == err.code, 'expected abort error code')
-  done();
-});</code></pre></dd>
-          </dl>
-        </section>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>res.toError()</h1>
-      <dl>
-        <dt>should return an Error</dt>
-        <dd><pre><code>request
-.get('http://localhost:' + server.address().port)
-.end(function(err, res){
-  var err = res.toError();
-  assert(err.status == 400);
-  assert(err.method == 'GET');
-  assert(err.path == '/');
-  assert(err.message == 'cannot GET / (400)');
-  assert(err.text == 'invalid json');
-  done();
-});</code></pre></dd>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>req.get()</h1>
-      <dl>
-        <dt>should set a default user-agent</dt>
-        <dd><pre><code>request
-.get('http://localhost:3345/ua')
-.end(function(err, res){
-  assert(res.headers);
-  assert(res.headers['user-agent']);
-  assert(/^node-superagent\/\d+\.\d+\.\d+$/.test(res.headers['user-agent']));
-  done();
-});</code></pre></dd>
-        <dt>should be able to override user-agent</dt>
-        <dd><pre><code>request
-.get('http://localhost:3345/ua')
-.set('User-Agent', 'foo/bar')
-.end(function(err, res){
-  assert(res.headers);
-  assert(res.headers['user-agent'] == 'foo/bar');
-  done();
-});</code></pre></dd>
-        <dt>should be able to wipe user-agent</dt>
-        <dd><pre><code>request
-.get('http://localhost:3345/ua')
-.unset('User-Agent')
-.end(function(err, res){
-  assert(res.headers);
-  assert(res.headers['user-agent'] == void 0);
-  done();
-});</code></pre></dd>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>utils.type(str)</h1>
-      <dl>
-        <dt>should return the mime type</dt>
-        <dd><pre><code>utils.type('application/json; charset=utf-8')
-  .should.equal('application/json');
-utils.type('application/json')
-  .should.equal('application/json');</code></pre></dd>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>utils.params(str)</h1>
-      <dl>
-        <dt>should return the field parameters</dt>
-        <dd><pre><code>var str = 'application/json; charset=utf-8; foo  = bar';
-var obj = utils.params(str);
-obj.charset.should.equal('utf-8');
-obj.foo.should.equal('bar');
-var str = 'application/json';
-utils.params(str).should.eql({});</code></pre></dd>
-      </dl>
-    </section>
-    <section class="suite">
-      <h1>utils.parseLinks(str)</h1>
-      <dl>
-        <dt>should parse links</dt>
-        <dd><pre><code>var str = '&lt;https://api.github.com/repos/visionmedia/mocha/issues?page=2&gt;; rel=&quot;next&quot;, &lt;https://api.github.com/repos/visionmedia/mocha/issues?page=5&gt;; rel=&quot;last&quot;';
-var ret = utils.parseLinks(str);
-ret.next.should.equal('https://api.github.com/repos/visionmedia/mocha/issues?page=2');
-ret.last.should.equal('https://api.github.com/repos/visionmedia/mocha/issues?page=5');</code></pre></dd>
-      </dl>
-    </section>
-    </div>
-    <a href="http://github.com/visionmedia/superagent"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://s3.amazonaws.com/github/ribbons/forkme_right_white_ffffff.png" alt="Fork me on GitHub"></a>
-  </body>
-</html>
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/node_modules/superagent/node_modules/form-data/Readme.md
+++ /dev/null
@@ -1,210 +0,0 @@
-# Form-Data [![Join the chat at https://gitter.im/form-data/form-data](http://form-data.github.io/images/gitterbadge.svg)](https://gitter.im/form-data/form-data) [![Build Status](https://img.shields.io/travis/form-data/form-data/master.svg)](https://travis-ci.org/form-data/form-data) [![Dependency Status](https://img.shields.io/david/form-data/form-data.svg)](https://david-dm.org/form-data/form-data)
-
-A library to create readable ```"multipart/form-data"``` streams. Can be used to submit forms and file uploads to other web applications.
-
-The API of this library is inspired by the [XMLHttpRequest-2 FormData Interface][xhr2-fd].
-
-[xhr2-fd]: http://dev.w3.org/2006/webapi/XMLHttpRequest-2/Overview.html#the-formdata-interface
-[streams2-thing]: http://nodejs.org/api/stream.html#stream_compatibility_with_older_node_versions
-
-## Install
-
-```
-npm install form-data
-```
-
-## Usage
-
-In this example we are constructing a form with 3 fields that contain a string,
-a buffer and a file stream.
-
-``` javascript
-var FormData = require('form-data');
-var fs = require('fs');
-
-var form = new FormData();
-form.append('my_field', 'my value');
-form.append('my_buffer', new Buffer(10));
-form.append('my_file', fs.createReadStream('/foo/bar.jpg'));
-```
-
-Also you can use http-response stream:
-
-``` javascript
-var FormData = require('form-data');
-var http = require('http');
-
-var form = new FormData();
-
-http.request('http://nodejs.org/images/logo.png', function(response) {
-  form.append('my_field', 'my value');
-  form.append('my_buffer', new Buffer(10));
-  form.append('my_logo', response);
-});
-```
-
-Or @mikeal's [request](https://github.com/request/request) stream:
-
-``` javascript
-var FormData = require('form-data');
-var request = require('request');
-
-var form = new FormData();
-
-form.append('my_field', 'my value');
-form.append('my_buffer', new Buffer(10));
-form.append('my_logo', request('http://nodejs.org/images/logo.png'));
-```
-
-In order to submit this form to a web application, call ```submit(url, [callback])``` method:
-
-``` javascript
-form.submit('http://example.org/', function(err, res) {
-  // res – response object (http.IncomingMessage)  //
-  res.resume();
-});
-
-```
-
-For more advanced request manipulations ```submit()``` method returns ```http.ClientRequest``` object, or you can choose from one of the alternative submission methods.
-
-### Alternative submission methods
-
-You can use node's http client interface:
-
-``` javascript
-var http = require('http');
-
-var request = http.request({
-  method: 'post',
-  host: 'example.org',
-  path: '/upload',
-  headers: form.getHeaders()
-});
-
-form.pipe(request);
-
-request.on('response', function(res) {
-  console.log(res.statusCode);
-});
-```
-
-Or if you would prefer the `'Content-Length'` header to be set for you:
-
-``` javascript
-form.submit('example.org/upload', function(err, res) {
-  console.log(res.statusCode);
-});
-```
-
-To use custom headers and pre-known length in parts:
-
-``` javascript
-var CRLF = '\r\n';
-var form = new FormData();
-
-var options = {
-  header: CRLF + '--' + form.getBoundary() + CRLF + 'X-Custom-Header: 123' + CRLF + CRLF,
-  knownLength: 1
-};
-
-form.append('my_buffer', buffer, options);
-
-form.submit('http://example.com/', function(err, res) {
-  if (err) throw err;
-  console.log('Done');
-});
-```
-
-Form-Data can recognize and fetch all the required information from common types of streams (```fs.readStream```, ```http.response``` and ```mikeal's request```), for some other types of streams you'd need to provide "file"-related information manually:
-
-``` javascript
-someModule.stream(function(err, stdout, stderr) {
-  if (err) throw err;
-
-  var form = new FormData();
-
-  form.append('file', stdout, {
-    filename: 'unicycle.jpg',
-    contentType: 'image/jpg',
-    knownLength: 19806
-  });
-
-  form.submit('http://example.com/', function(err, res) {
-    if (err) throw err;
-    console.log('Done');
-  });
-});
-```
-
-For edge cases, like POST request to URL with query string or to pass HTTP auth credentials, object can be passed to `form.submit()` as first parameter:
-
-``` javascript
-form.submit({
-  host: 'example.com',
-  path: '/probably.php?extra=params',
-  auth: 'username:password'
-}, function(err, res) {
-  console.log(res.statusCode);
-});
-```
-
-In case you need to also send custom HTTP headers with the POST request, you can use the `headers` key in first parameter of `form.submit()`:
-
-``` javascript
-form.submit({
-  host: 'example.com',
-  path: '/surelynot.php',
-  headers: {'x-test-header': 'test-header-value'}
-}, function(err, res) {
-  console.log(res.statusCode);
-});
-```
-
-### Integration with other libraries
-
-#### Request
-
-Form submission using  [request](https://github.com/request/request):
-
-```javascript
-var formData = {
-  my_field: 'my_value',
-  my_file: fs.createReadStream(__dirname + '/unicycle.jpg'),
-};
-
-request.post({url:'http://service.com/upload', formData: formData}, function(err, httpResponse, body) {
-  if (err) {
-    return console.error('upload failed:', err);
-  }
-  console.log('Upload successful!  Server responded with:', body);
-});
-```
-
-For more details see [request readme](https://github.com/request/request#multipartform-data-multipart-form-uploads).
-
-#### node-fetch
-
-You can also submit a form using [node-fetch](https://github.com/bitinn/node-fetch):
-
-```javascript
-var form = new FormData();
-
-form.append('a', 1);
-
-fetch('http://example.com', { method: 'POST', body: form })
-    .then(function(res) {
-        return res.json();
-    }).then(function(json) {
-        console.log(json);
-    });
-```
-
-## Notes
-
-- ```getLengthSync()``` method DOESN'T calculate length for streams, use ```knownLength``` options as workaround.
-- If it feels like FormData hangs after submit and you're on ```node-0.10```, please check [Compatibility with Older Node Versions][streams2-thing]
-
-## License
-
-Form-Data is licensed under the MIT license.
deleted file mode 100644
--- a/node_modules/alfred/node_modules/tunnel-agent/README.md
+++ /dev/null
@@ -1,4 +0,0 @@
-tunnel-agent
-============
-
-HTTP proxy tunneling agent. Formerly part of mikeal/request, now a standalone module.
deleted file mode 100644
deleted file mode 100644
new file mode 100644
--- /dev/null
+++ b/node_modules/alfred/services/s3/src/date.js
@@ -0,0 +1,30 @@
+'use strict';
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+
+var _formatters;
+
+function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
+
+/**
+ * DateUtils
+ */
+
+var YYYYMMDD = 'yyyymmdd';
+var ISO8601 = 'iso8601';
+var AMZ_ISO8601 = 'amz-iso8601';
+
+var formatters = (_formatters = {}, _defineProperty(_formatters, ISO8601, function (date) {
+  return date.toISOString();
+}), _defineProperty(_formatters, YYYYMMDD, function (date) {
+  return formatters[ISO8601](date).slice(0, 10).replace(/-/g, "");
+}), _defineProperty(_formatters, AMZ_ISO8601, function (date) {
+  return formatters[YYYYMMDD](date) + 'T000000Z';
+}), _formatters);
+
+var dateToString = exports.dateToString = function dateToString(date) {
+  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ISO8601;
+  return formatters[format](date);
+};
new file mode 100644
--- /dev/null
+++ b/node_modules/alfred/services/s3/src/policy.js
@@ -0,0 +1,117 @@
+'use strict';
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+
+var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
+
+var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
+
+function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
+
+/**
+ * S3Policy
+ */
+
+var CryptoJS = require('crypto-js');
+var Buffer = global.Buffer || require('buffer').Buffer;
+
+var _require = require('./date'),
+    dateToString = _require.dateToString;
+
+var FIVE_MINUTES = 5 * (60 * 1000);
+
+var AWS_ACL = "public-read";
+var AWS_SERVICE_NAME = "s3";
+var AWS_REQUEST_POLICY_VERSION = "aws4_request";
+var AWS_ALGORITHM = "AWS4-HMAC-SHA256";
+
+var DEFAULT_SUCCESS_ACTION_STATUS = "201";
+
+var assert = function assert(object, message) {
+  if (null == object) throw new Error(message);
+};
+
+var S3Policy = module.exports = function () {
+  function S3Policy() {
+    _classCallCheck(this, S3Policy);
+  }
+
+  _createClass(S3Policy, null, [{
+    key: 'generate',
+    value: function generate(options) {
+      options || (options = {});
+
+      assert(options.key, "Must provide `key` option with the object key");
+      assert(options.bucket, "Must provide `bucket` option with your AWS bucket name");
+      assert(options.contentType, "Must provide `contentType` option with the object content type");
+      assert(options.region, "Must provide `region` option with your AWS region");
+      assert(options.date, "Must provide `date` option with the current date");
+      assert(options.accessKey, "Must provide `accessKey` option with your AWSAccessKeyId");
+      assert(options.secretKey, "Must provide `secretKey` option with your AWSSecretKey");
+
+      var date = options.date;
+      var timeDelta = options.timeDelta || 0;
+      var policyExpiresIn = FIVE_MINUTES - timeDelta;
+      var expirationDate = new Date(date.getTime() + policyExpiresIn);
+
+      var policyParams = _extends({}, options, {
+        acl: options.acl || AWS_ACL,
+        algorithm: AWS_ALGORITHM,
+        amzDate: dateToString(date, 'amz-iso8601'),
+        yyyymmddDate: dateToString(date, 'yyyymmdd'),
+        expirationDate: dateToString(expirationDate, 'iso8601'),
+        successActionStatus: String(options.successActionStatus || DEFAULT_SUCCESS_ACTION_STATUS)
+      });
+
+      policyParams.credential = [policyParams.accessKey, policyParams.yyyymmddDate, policyParams.region, AWS_SERVICE_NAME, AWS_REQUEST_POLICY_VERSION].join('/');
+
+      var policy = formatPolicyForEncoding(policyParams);
+      var base64EncodedPolicy = getEncodedPolicy(policy);
+      var signature = getSignature(base64EncodedPolicy, policyParams);
+
+      return formatPolicyForRequestBody(base64EncodedPolicy, signature, policyParams);
+    }
+  }]);
+
+  return S3Policy;
+}();
+
+var formatPolicyForRequestBody = function formatPolicyForRequestBody(base64EncodedPolicy, signature, options) {
+  return {
+    "key": options.key,
+    "acl": options.acl,
+    "success_action_status": options.successActionStatus,
+    "Content-Type": options.contentType,
+    "X-Amz-Credential": options.credential,
+    "X-Amz-Algorithm": options.algorithm,
+    "X-Amz-Date": options.amzDate,
+    "Policy": base64EncodedPolicy,
+    "X-Amz-Signature": signature
+  };
+};
+
+var formatPolicyForEncoding = function formatPolicyForEncoding(policy) {
+  return {
+    "expiration": policy.expirationDate,
+    "conditions": [{ "bucket": policy.bucket }, { "key": policy.key }, { "acl": policy.acl }, { "success_action_status": policy.successActionStatus }, { "Content-Type": policy.contentType }, { "x-amz-credential": policy.credential }, { "x-amz-algorithm": policy.algorithm }, { "x-amz-date": policy.amzDate }]
+  };
+};
+
+var getEncodedPolicy = function getEncodedPolicy(policy) {
+  return new Buffer(JSON.stringify(policy), "utf-8").toString("base64");
+};
+
+var getSignature = function getSignature(base64EncodedPolicy, options) {
+  return CryptoJS.HmacSHA256(base64EncodedPolicy, getSignatureKey(options)).toString(CryptoJS.enc.Hex);
+};
+
+var getSignatureKey = function getSignatureKey(options) {
+  var kDate = CryptoJS.HmacSHA256(options.yyyymmddDate, "AWS4" + options.secretKey);
+  var kRegion = CryptoJS.HmacSHA256(options.region, kDate);
+  var kService = CryptoJS.HmacSHA256(AWS_SERVICE_NAME, kRegion);
+  var kSigning = CryptoJS.HmacSHA256(AWS_REQUEST_POLICY_VERSION, kService);
+
+  return kSigning;
+};
--- a/node_modules/alfred/services/s3/src/s3.js
+++ b/node_modules/alfred/services/s3/src/s3.js
@@ -31,12 +31,18 @@ var
   /** custom errors */
   errors = require(baseDir + '/core/errors'),
 
-// FIXME: comment this import
+  // logging service
+  log = require(baseDir + '/services/logger'),
+
+  // FIXME: comment this import
   util = require(baseDir + '/services/util'),
 
   /** configuration manager */
   configLoader = require(baseDir + '/services/configLoader'),
 
+  /** s3 policy maker */
+  S3Policy = require('./policy'),
+
   /**
    * amazon s3 credentials & config
    * @type {Object}
@@ -135,7 +141,10 @@ exports.getUploadUrl = function(file, options) {
     s3 = new aws.S3({ computeChecksums: true }),
     params = {
       Key: file.key,
-      ContentType: file.mime,
+      ContentType: 'multipart/form-data',
+      // ContentType: file.mime,
+      // Expires: 60 * 3, // expires in 3 min
+      // Size: file.size,
       Bucket: config.S3_BUCKET,
       ACL: options.acl || file.acl || config.S3_DEFAULT_ACL
     };
@@ -210,70 +219,34 @@ exports.uploadStream = function(stream, options) {
  * @returns {$q.promise}
  */
 exports.getUploadUrlWithPolicy = function(file, options) {
-  var
-    deferred = $q.defer(),
+  log.debug('creating upload url wih policy');
 
-  // access level for the file on the bucket
-    acl = options.acl || file.acl || config.S3_DEFAULT_ACL,
-
-  // the key to access the resource in the bucket
-    key = file.key,
-
-  // the expiration date of the signed url
-    expiration = new Date();
-
-  // set the expiration date 15 min from now
-  expiration.setMinutes(expiration.getMinutes() + 15);
-
-  // format the date and time expirations for the policy
-  var p1 = moment.utc(expiration).format('YYYY-MM-DD') + 'T';
-  var p2 = moment.utc(expiration).format('HH:mm:ss.SSS') + 'Z';
-
-  // combine the policy expirations
-  expiration = p1 + p2;
-
-  // build the JSON policy
-  var policy = {
-    expiration: expiration,
-    conditions: [
-      { bucket: config.S3_BUCKET },
-      { acl: acl },
-      [
-        'starts-with',
-        '$key',
-        ''
-      ],
-      [
-        'starts-with',
-        '$Content-Type',
-        ''
-      ],
-      [
-        'content-length-range',
-        0,
-        524288000
-      ]
-    ]
+  var deferred = $q.defer();
+  var keyPrefix = '';
+  var options = {
+    keyPrefix: keyPrefix,
+    bucket: config.S3_BUCKET,
+    region: config.S3_REGION,
+    accessKey: config.S3_ACCESS_KEY_ID,
+    secretKey: config.S3_SECRET_ACCESS_KEY,
+    successActionStatus: 201,
+    key: keyPrefix + file.key,
+    date: new Date,
+    contentType: file.mime
   };
 
-  // stringify the policy, base64 it, and sign it w/ crypto
-  var stringPolicy = JSON.stringify(policy);
-  var policyBase64 = Buffer(stringPolicy).toString('base64');
-  var signature = crypto
-    .createHmac('sha1', config.S3_SECRET_ACCESS_KEY)
-    .update(new Buffer(policyBase64)).digest('base64');
+  log.debug('prepared options', options);
+  log.debug('S3Policy.generate', S3Policy.generate, '');
+
+  var policy = S3Policy.generate(options);
+  var uploadUrl = 'https://' + config.S3_BUCKET + '.s3.amazonaws.com';
+
+  log.debug('got policy', policy);
 
   // send back the signed url and the policy info
   deferred.resolve({
-    uploadUrl: 'https://' + config.S3_BUCKET + '.s3-us-west-2.amazonaws.com',
-    policy: {
-      key: key,
-      AWSAccessKeyId: config.S3_ACCESS_KEY_ID,
-      acl: acl,
-      policy: policyBase64,
-      signature: signature,
-      'Content-Type': file.mime
-    }
+    uploadUrl: uploadUrl,
+    policy: policy
   });
 
   return deferred.promise;
deleted file mode 100644
deleted file mode 100644
deleted file mode 100644
deleted file mode 100644
--- a/node_modules/alfred/test/api/auth/login.spec.js
+++ /dev/null
@@ -1,42 +0,0 @@
-module.exports = [{
-  description: 'should NOT require authorization',
-  url: '/v1/auth/login',
-  method: 'POST',
-  expectStatus: 400,
-}, {
-  description: 'should allow email / password login',
-  url: '/v1/auth/login',
-  method: 'POST',
-  $$send: {
-    email: '{{ user-0.email }}',
-    password: 'password',
-    type: 'ios'
-  },
-  expectStatus: 200,
-  $$expectKeyValue: {
-    _id: '{{ user-0._id }}',
-    'sessions[0].type': 'ios',
-  },
-}, {
-  description: 'should allow setting the `pushToken` on login',
-  url: '/v1/auth/login',
-  method: 'POST',
-  $$send: {
-    email: '{{ user-0.email }}',
-    password: 'password',
-    type: 'android',
-    pushToken: '123'
-  },
-  expectStatus: 200,
-  $$expectKeyValue: {
-    _id: '{{ user-0._id }}',
-    'sessions[0].type': 'android',
-    'sessions[0].pushToken': '123'
-  },
-  /*
-  after: function(ctrllr, response) {
-    console.log('response.status', response.status);
-    console.log('response.body', response.body);
-  },
-  */
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/auth/logout.spec.js
+++ /dev/null
@@ -1,67 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  path: '/v1/auth/logout',
-  expectStatus: 401,
-}, {
-  description: 'should remove the session from the user',
-  path: '/v1/auth/logout',
-  $$basicAuth: 'user-0',
-  expectStatus: 204,
-  $$assertModel: {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $then: function(user, ctrllr) {
-      var
-        expected,
-        actual;
-
-      expected = 1;
-      actual = user.sessions.length;
-      ctrllr.assert('should have 1 session left', function() {
-        return expected === actual;
-      }, expected, actual);
-    },
-  },
-}, {
-  description: 'should remove sessions with the same push token',
-  path: '/v1/auth/logout',
-  $$basicAuth: 'user-0',
-  $$modifyModel: [{
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $update: {
-      $set: {
-        'sessions.0.pushToken': 'abcd',
-      },
-    },
-  }, {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $update: {
-      $push: {
-        sessions: {
-          $each: [{
-            type: 'android',
-            pushToken: 'abcd',
-          }],
-        },
-      },
-    },
-  }],
-  expectStatus: 204,
-  $$assertModel: {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $then: function(user, ctrllr) {
-      var
-        expected,
-        actual;
-
-      expected = 1;
-      actual = user.sessions.length;
-      ctrllr.assert('should have 1 session left', function() {
-        return expected === actual;
-      }, expected, actual);
-    },
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/notification/list.spec.js
+++ /dev/null
@@ -1,57 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  method: 'GET',
-  path: '/v1/notifications',
-  expectStatus: 401
-}, {
-  description: 'should only return notifications for the authenticated user',
-  method: 'GET',
-  path: '/v1/notifications',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  expectArray: true,
-  $$expectInArray: {
-    'should return at least 1 notification where the authenticated user is the `to`': function(value, ctrllr) {
-      return value.to.toString() === ctrllr.getStore().get('user-0')._id.toString();
-    }
-  },
-  $$expectNone: {
-    'should NOT return any notifications where the authenticated user is NOT the `to`': function(value, ctrllr) {
-      return value.to.toString() !== ctrllr.getStore().get('user-0')._id.toString();
-    }
-  }
-}, {
-  description: 'should only return read notifications if `isRead=true` is set in the query parameters',
-  method: 'GET',
-  path: '/v1/notifications?isRead=true',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  expectArray: true,
-  $$expectInArray: {
-    'should return at least 1 notification where `isRead=true`': function(value, ctrllr) {
-      return value.isRead === true;
-    }
-  },
-  $$expectNone: {
-    'should NOT return any notifications where `isRead=false`': function(value, ctrllr) {
-      return value.isRead === false;
-    }
-  }
-}, {
-  description: 'should only return unread notifications if `isRead=false` is set in the query parameters',
-  method: 'GET',
-  path: '/v1/notifications?isRead=false',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  expectArray: true,
-  $$expectInArray: {
-    'should return at least 1 notification where `isRead=false`': function(value, ctrllr) {
-      return value.isRead === false;
-    }
-  },
-  $$expectNone: {
-    'should NOT return any notifications where `isRead=true`': function(value, ctrllr) {
-      return value.isRead === true;
-    }
-  }
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/notification/markAsRead.spec.js
+++ /dev/null
@@ -1,95 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  method: 'PATCH',
-  path: '/v1/notifications',
-  expectStatus: 401
-}, {
-  description: 'should return status 403 (forbidden) if one or more of the notifications in the list don\'t belong to the authenticated user',
-  method: 'PATCH',
-  path: '/v1/notifications',
-  $$basicAuth: 'user-0',
-  $$send: {
-    ids: [
-      '{{ notification-0._id }}',
-      '{{ notification-3._id }}',
-      '{{ notification-4._id }}',
-    ]
-  },
-  expectStatus: 403,
-}, {
-  description: 'should return status 403 (forbidden) if all the notifications in the list don\'t belong to the authenticated user',
-  method: 'PATCH',
-  path: '/v1/notifications',
-  $$basicAuth: 'user-0',
-  $$send: {
-    ids: [
-      '{{ notification-4._id }}',
-      '{{ notification-5._id }}',
-    ]
-  },
-  expectStatus: 403
-}, {
-  description: 'should return status 304 (resource not modified) if the `ids` array is empty',
-  method: 'PATCH',
-  path: '/v1/notifications',
-  $$basicAuth: 'user-0',
-  $$send: {
-    ids: []
-  },
-  expectStatus: 304
-}, {
-  description: 'should mark the notifications as read on success',
-  method: 'PATCH',
-  path: '/v1/notifications',
-  $$basicAuth: 'user-0',
-  $$send: {
-    ids: [
-      '{{ notification-0._id }}',
-      '{{ notification-1._id }}',
-      '{{ notification-2._id }}',
-    ]
-  },
-  expectStatus: 204,
-  $$assertModel: {
-    $model: 'notification',
-    $query: {
-      _id: {
-        $in: [
-          '{{ notification-0._id }}',
-          '{{ notification-1._id }}',
-          '{{ notification-2._id }}',
-        ]
-      }
-    },
-    $values: {
-      isRead: true
-    }
-  }
-}, {
-  description: 'should NOT mark notifications not specified as read on success',
-  method: 'PATCH',
-  path: '/v1/notifications',
-  $$basicAuth: 'user-0',
-  $$send: {
-    ids: [
-      '{{ notification-0._id }}',
-      '{{ notification-1._id }}',
-      '{{ notification-2._id }}',
-    ]
-  },
-  expectStatus: 204,
-  $$assertModel: {
-    $model: 'notification',
-    $query: {
-      _id: {
-        $in: [
-          '{{ notification-4._id }}',
-          '{{ notification-5._id }}',
-        ]
-      }
-    },
-    $values: {
-      isRead: false
-    }
-  }
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/resource/completeUpload.spec.js
+++ /dev/null
@@ -1,40 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  method: 'POST',
-  $$url: '/v1/resources/{{ randomObjectId }}/files/{{ randomObjectId }}/completeUpload',
-  expectStatus: 401,
-}, {
-  description: 'should return status 404 (resource not found) if the resource doesn\'t exit',
-  method: 'POST',
-  $$url: '/v1/resources/{{ randomObjectId }}/files/{{ randomObjectId }}/completeUpload',
-  $$basicAuth: 'user-0',
-  expectStatus: 404,
-}, {
-  description: 'should return status 404 (resource not found) if the file doesn\'t exit in the resource',
-  method: 'POST',
-  $$url: '/v1/resources/{{ resource-0._id }}/files/{{ randomObjectId }}/completeUpload',
-  $$basicAuth: 'user-0',
-  expectStatus: 404,
-}, {
-  description: 'should return status 403 (forbidden) if the resource doesn\'t belong to the authenticated user',
-  method: 'POST',
-  $$url: '/v1/resources/{{ resource-0._id }}/files/{{ resource-0.files[0]._id }}/completeUpload',
-  $$basicAuth: 'user-1',
-  expectStatus: 403,
-}, {
-  description: 'should return update the file status to `ready`',
-  method: 'POST',
-  $$url: '/v1/resources/{{ resource-0._id }}/files/{{ resource-0.files[0]._id }}/completeUpload',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  $$expectKeyValue: {
-    'files[0].status': 'ready',
-  },
-  $$assertModel: {
-    $model: 'resource',
-    $_id: '{{ resource-0._id }}',
-    $values: {
-      'files[0].status': 'ready',
-    },
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/resource/create.spec.js
+++ /dev/null
@@ -1,393 +0,0 @@
-/* ==========================================================================
-   internal & imported variables
-   ========================================================================== */
-
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** async flow lib */
-  $q = require('q'),
-
-  /** file system modyle */
-  fs = require('fs'),
-
-  /** logging service */
-  log = require(baseDir + '/services/logger'),
-
-  /** server utilities */
-  util = require(baseDir + '/services/util');
-
-/* ==========================================================================
-   Exports - test configuration
-   ========================================================================== */
-
-module.exports = [{
-  description: 'should require authorization',
-  method: 'POST',
-  path: '/v1/resources',
-  expectStatus: 401
-}, {
-  description: 'should return 400 (bad request) if `mime` not sent',
-  method: 'POST',
-  path: '/v1/resources',
-  $$basicAuth: 'user-0',
-  expectStatus: 400,
-  send: {
-    size: 1024,
-    type: 'userAvatar',
-  }
-}, {
-  description: 'should return 400 (bad request) if `size` not sent',
-  method: 'POST',
-  path: '/v1/resources',
-  $$basicAuth: 'user-0',
-  expectStatus: 400,
-  send: {
-    mime: 'image/jpeg',
-    type: 'userAvatar',
-  }
-}, {
-  description: 'should return 400 (bad request) if `type` not sent',
-  method: 'POST',
-  path: '/v1/resources',
-  $$basicAuth: 'user-0',
-  expectStatus: 400,
-  send: {
-    size: 1024,
-    mime: 'image/jpeg'
-  }
-}, {
-  description: 'should return 400 (bad request) if `type` in not in enums',
-  method: 'POST',
-  path: '/v1/resources',
-  $$basicAuth: 'user-0',
-  expectStatus: 400,
-  send: {
-    size: 1024,
-    mime: 'image/jpeg',
-    type: 'asdf',
-  }
-}, {
-  description: 'should succeed if `name` not sent',
-  method: 'POST',
-  path: '/v1/resources',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  send: {
-    size: 1024,
-    mime: 'image/jpeg',
-    type: 'userAvatar',
-  }
-}, {
-  description: 'should create a resource with the specified parameters',
-  method: 'POST',
-  path: '/v1/resources',
-  $$basicAuth: 'user-0',
-  send: {
-    name: 'testing name',
-    type: 'userAvatar',
-    size: 2323,
-    mime: 'image/jpeg'
-  },
-  expectStatus: 200,
-  expectKeys: [
-    '_id',
-    'creator',
-    'name',
-    'files',
-    'files[0]._id',
-    'files[0].key',
-    'files[0].status',
-    'files[0].acl',
-    'files[0].type',
-    'files[0].size',
-    'files[0].meta.uploadUrl'
-  ],
-  expectKeyValue: {
-    name: 'testing name',
-    type: 'userAvatar',
-    'files[0].size': 1024,
-    'files[0].mime': 'image/jpeg',
-    'files[0].type': 'original',
-  },
-  after: function(ctrllr, response) {
-    console.log('response.status', response.status);
-    console.log('response.body', response.body);
-  },
-}, {
-  description: 'should create a resource with a nested file object',
-  method: 'POST',
-  path: '/v1/resources',
-  $$basicAuth: 'user-0',
-  send: {
-    size: 2323,
-    mime: 'image/jpeg',
-    type: 'userAvatar',
-  },
-  expectStatus: 200,
-  expectKeys: [
-    '_id',
-    'creator._id',
-    'files',
-    'files[0]._id',
-    'files[0].key',
-    'files[0].status',
-    'files[0].acl',
-    'files[0].mime',
-    'files[0].type',
-    'files[0].size',
-    'files[0].meta.uploadUrl'
-  ]
-}, {
-  description: 'should return a nested file with an `uploadUrl` that can be uploaded to',
-  method: 'POST',
-  url: '/v1/resources',
-  $$basicAuth: 'user-0',
-  send: {
-    size: 2323,
-    mime: 'image/jpeg',
-    type: 'userAvatar',
-  },
-  after: function(ctrllr, response) {
-    var
-      deferred = $q.defer(),
-      req = require('request'),
-      stats = fs.statSync(baseDir + '/bin/text-icon.png'),
-      payload = {
-        url: response.body.files[0].meta.uploadUrl,
-        headers: {
-          'Content-Type': 'image/jpeg',
-          'Content-Length': 2323
-        },
-        formData: {
-          file: fs.createReadStream(baseDir + '/bin/text-icon.png')
-        }
-      };
-
-    req.put(payload, function(err, httpResponse, body) {
-      ctrllr.assert('should have uploaded without errors', function() {
-        return err ? false : true;
-      });
-
-      if (err) {
-        return deferred.reject(err);
-      }
-
-      ctrllr.assert('should return a proper status from amazon', function() {
-        return httpResponse.statusCode >= 200 && httpResponse.statusCode < 400;
-      });
-
-      return deferred.resolve(true);
-    });
-
-    return deferred.promise;
-  }
-}, {
-  description: 'should provide an aws policy when specifying the `addPolicy` query parameter',
-  method: 'POST',
-  url: '/v1/resources?addPolicy=true',
-  $$basicAuth: 'user-0',
-  send: {
-    size: 2323,
-    mime: 'image/jpeg',
-    type: 'userAvatar',
-  },
-  expectStatus: 200,
-  expectKeys: [
-    '_id',
-    'creator._id',
-    'files',
-    'files[0]._id',
-    'files[0].key',
-    'files[0].status',
-    'files[0].acl',
-    'files[0].type',
-    'files[0].size',
-    'files[0].meta.policy',
-    'files[0].meta.uploadUrl'
-  ],
-  after: function(ctrllr, response) {
-    var
-      deferred = $q.defer(),
-      FormData = require('form-data'),
-      policy = response.body.files[0].meta.policy || {},
-      form = new FormData();
-
-    for (var key in policy) {
-      form.append(key, policy[key]);
-    }
-
-    form.append('file', fs.createReadStream(baseDir + '/bin/text-icon.png'));
-    form.submit(response.body.files[0].meta.uploadUrl, function(err, res) {
-      ctrllr.assert('should have uploaded without errors', !err);
-      ctrllr.assert('should return a proper status from amazon', function() {
-        return res.statusCode >= 200 && res.statusCode < 400;
-      });
-
-      deferred.resolve(true);
-    });
-
-    return deferred.promise;
-  }
-}, {
-  description: 'should allow specifying the acl as a query parameter',
-  method: 'POST',
-  url: '/v1/resources?acl=' + encodeURIComponent('public-read'),
-  $$basicAuth: 'user-0',
-  send: {
-    size: 2323,
-    mime: 'image/jpeg',
-    type: 'userAvatar',
-  },
-  expectStatus: 200,
-  expectKeyValue: {
-    'files[0].acl': 'public-read'
-  },
-  tags: [
-    'resource.create'
-  ],
-  after: function(ctrllr, response) {
-    var
-      deferred = $q.defer(),
-      req = require('request'),
-      stats = fs.statSync(baseDir + '/bin/text-icon.zip'),
-      payload = {
-        url: response.body.files[0].meta.uploadUrl,
-        headers: {
-          'Content-Type': 'image/jpeg',
-          'Content-Length': 2323
-        },
-        formData: {
-          file: fs.createReadStream(baseDir + '/bin/text-icon.png')
-        }
-      };
-
-    req.put(payload, function(err, httpResponse, body) {
-      ctrllr.assert('should have uploaded without errors', function() {
-        return err ? false : true;
-      });
-
-      if (err) {
-        return deferred.reject(err);
-      }
-
-      ctrllr.assert('should return a proper status from amazon', function() {
-        return httpResponse.statusCode >= 200 && httpResponse.statusCode < 400;
-      });
-
-      return deferred.resolve(true);
-    });
-
-    return deferred.promise;
-  }
-}, {
-  description: 'should allow uploading zip files',
-  method: 'POST',
-  url: '/v1/resources?addPolicy=true',
-  $$basicAuth: 'user-0',
-  send: {
-    size: 2131,
-    mime: 'application/zip',
-    type: 'userAvatar',
-  },
-  expectStatus: 200,
-  expectKeys: [
-    '_id',
-    'creator',
-    'files',
-    'files[0]._id',
-    'files[0].key',
-    'files[0].status',
-    'files[0].acl',
-    'files[0].type',
-    'files[0].size',
-    'files[0].meta.policy',
-    'files[0].meta.uploadUrl'
-  ],
-  after: function(ctrllr, response) {
-    var
-      deferred = $q.defer(),
-      FormData = require('form-data'),
-      policy = response.body.files[0].meta.policy || {},
-      form = new FormData(),
-      uploadUrl = response.body.files[0].meta.uploadUrl;
-
-    for (var key in policy) {
-      form.append(key, policy[key]);
-    }
-
-    form.append('file', fs.createReadStream(baseDir + '/bin/text-icon.zip'));
-
-    log.debug('created form', form);
-
-    form.submit(uploadUrl, function(err, res) {
-      ctrllr.assert('should have uploaded without errors', function() {
-        if (err) {
-          console.log('error uploading', err);
-          return false;
-        }
-
-        return true;
-      });
-      ctrllr.assert('should return a proper status from amazon', function() {
-        return res && res.statusCode && res.statusCode >= 200 && res.statusCode < 400;
-      });
-
-      deferred.resolve(true);
-    });
-
-    return deferred.promise;
-  }
-}, {
-  description: 'should allow uploading mp4 files',
-  method: 'POST',
-  url: '/v1/resources?addPolicy=true',
-  $$basicAuth: 'user-0',
-  send: {
-    size: 381927,
-    mime: 'video/mp4',
-    type: 'userAvatar',
-  },
-  expectStatus: 200,
-  after: function(ctrllr, response) {
-    var
-      deferred = $q.defer(),
-      FormData = require('form-data'),
-      policy = response.body.files[0].meta.policy || {},
-      form = new FormData(),
-      uploadUrl = response.body.files[0].meta.uploadUrl;
-
-    for (var key in policy) {
-      form.append(key, policy[key]);
-    }
-
-    form.append('file', fs.createReadStream(baseDir + '/bin/video.mp4'));
-
-    log.debug('created form', form);
-
-    form.submit(uploadUrl, function(err, res) {
-      ctrllr.assert('should have uploaded without errors', function() {
-        if (err) {
-          console.log('error uploading', err);
-          return false;
-        }
-
-        return true;
-      });
-
-      ctrllr.assert('should return a proper status from amazon', function() {
-        console.log('status code', res ? res.statusCode : null);
-        return res && res.statusCode && res.statusCode >= 200 && res.statusCode < 400;
-      });
-
-      deferred.resolve(true);
-    });
-
-    return deferred.promise;
-  }
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/resource/delete.spec.js
+++ /dev/null
@@ -1,121 +0,0 @@
-/* ==========================================================================
-   internal & imported variables
-   ========================================================================== */
-
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** async flow lib */
-  $q = require('q'),
-
-  /** http request module */
-  request = require('superagent'),
-
-  /** logging service */
-  log = require(baseDir + '/services/logger'),
-
-  /** server utilities */
-  util = require(baseDir + '/services/util'),
-
-  /** configuration loader */
-  configLoader = require(baseDir + '/services/configLoader'),
-
-  /** s3 wrapper */
-  s3 = require(baseDir + '/services/s3');
-
-/* ==========================================================================
-   Exports - helper functions
-   ========================================================================== */
-
-function uploadResourceToS3(resource) {
-  var
-    deferred = $q.defer(),
-    filePath = baseDir + '/bin/text-icon.jpg';
-
-  s3.uploadFileFromPath(filePath, {
-    Key: resource.files[0].key,
-  }).then(function() {
-    return deferred.resolve();
-  }).fail(function(err) {
-    log.warn('Error uploading file to S3.', err);
-    return deferred.reject(err);
-  })
-
-  return deferred.promise;
-}
-
-/* ==========================================================================
-   Exports - test configuration
-   ========================================================================== */
-
-module.exports = [{
-  description: 'should require authorization',
-  $$url: '/v1/resources/{{ resource-0._id }}',
-  method: 'DEL',
-  expectStatus: 401,
-}, {
-  description: 'should return status 404 (resource not found) if the resource doesn\'t exist',
-  $$url: '/v1/resources/{{ randomObjectId }}',
-  method: 'DEL',
-  $$basicAuth: 'user-0',
-  expectStatus: 404,
-}, {
-  description: 'should return status 403 (forbidden) if the resource doesn\'t belong to the authenticated user',
-  $$url: '/v1/resources/{{ resource-0._id }}',
-  method: 'DEL',
-  $$basicAuth: 'user-1',
-  expectStatus: 403,
-}, {
-  description: 'should return remove the resource on success',
-  $$url: '/v1/resources/{{ resource-0._id }}',
-  method: 'DEL',
-  $$basicAuth: 'user-0',
-  expectStatus: 204,
-  $$assertModel: {
-    $model: 'resource',
-    $_id: '{{ resource-0._id }}',
-    $then: function(resource, ctrllr) {
-      ctrllr.assert('should have removed the resource', function() {
-        return resource ? false : true;
-      });
-    },
-  },
-}, {
-  description: 'should remove the resource from s3',
-  $$url: '/v1/resources/{{ resource-0._id }}',
-  method: 'DEL',
-  $$basicAuth: 'user-0',
-  before: function(ctrllr, request) {
-    var
-      store = ctrllr.getStore(),
-      resource = store.get('resource-0');
-
-    return uploadResourceToS3(resource, {
-      Key: resource.key,
-    });
-  },
-  expectStatus: 204,
-  after: function(ctrllr, response) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      resource = store.get('resource-0'),
-      file = resource.files[0],
-      url = file.url;
-
-    request.get(url, function(err, res) {
-      ctrllr.assert('should have deleted the object from s3', function() {
-        return (err || (!res || !res.status || res.status !== 200)) ? true : false;
-      });
-
-      return deferred.resolve(true);
-    });
-
-    return deferred.promise;
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/resource/find.spec.js
+++ /dev/null
@@ -1,19 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  $$url: '/v1/resources/{{ resource-0._id }}',
-  expectStatus: 401,
-}, {
-  description: 'should return status 404 (resource not found) if the resource doesn\'t exist',
-  $$url: '/v1/resources/{{ randomObjectId }}',
-  $$basicAuth: 'user-0',
-  expectStatus: 404,
-}, {
-  description: 'should return the specified resource',
-  $$url: '/v1/resources/{{ resource-0._id }}',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  $$expectKeyValue: {
-    _id: '{{ resource-0._id }}',
-    type: '{{ resource-0.type }}',
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/self/requestTemporaryPasswordByPhone.spec.js
+++ /dev/null
@@ -1,38 +0,0 @@
-function getModifyPayload() {
-  return {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $update: {
-      phone: '8052424858',
-    },
-  };
-}
-
-module.exports = [{
-  description: 'should require authorization',
-  path: '/v1/self/resetPassword/phone',
-  method: 'POST',
-  expectStatus: 401,
-}, {
-  description: 'should return status 403 (forbidden) if no phone set on user account',
-  path: '/v1/self/resetPassword/phone',
-  method: 'POST',
-  $$basicAuth: 'user-0',
-  expectStatus: 403,
-}, {
-  description: 'should set a verification code on the user',
-  path: '/v1/self/resetPassword/phone',
-  method: 'POST',
-  $$basicAuth: 'user-0',
-  $$modifyModel: getModifyPayload(),
-  expectStatus: 204,
-  $$assertModel: [{
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $values: {
-      verificationCode: function(value) {
-        return typeof value !== 'undefined';
-      },
-    },
-  }],
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/self/requestVerificationTokenByPhone.spec.js
+++ /dev/null
@@ -1,30 +0,0 @@
-function getPayload() {
-  return {
-    phone: '8052424858',
-  };
-}
-
-module.exports = [{
-  description: 'should require authorization',
-  path: '/v1/self/verify/phone',
-  method: 'POST',
-  send: getPayload(),
-  expectStatus: 401,
-}, {
-  description: 'should set a verification code and phone on the user',
-  path: '/v1/self/verify/phone',
-  method: 'POST',
-  $$basicAuth: 'user-0',
-  send: getPayload(),
-  expectStatus: 204,
-  $$assertModel: {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $values: {
-      phone: getPayload().phone,
-      verificationCode: function(value) {
-        return typeof value !== 'undefined';
-      },
-    },
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/self/resetPassword.spec.js
+++ /dev/null
@@ -1,74 +0,0 @@
-function getPayload() {
-  return {
-    code: '12345',
-    password: 'abcde',
-  }
-}
-
-module.exports = [{
-  description: 'should require authorization',
-  path: '/v1/self/resetPassword',
-  method: 'POST',
-  send: getPayload(),
-  expectStatus: 401,
-}, {
-  description: 'should return status 403 (forbidden) if no verification code set on the user',
-  path: '/v1/self/resetPassword',
-  method: 'POST',
-  $$basicAuth: 'user-0',
-  send: getPayload(),
-  expectStatus: 403,
-}, {
-  description: 'should return status 400 (bad request) if verification code doesn\'t match',
-  path: '/v1/self/resetPassword',
-  method: 'POST',
-  $$basicAuth: 'user-0',
-  $$modifyModel: {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $update: {
-      verificationCode: '54321',
-    },
-  },
-  send: getPayload(),
-  expectStatus: 400,
-}, {
-  description: 'should update the user\'s password on success',
-  path: '/v1/self/resetPassword',
-  method: 'POST',
-  $$basicAuth: 'user-0',
-  $$modifyModel: {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $update: {
-      verificationCode: '12345',
-    },
-  },
-  send: getPayload(),
-  expectStatus: 204,
-  $$assertModel: {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $then: function(user, ctrllr) {
-      var deferred = require('q').defer();
-
-      user.comparePassword(getPayload().password)
-        .then(function(result) {
-          console.log('user.password', user.password);
-          ctrllr.assert('should have hashed the password', function() {
-            return result === true;
-          });
-        })
-        .fail(function(err) {
-          ctrllr.assert('should have hashed the password', function() {
-            return false; // an error occurred
-          });
-        })
-        .finally(function() {
-          return deferred.resolve(true);
-        });
-
-      return deferred.promise;
-    },
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/self/updateSessionPushToken.spec.js
+++ /dev/null
@@ -1,54 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  $$url: '/v1/self/sessions/{{ randomObjectId }}',
-  method: 'PUT',
-  send: { pushToken: '12345' },
-  expectStatus: 401
-}, {
-  description: 'should return status 404 (resource not found) if the session id doesn\'t exist',
-  $$url: '/v1/self/sessions/{{ randomObjectId }}',
-  method: 'PUT',
-  $$basicAuth: 'user-0',
-  send: { pushToken: '12345' },
-  expectStatus: 404,
-  after: function(ctrllr, response) {
-    console.log('response.status', response.status);
-  },
-}, {
-  description: 'should return status 404 (resource not found) if the session id doesn\'t belong to the user',
-  $$url: '/v1/self/sessions/{{ user-1.sessions[0]._id }}',
-  method: 'PUT',
-  $$basicAuth: 'user-0',
-  send: { pushToken: '12345' },
-  expectStatus: 404
-}, {
-  description: 'should update the session\'s push token on success',
-  $$url: '/v1/self/sessions/{{ user-0.sessions[0]._id }}',
-  method: 'PUT',
-  $$basicAuth: 'user-0',
-  send: { pushToken: '12345' },
-  expectStatus: 204,
-  $$assertModel: {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $values: {
-      'sessions[0].pushToken': '12345'
-    }
-  }
-}, {
-  description: 'should NOT update any other session push tokens on the user',
-  $$url: '/v1/self/sessions/{{ user-0.sessions[0]._id }}',
-  method: 'PUT',
-  $$basicAuth: 'user-0',
-  send: { pushToken: '12345' },
-  expectStatus: 204,
-  $$assertModel: {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $values: {
-      'sessions[1].pushToken': function(value) {
-        return value !== '12345';
-      }
-    }
-  }
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/self/user.spec.js
+++ /dev/null
@@ -1,17 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  path: '/v1/self',
-  expectStatus: 401,
-}, {
-  description: 'should return the authenticated user\'s account',
-  path: '/v1/self',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  expectKeys: [
-    'password',
-  ],
-  $$expectKeyValue: {
-    _id: '{{ user-0._id }}',
-    email: '{{ user-0._email }}',
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/self/verify.spec.js
+++ /dev/null
@@ -1,37 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  path: '/v1/self/verify',
-  method: 'POST',
-  expectStatus: 401,
-}, {
-  description: 'should require the `code` field',
-  path: '/v1/self/verify',
-  method: 'POST',
-  $$basicAuth: 'user-0',
-  expectStatus: 400,
-}, {
-  description: 'should verify the user\'s account',
-  path: '/v1/self/verify',
-  method: 'POST',
-  $$basicAuth: 'user-0',
-  $$modifyModel: {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $update: {
-      verificationCode: '1234',
-    },
-  },
-  send: {
-    code: '1234',
-  },
-  expectStatus: 200,
-  $$assertModel: {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $values: {
-      badges: function(value) {
-        return value.indexOf('verified') > -1;
-      },
-    },
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/user/create.spec.js
+++ /dev/null
@@ -1,50 +0,0 @@
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** server utilities */
-  util = require(baseDir + '/services/util');
-
-function getPayload(ctrllr) {
-  return {
-    email: util.random(10) + '@email.com',
-    password: util.random(10),
-    firstName: util.random(10),
-    lastName: util.random(10),
-    birthday: new Date(),
-  };
-}
-
-module.exports = [{
-  description: 'should NOT require authorization',
-  path: '/v1/users',
-  method: 'POST',
-  $$send: getPayload,
-  expectStatus: 200,
-}, {
-  description: 'should require the email field',
-  path: '/v1/users',
-  method: 'POST',
-  $$send: function(ctrllr) {
-    var payload = getPayload(ctrllr);
-    delete payload.email;
-    return payload;
-  },
-  expectStatus: 400,
-}, {
-  description: 'should hash the password & set the `fullName` property',
-  path: '/v1/users',
-  method: 'POST',
-  $$send: getPayload,
-  expectStatus: 200,
-  $$expectKeyValue: {
-    fullName: '<%"{{ payload.firstName }} {{ payload.lastName }}".toLowerCase()%>',
-    password: {
-      $ne: '{{ payload.password }}',
-    },
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/user/delete.spec.js
+++ /dev/null
@@ -1,31 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  $$url: '/v1/users/{{ user-0._id }}',
-  method: 'DEL',
-  expectStatus: 401,
-}, {
-  description: 'should return status 404 (resource not found) if the user doesn\'t exist',
-  $$url: '/v1/users/{{ randomObjectId }}',
-  method: 'DEL',
-  $$basicAuth: 'user-0',
-  expectStatus: 404,
-}, {
-  description: 'should return status 403 (forbidden) if a user tries to delete anothe user\'s account',
-  $$url: '/v1/users/{{ user-1._id }}',
-  method: 'DEL',
-  $$basicAuth: 'user-0',
-  expectStatus: 403,
-}, {
-  description: 'should set a user\'s account to `deleted` on success',
-  $$url: '/v1/users/{{ user-0._id }}',
-  method: 'DEL',
-  $$basicAuth: 'user-0',
-  expectStatus: 204,
-  $$assertModel: {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $values: {
-      status: 'deleted',
-    },
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/user/find.spec.js
+++ /dev/null
@@ -1,21 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  $$url: '/v1/users/{{ user-0._id }}',
-  expectStatus: 401,
-}, {
-  description: 'should return status 404 (resource not found) if the user doesn\'t exist',
-  $$url: '/v1/users/{{ randomObjectId }}',
-  $$basicAuth: 'user-0',
-  expectStatus: 404,
-}, {
-  description: 'should return the specified user',
-  $$url: '/v1/users/{{ user-0._id }}',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  $$expectKeyValue: {
-    _id: '{{ user-0._id }}',
-    firstName: '{{ user-0.firstName }}',
-    lastName: '{{ user-0.lastName }}',
-    fullName: '{{ user-0.fullName }}',
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/user/follow.spec.js
+++ /dev/null
@@ -1,62 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  method: 'POST',
-  $$url: '/v1/users/{{ user-0._id }}/follow',
-  expectStatus: 401,
-}, {
-  description: 'should return status 404 (resource not found) if the user doesn\'t exist',
-  method: 'POST',
-  $$url: '/v1/users/{{ randomObjectId }}/follow',
-  $$basicAuth: 'user-0',
-  expectStatus: 404,
-}, {
-  description: 'should return status 403 (forbidden) if the user tries to follow itself',
-  method: 'POST',
-  $$url: '/v1/users/{{ user-0._id }}/follow',
-  $$basicAuth: 'user-0',
-  expectStatus: 403,
-}, {
-  description: 'should return status 304 (resource not modified) if the user is already following the target user',
-  method: 'POST',
-  $$url: '/v1/users/{{ user-0._id }}/follow',
-  $$basicAuth: 'user-1',
-  expectStatus: 304,
-}, {
-  description: 'should create a `follow` on success',
-  method: 'POST',
-  $$url: '/v1/users/{{ user-1._id }}/follow',
-  $$basicAuth: 'user-0',
-  expectStatus: 204,
-  $$assertModel: [{
-    $model: 'follow',
-    $query: {
-      creator: '{{ user-0._id }}',
-      targetUser: '{{ user-1._id }}',
-    },
-    $then: function(results, ctrllr) {
-      ctrllr.assert('should have created a `follow` object', function() {
-        return results && results.length === 1;
-      });
-    },
-  }]
-}, {
-  description: 'should increment the user\'s `numFollowing` and the target user\'s `numFollowers`',
-  method: 'POST',
-  $$url: '/v1/users/{{ user-1._id }}/follow',
-  $$basicAuth: 'user-0',
-  expectStatus: 204,
-  $$reloadStore: true,
-  $$assertModel: [{
-    $model: 'user',
-    $_id: '{{ user-1._id }}',
-    $values: {
-      numFollowers: 1,
-    },
-  }, {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $values: {
-      numFollowing: 1,
-    },
-  }],
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/user/followers.spec.js
+++ /dev/null
@@ -1,27 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  $$url: '/v1/users/{{ user-0._id }}/followers',
-  method: 'GET',
-  expectStatus: 401,
-}, {
-  description: 'should return an array of a user\'s followers',
-  $$url: '/v1/users/{{ user-0._id }}/followers',
-  method: 'GET',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  expectArray: true,
-  $$expectInArray: {
-    'should have returned `user-1`': function(follow, ctrllr) {
-      return follow.creator._id === ctrllr.getStore().get('user-1')._id.toString();
-    },
-
-    'should have returned `user-2`': function(follow, ctrllr) {
-      return follow.creator._id === ctrllr.getStore().get('user-2')._id.toString();
-    },
-  },
-  $$expectNone: {
-    'should NOT have returned `user-3`': function(follow, ctrllr) {
-      return follow.creator._id === ctrllr.getStore().get('user-3')._id.toString();
-    },
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/user/following.spec.js
+++ /dev/null
@@ -1,29 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  $$url: '/v1/users/{{ user-1._id }}/following',
-  method: 'GET',
-  expectStatus: 401,
-}, {
-  description: 'should return an array of a users the target user is following',
-  $$url: '/v1/users/{{ user-1._id }}/following',
-  method: 'GET',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  expectArray: true,
-  $$expectInArray: {
-    'should have returned `user-0`': function(follow, ctrllr) {
-      return follow.targetUser._id === ctrllr.getStore().get('user-0')._id.toString();
-    },
-  },
-  $$expectNone: {
-    'should NOT have returned `user-1`': function(follow, ctrllr) {
-      return follow.targetUser._id === ctrllr.getStore().get('user-1')._id.toString();
-    },
-    'should NOT have returned `user-2`': function(follow, ctrllr) {
-      return follow.targetUser._id === ctrllr.getStore().get('user-2')._id.toString();
-    },
-    'should NOT have returned `user-3`': function(follow, ctrllr) {
-      return follow.targetUser._id === ctrllr.getStore().get('user-3')._id.toString();
-    },
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/user/list.spec.js
+++ /dev/null
@@ -1,161 +0,0 @@
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** fields to return */
-  whitelistFields = require(baseDir + '/models/user/config/populate');
-
-module.exports = [{
-  description: 'should require authorization',
-  method: 'GET',
-  path: '/v1/users',
-  expectStatus: 401,
-}, {
-  description: 'should return an array of users',
-  method: 'GET',
-  path: '/v1/users',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  expectArray: true,
-}, {
-  description: 'shouldn\'t return sensitive data',
-  method: 'GET',
-  path: '/v1/users',
-  $$basicAuth: 'user-0',
-  expectStatus: 200,
-  $$expectNone: {
-    'should not return any sensitive fields': function(user) {
-      var
-        nonSensitiveFields = Object.keys(whitelistFields),
-        hasSensitiveField = false;
-
-      Object.keys(user).forEach(function(key) {
-        if (nonSensitiveFields.indexOf(key) === -1) {
-          hasSensitiveField = true;
-        }
-      });
-
-      return hasSensitiveField;
-    },
-  },
-}, {
-  description: 'should allow searching users by the first name',
-  method: 'GET',
-  $$basicAuth: 'user-0',
-  before: function(ctrllr, request) {
-    var
-      store = ctrllr.getStore(),
-      user = store.get('user-0'),
-      query = user.firstName.substring(5, 10),
-      url = '/v1/users?search=' + query;
-
-    request.setUrl(url);
-  },
-  expectStatus: 200,
-  expectArray: true,
-  after: function(ctrllr, response) {
-    var
-      body = response.body,
-      store = ctrllr.getStore(),
-      user = store.get('user-0');
-
-    ctrllr.assert('should have returned 1 user', function() {
-      return body && body.length === 1;
-    });
-
-    ctrllr.assert('the user returned should be `user-0`', function() {
-      return body && body[0] && body[0]._id === user._id.toString();
-    });
-  },
-}, {
-  description: 'should allow searching users by the last name',
-  method: 'GET',
-  $$basicAuth: 'user-0',
-  before: function(ctrllr, request) {
-    var
-      store = ctrllr.getStore(),
-      user = store.get('user-1'),
-      query = user.lastName.substring(5, 10),
-      url = '/v1/users?search=' + query;
-
-    request.setUrl(url);
-  },
-  expectStatus: 200,
-  expectArray: true,
-  after: function(ctrllr, response) {
-    var
-      body = response.body,
-      store = ctrllr.getStore(),
-      user = store.get('user-1');
-
-    ctrllr.assert('should have returned 1 user', function() {
-      return body && body.length === 1;
-    });
-
-    ctrllr.assert('the user returned should be `user-1`', function() {
-      return body && body[0] && body[0]._id === user._id.toString();
-    });
-  },
-}, {
-  description: 'should allow searching users by the full name',
-  method: 'GET',
-  $$basicAuth: 'user-0',
-  before: function(ctrllr, request) {
-    var
-      store = ctrllr.getStore(),
-      user = store.get('user-2'),
-      query = user.firstName + ' ' + user.lastName,
-      url = '/v1/users?search=' + query;
-
-    request.setUrl(url);
-  },
-  expectStatus: 200,
-  expectArray: true,
-  after: function(ctrllr, response) {
-    var
-      body = response.body,
-      store = ctrllr.getStore(),
-      user = store.get('user-2');
-
-    ctrllr.assert('should have returned 1 user', function() {
-      return body && body.length === 1;
-    });
-
-    ctrllr.assert('the user returned should be `user-2`', function() {
-      return body && body[0] && body[0]._id === user._id.toString();
-    });
-  },
-}, {
-  description: 'should allow searching users by their email',
-  method: 'GET',
-  $$basicAuth: 'user-0',
-  before: function(ctrllr, request) {
-    var
-      store = ctrllr.getStore(),
-      user = store.get('user-2'),
-      query = user.email,
-      url = '/v1/users?search=' + query;
-
-    request.setUrl(url);
-  },
-  expectStatus: 200,
-  expectArray: true,
-  after: function(ctrllr, response) {
-    var
-      body = response.body,
-      store = ctrllr.getStore(),
-      user = store.get('user-2');
-
-    ctrllr.assert('should have returned 1 user', function() {
-      return body && body.length === 1;
-    });
-
-    ctrllr.assert('the user returned should be `user-2`', function() {
-      return body && body[0] && body[0]._id === user._id.toString();
-    });
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/user/unfollow.spec.js
+++ /dev/null
@@ -1,62 +0,0 @@
-module.exports = [{
-  description: 'should require authorization',
-  method: 'POST',
-  $$url: '/v1/users/{{ user-0._id }}/unfollow',
-  expectStatus: 401,
-}, {
-  description: 'should return status 404 (resource not found) if the user doesn\'t exist',
-  method: 'POST',
-  $$url: '/v1/users/{{ randomObjectId }}/unfollow',
-  $$basicAuth: 'user-0',
-  expectStatus: 404,
-}, {
-  description: 'should return status 403 (forbidden) if the user tries to unfollow itself',
-  method: 'POST',
-  $$url: '/v1/users/{{ user-0._id }}/unfollow',
-  $$basicAuth: 'user-0',
-  expectStatus: 403,
-}, {
-  description: 'should return status 304 (resource not modified) if the user isn\'t already following the target user',
-  method: 'POST',
-  $$url: '/v1/users/{{ user-1._id }}/unfollow',
-  $$basicAuth: 'user-0',
-  expectStatus: 304,
-}, {
-  description: 'should delete existing follows on success',
-  method: 'POST',
-  $$url: '/v1/users/{{ user-0._id }}/unfollow',
-  $$basicAuth: 'user-1',
-  expectStatus: 204,
-  $$assertModel: [{
-    $model: 'follow',
-    $query: {
-      creator: '{{ user-1._id }}',
-      targetUser: '{{ user-0._id }}',
-    },
-    $then: function(results, ctrllr) {
-      ctrllr.assert('should have created a `unfollow` object', function() {
-        return !results || !results.length;
-      });
-    },
-  }]
-}, {
-  description: 'should decrement the user\'s `numFollowing` and the target user\'s `numFollowers`',
-  method: 'POST',
-  $$url: '/v1/users/{{ user-0._id }}/unfollow',
-  $$basicAuth: 'user-1',
-  expectStatus: 204,
-  $$reloadStore: true,
-  $$assertModel: [{
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $values: {
-      numFollowing: 0,
-    },
-  }, {
-    $model: 'user',
-    $_id: '{{ user-1._id }}',
-    $values: {
-      numFollowers: 0,
-    },
-  }],
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/user/update.spec.js
+++ /dev/null
@@ -1,63 +0,0 @@
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** server utilities */
-  util = require(baseDir + '/services/util');
-
-function getPayload(ctrllr) {
-  return {
-    firstName: util.random(10),
-    lastName: util.random(10),
-    postalCode: '00000',
-  };
-}
-
-module.exports = [{
-  description: 'should require authorization',
-  $$url: '/v1/users/{{ user-0._id }}',
-  method: 'PUT',
-  expectStatus: 401,
-}, {
-  description: 'should return status 404 (resource not found) if the user doesn\'t exist',
-  $$url: '/v1/users/{{ randomObjectId }}',
-  method: 'PUT',
-  $$basicAuth: 'user-0',
-  expectStatus: 404,
-}, {
-  description: 'should return status 403 (forbidden) if a user tries to update another user\'s account',
-  $$url: '/v1/users/{{ user-1._id }}',
-  method: 'PUT',
-  $$basicAuth: 'user-0',
-  expectStatus: 403,
-  after: function(ctrllr, response) {
-    console.log('response.status', response.status);
-    console.log('response.body', response.body);
-  }
-}, {
-  description: 'should update the user on success',
-  $$url: '/v1/users/{{ user-0._id }}',
-  method: 'PUT',
-  $$basicAuth: 'user-0',
-  $$send: getPayload,
-  expectStatus: 200,
-  $$expectKeyValue: {
-    firstName: '{{ payload.firstName }}',
-    lastName: '{{ payload.lastName }}',
-    postalCode: '{{ payload.postalCode }}',
-  },
-}, {
-  description: 'should update the user\'s full name',
-  $$url: '/v1/users/{{ user-0._id }}',
-  method: 'PUT',
-  $$basicAuth: 'user-0',
-  $$send: getPayload,
-  expectStatus: 200,
-  $$expectKeyValue: {
-    fullName: '<%"{{ payload.firstName }} {{ payload.lastName }}".toLowerCase()%>',
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/~auth/login.spec.js
+++ /dev/null
@@ -1,44 +0,0 @@
-module.exports = [{
-  description: 'should NOT require authorization',
-  url: '/v1/login',
-  method: 'POST',
-  expectStatus: 400
-}, {
-  description: 'should allow email / password login',
-  url: '/v1/login',
-  method: 'POST',
-  $$send: {
-    email: '{{ user-0.email }}',
-    password: 'password',
-    type: 'ios'
-  },
-  expectStatus: 200,
-  expectKeys: [
-    '_id',
-    'authToken'
-  ],
-  $$expectKeyValue: {
-    _id: '{{ user-0._id }}',
-    'sessions[2].type': 'ios',
-  },
-}, {
-  description: 'should allow setting the `pushToken` on login',
-  url: '/v1/login',
-  method: 'POST',
-  $$send: {
-    email: '{{ user-0.email }}',
-    password: 'password',
-    type: 'ios',
-    pushToken: '123'
-  },
-  expectStatus: 200,
-  expectKeys: [
-    '_id',
-    'authToken'
-  ],
-  $$expectKeyValue: {
-    _id: '{{ user-0._id }}',
-    'sessions[0].type': 'ios',
-    'sessions[0].pushToken': '123'
-  }
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/~notification/list.spec.js
+++ /dev/null
@@ -1,68 +0,0 @@
-module.exports = [
-  {
-    description: 'should require authorization',
-    method: 'GET',
-    path: '/v1/notifications',
-    expectStatus: 401
-  },
-
-
-  {
-    description: 'should only return notifications for the authenticated user',
-    method: 'GET',
-    path: '/v1/notifications',
-    $$basicAuth: 'user-0',
-    expectStatus: 200,
-    expectArray: true,
-    $$expectInArray: {
-      'should return at least 1 notification where the authenticated user is the `to`': function(value, ctrllr) {
-        return value.to.toString() === ctrllr.getStore().get('user-0')._id.toString();
-      }
-    },
-    $$expectNone: {
-      'should NOT return any notifications where the authenticated user is NOT the `to`': function(value, ctrllr) {
-        return value.to.toString() !== ctrllr.getStore().get('user-0')._id.toString();
-      }
-    }
-  },
-
-
-  {
-    description: 'should only return read notifications if `isRead=true` is set in the query parameters',
-    method: 'GET',
-    path: '/v1/notifications?isRead=true',
-    $$basicAuth: 'user-0',
-    expectStatus: 200,
-    expectArray: true,
-    $$expectInArray: {
-      'should return at least 1 notification where `isRead=true`': function(value, ctrllr) {
-        return value.isRead === true;
-      }
-    },
-    $$expectNone: {
-      'should NOT return any notifications where `isRead=false`': function(value, ctrllr) {
-        return value.isRead === false;
-      }
-    }
-  },
-
-
-  {
-    description: 'should only return unread notifications if `isRead=false` is set in the query parameters',
-    method: 'GET',
-    path: '/v1/notifications?isRead=false',
-    $$basicAuth: 'user-0',
-    expectStatus: 200,
-    expectArray: true,
-    $$expectInArray: {
-      'should return at least 1 notification where `isRead=false`': function(value, ctrllr) {
-        return value.isRead === false;
-      }
-    },
-    $$expectNone: {
-      'should NOT return any notifications where `isRead=true`': function(value, ctrllr) {
-        return value.isRead === true;
-      }
-    }
-  },
-];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/~notification/markAsRead.spec.js
+++ /dev/null
@@ -1,115 +0,0 @@
-module.exports = [
-  {
-    description: 'should require authorization',
-    method: 'PATCH',
-    path: '/v1/notifications',
-    expectStatus: 401
-  },
-
-
-  {
-    description: 'should return status 403 (forbidden) if one or more of the notifications in the list don\'t belong to the authenticated user',
-    method: 'PATCH',
-    path: '/v1/notifications',
-    $$basicAuth: 'user-0',
-    $$send: {
-      ids: [
-        '{{ notification-0._id }}',
-        '{{ notification-3._id }}',
-        '{{ notification-4._id }}',
-      ]
-    },
-    expectStatus: 403
-  },
-
-
-  {
-    description: 'should return status 403 (forbidden) if all the notifications in the list don\'t belong to the authenticated user',
-    method: 'PATCH',
-    path: '/v1/notifications',
-    $$basicAuth: 'user-0',
-    $$send: {
-      ids: [
-        '{{ notification-4._id }}',
-        '{{ notification-5._id }}',
-      ]
-    },
-    expectStatus: 403
-  },
-
-
-  {
-    description: 'should return status 304 (resource not modified) if the `ids` array is empty',
-    method: 'PATCH',
-    path: '/v1/notifications',
-    $$basicAuth: 'user-0',
-    $$send: {
-      ids: []
-    },
-    expectStatus: 304
-  },
-
-
-  {
-    description: 'should mark the notifications as read on success',
-    method: 'PATCH',
-    path: '/v1/notifications',
-    $$basicAuth: 'user-0',
-    $$send: {
-      ids: [
-        '{{ notification-0._id }}',
-        '{{ notification-1._id }}',
-        '{{ notification-2._id }}',
-        '{{ notification-3._id }}',
-      ]
-    },
-    expectStatus: 204,
-    $$assertModel: {
-      $model: 'notification',
-      $query: {
-        _id: {
-          $in: [
-            '{{ notification-0._id }}',
-            '{{ notification-1._id }}',
-            '{{ notification-2._id }}',
-            '{{ notification-3._id }}',
-          ]
-        }
-      },
-      $values: {
-        isRead: true
-      }
-    }
-  },
-
-
-  {
-    description: 'should NOT mark notifications not specified as read on success',
-    method: 'PATCH',
-    path: '/v1/notifications',
-    $$basicAuth: 'user-0',
-    $$send: {
-      ids: [
-        '{{ notification-0._id }}',
-        '{{ notification-1._id }}',
-        '{{ notification-2._id }}',
-        '{{ notification-3._id }}',
-      ]
-    },
-    expectStatus: 204,
-    $$assertModel: {
-      $model: 'notification',
-      $query: {
-        _id: {
-          $in: [
-            '{{ notification-4._id }}',
-            '{{ notification-5._id }}',
-          ]
-        }
-      },
-      $values: {
-        isRead: false
-      }
-    }
-  },
-];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/~paymentMethod/create.spec.js
+++ /dev/null
@@ -1,160 +0,0 @@
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** async flow lib */
-  $q = require('q'),
-
-  /** braintree module */
-  braintree = require('braintree'),
-
-  /** braintree wrapper service */
-  $braintree = require(baseDir + '/services/braintree');
-
-module.exports = [
-  {
-    description: 'should require authorization',
-    path: '/v1/paymentMethods',
-    method: 'POST',
-    expectStatus: 401
-  },
-
-
-  {
-    description: 'should create a payment method with the authenticated user as the creator',
-    path: '/v1/paymentMethods',
-    method: 'POST',
-    $$basicAuth: 'user-0',
-    send: {
-      nonce: braintree.Test.Nonces.ApplePayVisa
-    },
-    expectStatus: 200,
-    $$expectKeyValue: {
-      creator: '{{ user-0._id }}'
-    },
-    expectKeys: [
-      'createdDate',
-      'braintreeToken',
-      'imageUrl',
-      'type',
-      'identifier'
-    ]
-  },
-
-
-  {
-    description: 'should return a payment method that can be used for transactions',
-    path: '/v1/paymentMethods',
-    method: 'POST',
-    $$basicAuth: 'user-0',
-    send: {
-      nonce: braintree.Test.Nonces.Transactable
-    },
-    expectStatus: 200,
-    after: function(ctrllr, response) {
-      var
-        deferred = $q.defer(),
-        token = response.body.braintreeToken,
-        result,
-        err;
-
-      $braintree.createTransaction(token, 15.00)
-        .then(function(_result) {
-          result = _result;
-        })
-        .fail(function(_err) {
-          err = _err;
-        })
-        .fin(function() {
-          ctrllr.assert('should have successfully billed the payment method', function() {
-            return result ? true : false;
-          });
-
-          ctrllr.assert('should not return an error when transacting against the payment token', function() {
-            return err ? false : true;
-          });
-
-          return deferred.resolve(true);
-        });
-
-      return deferred.promise;
-    }
-  },
-
-
-  {
-    description: 'should set the new payment method as the default payment method',
-    path: '/v1/paymentMethods',
-    method: 'POST',
-    $$basicAuth: 'user-0',
-    send: {
-      nonce: braintree.Test.Nonces.ApplePayVisa
-    },
-    expectStatus: 200,
-    $$expectKeyValue: {
-      isDefault: true
-    }
-  },
-
-  {
-    description: 'should set all other payment methods belonging to the user to `isDefault=false',
-    path: '/v1/paymentMethods',
-    method: 'POST',
-    $$basicAuth: 'user-0',
-    send: {
-      nonce: braintree.Test.Nonces.ApplePayVisa
-    },
-    expectStatus: 200,
-    after: function(ctrllr, response) {
-      // this NEEDS to run before the $$assertModel.$then function
-      ctrllr.getStore().set('paymentMethod-x', response.body);
-    },
-    $$assertModel: {
-      $model: 'paymentMethod',
-      $query: {
-        creator: '{{ user-0._id }}'
-      },
-      $then: function(results, ctrllr) {
-        var defaults = [];
-        (results || []).forEach(function(paymentMethod) {
-          if (paymentMethod.isDefault) defaults.push(paymentMethod);
-        });
-
-        ctrllr.assert('should only have 1 default payment method on the user', function() {
-          return defaults.length === 1;
-        }, 1, defaults.length);
-
-        var
-          paymentMethod = ctrllr.getStore().get('paymentMethod-x') || {},
-          expectedValue = paymentMethod._id,
-          actualValue = defaults[0]._id.toString();
-
-        ctrllr.assert('should have set the new payment method as the default', function() {
-          return expectedValue === actualValue;
-        }, expectedValue, actualValue);
-      }
-    }
-  },
-
-  {
-    description: 'should NOT affect the default status of any other users\' payment methods',
-    path: '/v1/paymentMethods',
-    method: 'POST',
-    $$basicAuth: 'user-0',
-    send: {
-      nonce: braintree.Test.Nonces.ApplePayVisa
-    },
-    expectStatus: 200,
-    $$assertModel: {
-      $model: 'paymentMethod',
-      $_id: '{{ paymentMethod-3._id }}',
-      $values: {
-        isDefault: true
-      }
-    }
-  },
-];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/~paymentMethod/delete.spec.js
+++ /dev/null
@@ -1,98 +0,0 @@
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** async flow lib */
-  $q = require('q'),
-
-  /** braintree wrapper service */
-  $braintree = require(baseDir + '/services/braintree');
-
-module.exports = [
-  {
-    description: 'should require authorization',
-    method: 'DEL',
-    $$url: '/v1/paymentMethods/{{ randomObjectId }}',
-    expectStatus: 401
-  },
-
-
-  {
-    description: 'should return status 404 (resource not found) if the payment method doesn\'t exist',
-    method: 'DEL',
-    $$url: '/v1/paymentMethods/{{ randomObjectId }}',
-    $$basicAuth: 'user-0',
-    expectStatus: 404
-  },
-
-
-  {
-    description: 'should return status 403 (forbidden) if a user tries to delete a payment method they don\'t own',
-    method: 'DEL',
-    $$url: '/v1/paymentMethods/{{ paymentMethod-2._id }}',
-    $$basicAuth: 'user-0',
-    expectStatus: 403,
-    after: function(ctrllr, response) {
-      console.log('response.status', response.status);
-    }
-  },
-
-
-  {
-    description: 'should delete the payment method on success',
-    method: 'DEL',
-    $$url: '/v1/paymentMethods/{{ paymentMethod-0._id }}',
-    $$basicAuth: 'user-0',
-    expectStatus: 204,
-    $$assertModel: {
-      $model: 'paymentMethod',
-      $query: {
-        _id: '{{ paymentMethod-0._id }}'
-      },
-      $then: function(results, ctrllr) {
-        ctrllr.assert('should have removed the payment method from the database', function() {
-          return results.length === 0;
-        });
-      }
-    }
-  },
-
-
-  {
-    description: 'should delete the payment method from braintree on success',
-    method: 'DEL',
-    $$url: '/v1/paymentMethods/{{ paymentMethod-0._id }}',
-    $$basicAuth: 'user-0',
-    after: function(ctrllr, response) {
-      console.log('got result', response.body);
-      var
-        deferred = $q.defer(),
-        store = ctrllr.getStore(),
-        paymentMethod = store.get('paymentMethod-0'),
-        result,
-        err;
-
-      $braintree.findPaymentMethod(paymentMethod.braintreeToken)
-        .then(function(err, _result) {
-          result = _result;
-        })
-        .fail(function(_err) {
-          err = _err;
-        })
-        .fin(function() {
-          ctrllr.assert('should return a `not found` error from braintree', function() {
-            return (!result && err && err.name && err.name === 'notFoundError') ||
-              (err.message && err.message.toLowerCase() === 'not found');
-          });
-
-          return deferred.resolve(true);
-        });
-
-      return deferred.promise;
-    }
-  }
-];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/~paymentMethod/list.spec.js
+++ /dev/null
@@ -1,27 +0,0 @@
-module.exports = [
-  {
-    description: 'should require authorization',
-    method: 'GET',
-    path: '/v1/paymentMethods',
-    expectStatus: 401
-  },
-
-
-  {
-    description: 'should only return the authenticated users\' paymentMethods',
-    method: 'GET',
-    path: '/v1/paymentMethods',
-    $$basicAuth: 'user-0',
-    expectStatus: 200,
-    $$expectInArray: {
-      'should return payment methods where the creator is `user-0`': function(val, ctrllr) {
-        return val.creator === ctrllr.getStore().get('user-0')._id.toString();
-      }
-    },
-    $$expectNone: {
-      'should NOT return any payment methods where the `creator` isn\'t `user-0`': function(val, ctrllr) {
-        return val.creator !== ctrllr.getStore().get('user-0')._id.toString();
-      }
-    }
-  }
-];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/~paymentMethod/makeDefault.spec.js
+++ /dev/null
@@ -1,126 +0,0 @@
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** async flow lib */
-  $q = require('q'),
-
-  /** braintree module */
-  braintree = require('braintree'),
-
-  /** braintree wrapper service */
-  $braintree = require(baseDir + '/services/braintree');
-
-module.exports = [
-  {
-    description: 'should require authorization',
-    $$url: '/v1/paymentMethods/{{ randomObjectId }}/makeDefault',
-    method: 'POST',
-    expectStatus: 401
-  },
-
-
-  {
-    description: 'should return status 404 (resource not found) if the payment method doesn\'t exist',
-    $$url: '/v1/paymentMethods/{{ randomObjectId }}/makeDefault',
-    method: 'POST',
-    $$basicAuth: 'user-0',
-    expectStatus: 404
-  },
-
-
-  {
-    description: 'should return status 403 (forbidden) if a user tries to access a payment method that doesn\'t belong to them',
-    $$url: '/v1/paymentMethods/{{ paymentMethod-2._id }}/makeDefault',
-    method: 'POST',
-    $$basicAuth: 'user-0',
-    expectStatus: 403
-  },
-
-
-  {
-    description: 'should return status 304 (resource not modified) if the payment method is already the default payment method',
-    $$url: '/v1/paymentMethods/{{ paymentMethod-0._id }}/makeDefault',
-    method: 'POST',
-    $$basicAuth: 'user-0',
-    expectStatus: 304
-  },
-
-
-  {
-    description: 'should set the payment method as the default payment method',
-    $$url: '/v1/paymentMethods/{{ paymentMethod-1._id }}/makeDefault',
-    method: 'POST',
-    $$basicAuth: 'user-0',
-    expectStatus: 200,
-    $$expectKeyValue: {
-      _id: '{{ paymentMethod-1._id }}',
-      isDefault: true
-    },
-    $$assertModel: {
-      $model: 'paymentMethod',
-      $_id: '{{ paymentMethod-1._id }}',
-      $values: {
-        isDefault: true
-      }
-    }
-  },
-
-
-  {
-    description: 'should set all other payment methods belonging to the user to `isDefault=false',
-    $$url: '/v1/paymentMethods/{{ paymentMethod-1._id }}/makeDefault',
-    method: 'POST',
-    $$basicAuth: 'user-0',
-    expectStatus: 200,
-    after: function(ctrllr, response) {
-      // this NEEDS to run before the $$assertModel.$then function
-      ctrllr.getStore().set('paymentMethod-x', response.body);
-    },
-    $$assertModel: {
-      $model: 'paymentMethod',
-      $query: {
-        creator: '{{ user-0._id }}'
-      },
-      $then: function(results, ctrllr) {
-        var defaults = [];
-        (results || []).forEach(function(paymentMethod) {
-          if (paymentMethod.isDefault) defaults.push(paymentMethod);
-        });
-
-        ctrllr.assert('should only have 1 default payment method on the user', function() {
-          return defaults.length === 1;
-        }, 1, defaults.length);
-
-        var
-          paymentMethod = ctrllr.getStore().get('paymentMethod-x') || {},
-          expectedValue = paymentMethod._id,
-          actualValue = defaults[0]._id.toString();
-
-        ctrllr.assert('should have set the payment method as the default', function() {
-          return expectedValue === actualValue;
-        }, expectedValue, actualValue);
-      }
-    }
-  },
-
-
-  {
-    description: 'should NOT affect the default status of any other users\' payment methods',
-    $$url: '/v1/paymentMethods/{{ paymentMethod-1._id }}/makeDefault',
-    method: 'POST',
-    $$basicAuth: 'user-0',
-    expectStatus: 200,
-    $$assertModel: {
-      $model: 'paymentMethod',
-      $_id: '{{ paymentMethod-3._id }}',
-      $values: {
-        isDefault: true
-      }
-    }
-  },
-];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/~resource/completeUpload.spec.js
+++ /dev/null
@@ -1,8 +0,0 @@
-module.exports = [
-  {
-    description: 'should require authorization',
-    method: 'POST',
-    $$url: '/v1/resources/{{ randomObjectId }}/files/{{ randomObjectId }}/completeUpload',
-    expectStatus: 401
-  }
-];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/~resource/create.spec.js
+++ /dev/null
@@ -1,241 +0,0 @@
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** async flow lib */
-  $q = require('q'),
-
-  /** file system modyle */
-  fs = require('fs');
-
-module.exports = [
-  {
-    description: 'should require authorization',
-    method: 'POST',
-    path: '/v1/resources',
-    expectStatus: 401
-  },
-
-
-  {
-    description: 'should return 400 (bad request) if `type` not sent',
-    method: 'POST',
-    path: '/v1/resources',
-    $$basicAuth: 'user-0',
-    expectStatus: 400,
-    send: {
-      size: 1024
-    }
-  },
-
-
-  {
-    description: 'should return 400 (bad request) if `size` not sent',
-    method: 'POST',
-    path: '/v1/resources',
-    $$basicAuth: 'user-0',
-    expectStatus: 400,
-    send: {
-      type: 'image/jpeg'
-    }
-  },
-
-
-  {
-    description: 'should succeed if `name` or `description` not sent',
-    method: 'POST',
-    path: '/v1/resources',
-    $$basicAuth: 'user-0',
-    expectStatus: 200,
-    send: {
-      size: 1024,
-      type: 'image/jpeg'
-    }
-  },
-
-
-  {
-    description: 'should create a resource with the specified parameters',
-    method: 'POST',
-    path: '/v1/resources',
-    $$basicAuth: 'user-0',
-    send: {
-      name: 'testing name',
-      description: 'testing description',
-      size: 2323,
-      type: 'image/jpeg'
-    },
-    expectStatus: 200,
-    expectKeys: [
-      '_id',
-      'creator',
-      'name',
-      'description',
-      'files',
-      'files[0]._id',
-      'files[0].key',
-      'files[0].status',
-      'files[0].acl',
-      'files[0].type',
-      'files[0].size',
-      'files[0].meta.uploadUrl'
-    ],
-    expectKeyValue: {
-      name: 'testing name',
-      description: 'testing description',
-      'files[0].size': 1024,
-      'files[0].type': 'image/jpeg'
-    }
-  },
-
-
-  {
-    description: 'should create a resource with a nested file object',
-    method: 'POST',
-    path: '/v1/resources',
-    $$basicAuth: 'user-0',
-    send: {
-      size: 2323,
-      type: 'image/jpeg'
-    },
-    expectStatus: 200,
-    expectKeys: [
-      '_id',
-      'creator',
-      'files',
-      'files[0]._id',
-      'files[0].key',
-      'files[0].status',
-      'files[0].acl',
-      'files[0].type',
-      'files[0].size',
-      'files[0].meta.uploadUrl'
-    ]
-  },
-
-
-  {
-    description: 'should return a nested file with an `uploadUrl` that can be uploaded to',
-    method: 'POST',
-    url: '/v1/resources',
-    $$basicAuth: 'user-0',
-    send: {
-      size: 2323,
-      type: 'image/jpeg'
-    },
-    after: function(ctrllr, response) {
-      var
-        deferred = $q.defer(),
-        req = require('request'),
-        stats = fs.statSync(baseDir + '/bin/text-icon.png'),
-        payload = {
-          url: response.body.files[0].meta.uploadUrl,
-          headers: {
-            'Content-Type': 'image/jpeg',
-            'Content-Length': 2323
-          },
-          formData: {
-            file: fs.createReadStream(baseDir + '/bin/text-icon.png')
-          }
-        };
-
-      req.put(payload, function(err, httpResponse, body) {
-        ctrllr.assert('should have uploaded without errors', function() {
-          return err ? false : true;
-        });
-
-        if (err) {
-          return deferred.reject(err);
-        }
-
-        ctrllr.assert('should return a proper status from amazon', function() {
-          return httpResponse.statusCode >= 200 && httpResponse.statusCode < 400;
-        });
-
-        return deferred.resolve(true);
-      });
-
-      return deferred.promise;
-    }
-  },
-
-
-  {
-    description: 'should provide an aws policy when specifying the `addPolicy` query parameter',
-    method: 'POST',
-    url: '/v1/resources?addPolicy=true',
-    $$basicAuth: 'user-0',
-    send: {
-      size: 2323,
-      type: 'image/jpeg'
-    },
-    expectStatus: 200,
-    expectKeys: [
-      '_id',
-      'creator',
-      'files',
-      'files[0]._id',
-      'files[0].key',
-      'files[0].status',
-      'files[0].acl',
-      'files[0].type',
-      'files[0].size',
-      'files[0].meta.policy',
-      'files[0].meta.uploadUrl'
-    ],
-    after: function(ctrllr, response) {
-      var
-        deferred = $q.defer(),
-        FormData = require('form-data'),
-        policy = response.body.files[0].meta.policy || {},
-        form = new FormData();
-
-      for (var key in policy) {
-        form.append(key, policy[key]);
-      }
-
-      form.append('file', fs.createReadStream(baseDir + '/bin/text-icon.png'));
-      form.submit(response.body.files[0].meta.uploadUrl, function(err, res) {
-        /*
-        var body = '';
-        res.on('data', function(chunk) {
-          body += chunk;
-        });
-        res.on('end', function() {
-          console.log(body);
-        });
-        */
-
-        ctrllr.assert('should have uploaded without errors', !err);
-        ctrllr.assert('should return a proper status from amazon', function() {
-          return res.statusCode >= 200 && res.statusCode < 400;
-        });
-
-        deferred.resolve(true);
-      });
-
-      return deferred.promise;
-    }
-  },
-
-
-  {
-    description: 'should allow specifying the acl as a query parameter',
-    method: 'POST',
-    url: '/v1/resources?acl=' + encodeURIComponent('public-read'),
-    $$basicAuth: 'user-0',
-    send: {
-      size: 2323,
-      type: 'image/jpeg'
-    },
-    expectStatus: 200,
-    expectKeyValue: {
-      'files[0].acl': 'public-read'
-    }
-  }
-
-];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/~resource/list.spec.js
+++ /dev/null
@@ -1,20 +0,0 @@
-module.exports = [
-  {
-    description: 'should require authorization',
-    method: 'GET',
-    path: '/v1/resources',
-    expectStatus: 401
-  },
-
-
-  {
-    description: 'should only return the authenticated users\' resources',
-    method: 'GET',
-    path: '/v1/resources',
-    $$basicAuth: 'user-0',
-    expectStatus: 200,
-    $$expectKeyValue: {
-      creator: '{{ user-0._id }}'
-    }
-  }
-];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/~self/requestBraintreeToken.spec.js
+++ /dev/null
@@ -1,32 +0,0 @@
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** async flow lib */
-  $q = require('q'),
-
-  /** braintree service wrapper */
-  braintree = require(baseDir + '/services/braintree');
-
-module.exports = [
-  {
-    description: 'should NOT require authorization',
-    method: 'GET',
-    path: '/v1/self/requestPaymentToken',
-    expectStatus: 200
-  },
-
-
-  {
-    description: 'should return a valid Braintree token that can be used to create a payment method',
-    method: 'GET',
-    path: '/v1/self/requestPaymentToken',
-    $$basicAuth: 'user-0',
-    expectStatus: 200,
-    expectKeys: ['token']
-  }
-];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/api/~self/updateSessionPushToken.spec.js
+++ /dev/null
@@ -1,71 +0,0 @@
-module.exports = [
-  {
-    description: 'should require authorization',
-    $$url: '/v1/self/sessions/{{ randomObjectId }}',
-    method: 'PUT',
-    send: { pushToken: '12345' },
-    expectStatus: 401
-  },
-
-
-  {
-    description: 'should return status 404 (resource not found) if the session id doesn\'t exist',
-    $$url: '/v1/self/sessions/{{ randomObjectId }}',
-    method: 'PUT',
-    $$basicAuth: 'user-0',
-    send: { pushToken: '12345' },
-    expectStatus: 404
-  },
-
-
-  {
-    description: 'should return status 404 (resource not found) if the session id doesn\'t belong to the user',
-    $$url: '/v1/self/sessions/{{ user-1.sessions[0]._id }}',
-    method: 'PUT',
-    $$basicAuth: 'user-0',
-    send: { pushToken: '12345' },
-    expectStatus: 404
-  },
-
-
-  {
-    description: 'should update the session\'s push token on success',
-    $$url: '/v1/self/sessions/{{ user-0.sessions[0]._id }}',
-    method: 'PUT',
-    $$basicAuth: 'user-0',
-    send: { pushToken: '12345' },
-    expectStatus: 200,
-    $$expectKeyValue: {
-      'sessions[0].pushToken': '12345'
-    },
-    $$assertModel: {
-      $model: 'user',
-      $_id: '{{ user-0._id }}',
-      $values: {
-        'sessions[0].pushToken': '12345'
-      }
-    }
-  },
-
-
-  {
-    description: 'should NOT update any other session push tokens on the user',
-    $$url: '/v1/self/sessions/{{ user-0.sessions[0]._id }}',
-    method: 'PUT',
-    $$basicAuth: 'user-0',
-    send: { pushToken: '12345' },
-    expectStatus: 200,
-    $$expectKeyValue: {
-      'sessions[0].pushToken': '12345'
-    },
-    $$assertModel: {
-      $model: 'user',
-      $_id: '{{ user-0._id }}',
-      $values: {
-        'sessions[1].pushToken': function(value) {
-          return value !== '12345';
-        }
-      }
-    }
-  },
-];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/ctrllr.afterEach.js
+++ /dev/null
@@ -1,145 +0,0 @@
-/* ==========================================================================
- This script exports an array of functions to be called after each test
- ========================================================================== */
-
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** async flow lib */
-  $q = require('q'),
-
-  /** server utilities */
-  util = require(baseDir + '/services/util'),
-
-  /** logging service */
-  log = new require('ctrl-logger')({ publish: false }),
-
-  /** configuration manager */
-  configLoader = require(baseDir + '/services/configLoader'),
-
-  /** mongoose models */
-  User, Resource, PaymentMethod, Notification;
-
-/* ==========================================================================
- Initialization logic
- ========================================================================== */
-
-configLoader.init().then(function() {
-  User = require(baseDir + '/models/user');
-  Resource = require(baseDir + '/models/resource');
-  PaymentMethod = require(baseDir + '/models/paymentMethod');
-  Notification = require(baseDir + '/models/notification');
-});
-
-/* ==========================================================================
- Export
- ========================================================================== */
-
-module.exports = [
-  /**
-   * clear all users from database
-   * @param ctrllr {CTRLLR} CTRLLR instance
-   * @param response {Object} response object of request
-   * @returns {*}
-   */
-    function(ctrllr, response) {
-    // log.info('Running test cleanup: cleaning projects');
-
-    var deferred = $q.defer();
-
-    User.remove(function(err) {
-      if (err) {
-        return deferred.reject(err);
-      }
-
-      return deferred.resolve(true);
-    });
-
-    return deferred.promise;
-  },
-
-
-  /**
-   * clear all resources from database
-   * @param ctrllr {CTRLLR} CTRLLR instance
-   * @param response {Object} response object of request
-   * @returns {*}
-   */
-    function(ctrllr, response) {
-    // log.info('Running test cleanup: cleaning projects');
-
-    var deferred = $q.defer();
-
-    Resource.remove(function(err) {
-      if (err) {
-        return deferred.reject(err);
-      }
-
-      return deferred.resolve(true);
-    });
-
-    return deferred.promise;
-  },
-
-
-  /**
-   * clear all payment methods from database
-   * @param ctrllr {CTRLLR} CTRLLR instance
-   * @param response {Object} response object of request
-   * @returns {*}
-   */
-    function(ctrllr, response) {
-    // log.info('Running test cleanup: cleaning projects');
-
-    var deferred = $q.defer();
-
-    PaymentMethod.remove(function(err) {
-      if (err) {
-        return deferred.reject(err);
-      }
-
-      return deferred.resolve(true);
-    });
-
-    return deferred.promise;
-  },
-
-
-  /**
-   * clear all notifications from database
-   * @param ctrllr {CTRLLR} CTRLLR instance
-   * @param response {Object} response object of request
-   * @returns {*}
-   */
-    function(ctrllr, response) {
-    // log.info('Running test cleanup: cleaning projects');
-
-    var deferred = $q.defer();
-
-    Notification.remove(function(err) {
-      if (err) {
-        return deferred.reject(err);
-      }
-
-      return deferred.resolve(true);
-    });
-
-    return deferred.promise;
-  },
-
-  /**
-   * empties data store
-   * @param ctrllr {CTRLLR} CTRLLR instance
-   * @param response {Object} response object of request
-   * @returns {*}
-   */
-    function(ctrllr, response) {
-    // empty data store
-    ctrllr.getStore().clear();
-  }
-];
deleted file mode 100644
--- a/node_modules/alfred/test/ctrllr.beforeEach.js
+++ /dev/null
@@ -1,717 +0,0 @@
-/* ==========================================================================
- This script exports an array of functions to be called before each test
- ========================================================================== */
-
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** async flow lib */
-  $q = require('q'),
-
-  /** logging service */
-  log = new require('ctrl-logger')({ publish: false }),
-
-  /** braintree module */
-  braintree = require('braintree'),
-
-  /** server utilities */
-  util = require(baseDir + '/services/util'),
-
-  /** configuration manager */
-  configLoader = require(baseDir + '/services/configLoader'),
-
-  /** braintree service wrapper */
-  $braintree = require(baseDir + '/services/braintree'),
-
-  /** mongo ORM */
-  mongoose = require('mongoose'),
-
-  /** mongoose models */
-  User, Resource, PaymentMethod, Notification, Follow, File;
-
-/* ==========================================================================
- Initialization logic
- ========================================================================== */
-
-configLoader.init().then(function() {
-  User = require(baseDir + '/models/user');
-  Resource = require(baseDir + '/models/resource');
-  PaymentMethod = require(baseDir + '/models/paymentMethod');
-  Notification = require(baseDir + '/models/notification');
-  Follow = require(baseDir + '/models/follow');
-  File = require(baseDir + '/models/file');
-});
-
-/* ==========================================================================
- Helper Functions
- ========================================================================== */
-
-/**
- * creates a generic User
- * @returns {User}
- */
-function createUser() {
-  var
-    firstName = util.random(10),
-    lastName = util.random(10);
-
-  return new User({
-    firstName: firstName,
-    lastName: lastName,
-    fullName: firstName + ' ' + lastName,
-    email: util.random(10) + '@gmail.com',
-    password: 'password',
-    birthday: new Date(),
-    sessions: [{
-      type: 'web'
-    }, {
-      type: 'ios'
-    }],
-    avatarUrl: 'http://' + configLoader.get('s3:S3_BUCKET') +
-      '.s3.amazonaws.com/assets/test/text-icon.png',
-  });
-}
-
-/**
- * creates a generic Resource
- * @returns {Resource}
- */
-function createResource() {
-  return createResourceWithJPG();
-}
-
-/**
- * creates a generic Resource
- * @returns {Resource}
- */
-function createResourceWithJPG() {
-  var fileName = configLoader.get('NODE_ENV') + '/' + util.uuid() + '.jpg';
-  // fileName = 'assets/test/text-icon.png';
-
-  return new Resource({
-    name: util.random(10),
-    description: 'userAvatar',
-    files: [new File({
-      key: fileName,
-      size: 3017,
-      mime: 'image/jpeg',
-      acl: 'public-read',
-      status: 'ready',
-      type: 'original',
-    })]
-  });
-}
-
-/**
- * creates a generic PaymentMethod
- * @returns {PaymentMethod}
- */
-function createPaymentMethod() {
-  return new PaymentMethod();
-}
-
-function configAndSavePaymentMethod(paymentMethod, braintreeNonce, user) {
-  var deferred = $q.defer();
-
-  $braintree.createPaymentMethod(user.braintreeCustomerId, braintreeNonce)
-    .then(function(result) {
-      var deferred2 = $q.defer();
-
-      paymentMethod.creator = user._id;
-      paymentMethod.braintreeToken = result.paymentMethod.token;
-      paymentMethod.save(function(err, doc) {
-        if (err) {
-          return deferred2.reject(err);
-        }
-
-        return deferred2.resolve(doc);
-      });
-
-      return deferred2.promise;
-    })
-    .then(function(doc) {
-      return deferred.resolve(doc);
-    })
-    .fail(function(err) {
-      return deferred.reject(err);
-    });
-
-  return deferred.promise;
-}
-
-/**
- * creates a generic Notification
- * @returns {Notification}
- */
-function createNotification() {
-  return new Notification({
-    type: 'follow'
-  });
-}
-
-/**
- * creates a generic follow
- * @return {Follow}
- */
-function createFollow() {
-  return new Follow();
-}
-
-/* ==========================================================================
- Export
- ========================================================================== */
-
-module.exports = [
-
-  // create random object id
-  function(ctrllr) {
-    var store = ctrllr.getStore();
-    store.set('randomObjectId', mongoose.Types.ObjectId().toString());
-  },
-
-
-  // create `user-0`
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = createUser();
-
-    user.numFollowers = 2;
-    user.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `user-0` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('user-0', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `user-1`
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = createUser();
-
-    user.numFollowing = 1;
-    user.numFollowers = 1;
-    user.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `user-1` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('user-1', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `user-2`
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = createUser();
-
-    user.numFollowing = 1;
-    user.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `user-2` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('user-2', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `user-3`
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = createUser();
-
-    user.numFollowing = 1;
-    user.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `user-3` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('user-3', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `user-4`
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = createUser();
-
-    user.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `user-4` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('user-4', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `resource-0`, set `user-0` as creator
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-0'),
-      resource = createResource();
-
-    resource.creator = user._id;
-    resource.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `resource-0` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('resource-0', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `resource-1`, set `user-0` as creator
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-0'),
-      resource = createResource();
-
-    resource.creator = user._id;
-    resource.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `resource-1` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('resource-1', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `resource-2`, set `user-0` as creator
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-0'),
-      resource = createResource();
-
-    resource.creator = user._id;
-    resource.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `resource-2` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('resource-2', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `resource-3`, set `user-1` as creator
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-1'),
-      resource = createResource();
-
-    resource.creator = user._id;
-    resource.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `resource-3` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('resource-3', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `resource-4`, set `user-1` as creator
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-4'),
-      resource = createResource();
-
-    resource.creator = user._id;
-    resource.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `resource-4` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('resource-4', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `paymentMethod-0`, add `user-0` as creator
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-0'),
-      paymentMethod = createPaymentMethod(),
-      nonce = braintree.Test.Nonces.ApplePayVisa;
-
-    // set `user-0` as `creator`, make default payment method, create as ApplePay card
-    paymentMethod.isDefault = true;
-    configAndSavePaymentMethod(paymentMethod, nonce, user)
-      .then(function(doc) {
-        // save to data store, resolved async function
-        store.set('paymentMethod-0', doc);
-        deferred.resolve(doc);
-      })
-      .fail(function(err) {
-        console.error('Error creating `paymentMethod-0` in `ctrllr.beforeEach`!', err);
-      });
-
-    return deferred.promise;
-  },
-
-  // create `paymentMethod-1`, add `user-0` as creator
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-0'),
-      paymentMethod = createPaymentMethod(),
-      nonce = braintree.Test.Nonces.Transactable;
-
-    // set `user-0` as `creator`, make default payment method, create as ApplePay card
-    paymentMethod.isDefault = false;
-    configAndSavePaymentMethod(paymentMethod, nonce, user)
-      .then(function(doc) {
-        // save to data store, resolved async function
-        store.set('paymentMethod-1', doc);
-        deferred.resolve(doc);
-      })
-      .fail(function(err) {
-        console.error('Error creating `paymentMethod-1` in `ctrllr.beforeEach`!', err);
-      });
-
-    return deferred.promise;
-  },
-
-  // create `paymentMethod-2`, add `user-1` as creator
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-1'),
-      paymentMethod = createPaymentMethod(),
-      nonce = braintree.Test.Nonces.Transactable;
-
-    // set `user-0` as `creator`, make default payment method, create as ApplePay card
-    paymentMethod.isDefault = true;
-    configAndSavePaymentMethod(paymentMethod, nonce, user)
-      .then(function(doc) {
-        // save to data store, resolved async function
-        store.set('paymentMethod-2', doc);
-        deferred.resolve(doc);
-      })
-      .fail(function(err) {
-        console.error('Error creating `paymentMethod-2` in `ctrllr.beforeEach`!', err);
-      });
-
-    return deferred.promise;
-  },
-
-  // create `paymentMethod-3`, add `user-2` as creator
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-2'),
-      paymentMethod = createPaymentMethod(),
-      nonce = braintree.Test.Nonces.Transactable;
-
-    // set `user-0` as `creator`, make default payment method, create as ApplePay card
-    paymentMethod.isDefault = true;
-    configAndSavePaymentMethod(paymentMethod, nonce, user)
-      .then(function(doc) {
-        // save to data store, resolved async function
-        store.set('paymentMethod-3', doc);
-        deferred.resolve(doc);
-      })
-      .fail(function(err) {
-        console.error('Error creating `paymentMethod-3` in `ctrllr.beforeEach`!', err);
-      });
-
-    return deferred.promise;
-  },
-
-  // create `notification-0`, set `user-0` as creator
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-0'),
-      notification = createNotification();
-
-    notification.to = user._id;
-    notification.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `notification-0` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('notification-0', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `notification-1`, set `user-0` as creator
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-0'),
-      notification = createNotification();
-
-    notification.to = user._id;
-    notification.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `notification-1` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('notification-1', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `notification-2`, set `user-0` as creator, set `isRead=true`
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-0'),
-      notification = createNotification();
-
-    notification.to = user._id;
-    notification.isRead = true;
-    notification.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `notification-2` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('notification-2', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `notification-3`, set `user-0` as creator
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-0'),
-      notification = createNotification();
-
-    notification.to = user._id;
-    notification.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `notification-3` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('notification-3', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `notification-4`, set `user-1` as creator
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-1'),
-      notification = createNotification();
-
-    notification.to = user._id;
-    notification.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `notification-4` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('notification-4', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `notification-5`, set `user-2` as creator
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-2'),
-      notification = createNotification();
-
-    notification.to = user._id;
-    notification.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `notification-5` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('notification-5', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `follow-0`, set `user-1` as the creator, `user-0` as the target
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-1'),
-      targetUser = store.get('user-0'),
-      follow = createFollow();
-
-    follow.creator = user;
-    follow.targetUser = targetUser;
-    follow.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `follow-0` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('follow-0', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `follow-1`, set `user-2` as the creator, `user-0` as the target
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-2'),
-      targetUser = store.get('user-0'),
-      follow = createFollow();
-
-    follow.creator = user;
-    follow.targetUser = targetUser;
-    follow.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `follow-1` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('follow-1', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `follow-2`, set `user-2` as the creator, `user-1` as the target
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-2'),
-      targetUser = store.get('user-1'),
-      follow = createFollow();
-
-    follow.creator = user;
-    follow.targetUser = targetUser;
-    follow.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `follow-2` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('follow-2', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-
-  // create `follow-3`, set `user-3` as the creator, `user-1` as the target
-  function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-2'),
-      targetUser = store.get('user-1'),
-      follow = createFollow();
-
-    follow.creator = user;
-    follow.targetUser = targetUser;
-    follow.save(function(err, doc) {
-      if (err) {
-        console.error('Error creating `follow-3` in `ctrllr.beforeEach`!', err);
-        return deferred.reject(err);
-      }
-
-      store.set('follow-3', doc);
-      return deferred.resolve(doc);
-    });
-
-    return deferred.promise;
-  },
-];
deleted file mode 100644
--- a/node_modules/alfred/test/ctrllr.config.js
+++ /dev/null
@@ -1,94 +0,0 @@
-/* ==========================================================================
- This script is the configuration for the ctrllr tests
- ========================================================================== */
-
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** file system helper module */
-  path = require('path'),
-
-  /** async flow lib */
-  $q = require('q'),
-
-  /** configuration manager */
-  configLoader = require(baseDir + '/services/configLoader'),
-
-  /**
-   * specifies the current environment is running in a testing one
-   * @type {Boolean}
-   */
-  isTesting = false;
-
-process.argv.forEach(function(val) {
-  if (val.indexOf('test') > -1) {
-    isTesting = true;
-  }
-});
-
-if (isTesting) {
-  process.env.NODE_ENV = 'test';
-}
-
-module.exports = {
-  port: 6060,
-  server: require('../app.js'),
-  timeout: 10000,
-  plugins: require('./ctrllr.plugins'),
-  setup: function() {
-    console.log('running setup');
-    return configLoader.init();
-  },
-  cleanup: function() {
-    var deferred = $q.defer();
-
-    setTimeout(function() {
-      console.log('running cleanup');
-      return deferred.resolve(true);
-    }, 500);
-
-    return deferred.promise;
-  },
-  beforeEach: require('./ctrllr.beforeEach'),
-  afterEach: require('./ctrllr.afterEach'),
-  transform: function(test, pathToFile) {
-    if (!pathToFile) {
-      return test;
-    }
-
-    var
-      pathArray = pathToFile.split('/'),
-      fileName = path.basename(pathToFile),
-      tags = fileName.split('.'),
-      folderName;
-
-    // [ 'user', 'follow', 'spec', 'js' ] => [ 'user', 'user.follow', 'follow' ]
-    tags.pop();
-    tags.pop();
-
-    // add the folder name to the tags, so `user` tests can be ran, `resources`, etc
-    // also concat the test name + folder name so you can run `user.list`, `resource.create`, etc
-    if (pathArray.length > 2) {
-      folderName = pathArray[pathArray.length - 2];
-      tags.push(folderName + '.' + tags[0]);
-      tags.push(folderName);
-    }
-
-    // make sure test has a `tags` field
-    if (!test.tags) {
-      test.tags = [];
-    }
-
-    // iterate over tags, add to test
-    tags.forEach(function(tag) {
-      test.tags.push(tag);
-    });
-
-    return test;
-  }
-};
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/ctrllr.plugins.js
+++ /dev/null
@@ -1,1001 +0,0 @@
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** async flow lib */
-  $q = require('q'),
-
-  /** file system module */
-  fs = require('fs'),
-
-  /** http request module */
-  request = require('superagent'),
-
-  /** logging service */
-  log = require(baseDir + '/services/logger'),
-
-  /** server utilities */
-  util = require(baseDir + '/services/util'),
-
-  /** configuration loader */
-  configLoader = require(baseDir + '/services/configLoader'),
-
-  /** worker service */
-  worker,
-
-  /** mongoose models */
-  models;
-
-/* ==========================================================================
-Initialization logic
- ========================================================================== */
-
-configLoader.init().then(function() {
-  worker = require(baseDir + '/services/worker');
-
-  models = {};
-  util.loadDirectorySync(baseDir + '/models').forEach(function(modelName) {
-    models[modelName] = require(baseDir + '/models/' + modelName);
-  });
-});
-
-/* ==========================================================================
- These are the ctrllr plugins that will be used in the tests.
- ========================================================================== */
-
-/**
- * recursive interpolation of string from ctrllr data store
- * @param store {Store} ctrllr data store
- * @param str {String} string to interpolate
- * @returns {String}
- */
-function interpolate(store, str) {
-  if (typeof str !== 'string') {
-    return str;
-  }
-
-  var
-    regex = /{{([\w\s\-\d\.\[\]]+)}}/g,
-    matches = str.match(regex),
-    dump = store.dump(),
-    map = {},
-    keys;
-
-  if (matches && matches.length) {
-    matches.forEach(function(match) {
-      var clean = match.match(/\{\{(.*?)\}\}/)[1].trim();
-      map[match] = util.evalKeyValue(dump, clean);
-    });
-
-    if ((keys = Object.keys(map)).length === 1 && keys[0] === str) {
-      return map[keys[0]];
-    }
-
-    var str = util.mapStrings(str, map);
-
-    // if the string is surrounded by "<%" and "%>", evaluate it as javascript
-    if (str.substr(0, 2) === '<%' && str.substr(str.length - 2, 2) === '%>') {
-      str = str.substr(0, str.length - 2).substr(2);
-      return eval(str);
-    } else {
-      return str;
-    }
-  }
-
-  return str;
-}
-
-/**
- * recursively interpolates an object
- * @param store {Store}
- * @param obj {*} object to interpolate
- * @returns {*}
- */
-function recursiveInterpolation(store, obj) {
-  if (typeof obj === 'string') {
-    return interpolate(store, obj);
-  }
-
-  for (var key in obj) {
-    if (!obj.hasOwnProperty(key)) {
-      continue;
-    } else if (obj instanceof RegExp) {
-      continue;
-    } else if (typeof obj[key] === 'boolean') {
-      continue;
-    } else if (typeof obj[key] === 'function') {
-      continue;
-    } else if (typeof obj[key] === 'string') {
-      obj[key] = interpolate(store, obj[key]);
-    } else if (typeof obj[key] === 'object' && obj[key] instanceof Array) {
-      for (var i = 0, len = obj[key].length; i < len; i++) {
-        if (typeof obj[key][i] === 'string') {
-          obj[key][i] = interpolate(store, obj[key][i]);
-        } else {
-          obj[key][i] = recursiveInterpolation(store, obj[key][i]);
-        }
-      }
-    } else if (typeof obj[key] === 'object') {
-      obj[key] = recursiveInterpolation(store, obj[key]);
-    } else {
-      // do nothing
-    }
-  }
-
-  return obj;
-}
-
-/**
- * asserts an object against a specification
- * @param ctrllr {CTRLLR|Interface} ctrllr instance
- * @param ref {*} object to check
- * @param specs {*} specification to check object against
- * @param logPrefix {String} additional prefix for log message
- */
-function $$assert(ctrllr, ref, specs, logPrefix) {
-  var
-    store = ctrllr.getStore(),
-    assertLogPrefix,
-    valueExpected,
-    valueActual;
-
-  if (logPrefix) {
-    assertLogPrefix = '$$assert (' + logPrefix + '): ';
-  } else {
-    assertLogPrefix = '$$assert: ';
-  }
-
-  specs = recursiveInterpolation(store, specs);
-
-  for (var key in specs) {
-    if (!specs.hasOwnProperty(key)) {
-      continue;
-    }
-
-    if (typeof specs[key] === 'boolean' || typeof specs[key] === 'string' || typeof specs[key] === 'number') {
-      valueExpected = specs[key];
-      valueActual = util.evalKeyValue(ref, key);
-
-      ctrllr.assert(assertLogPrefix + 'should have the property `' + key + '`' +
-        ' with the value `' + specs[key] + '`', function() {
-
-        return valueExpected === valueActual;
-      }, valueExpected, valueActual, ctrllr);
-    } else if (specs[key] instanceof RegExp) {
-      valueActual = util.evalKeyValue(ref, key);
-
-      ctrllr.assert('should match RegExp', function() {
-        return specs[key].test(valueActual);
-      });
-    } else if (typeof specs[key] === 'function') {
-      // valueExpected = util.evalKeyValue(ref, key);
-      valueActual = util.evalKeyValue(ref, key);
-
-      ctrllr.assert(assertLogPrefix + key + ' : running custom validator', function() {
-        return specs[key](valueActual, ctrllr);
-      });
-    } else if (specs[key] && specs[key]._bsontype) {
-      valueExpected = specs[key].toString();
-      valueActual = util.evalKeyValue(ref, key);
-      if (valueActual) valueActual = valueActual.toString();
-
-      ctrllr.assert(assertLogPrefix + 'should have the property `' + key + '`' +
-        ' with the value `' + specs[key] + '`', function() {
-
-        return valueExpected === valueActual;
-      }, valueExpected, valueActual, ctrllr);
-    } else if (key === '$length') {
-      valueActual = ref && typeof ref.length !== 'undefined' ?
-        ref.length : null;
-
-      if (typeof specs[key] === 'number') {
-        valueExpected = specs[key];
-        ctrllr.assert(assertLogPrefix + 'should have `' + specs[key] + ' items in the array', function() {
-          return valueExpected !== valueActual;
-        }, '$ne: ' + valueExpected, valueActual);
-      } else {
-        for (var key2 in specs[key]) {
-          valueExpected = specs[key][key2];
-
-          if (key2 === '$gt') {
-            ctrllr.assert(assertLogPrefix + 'should have MORE THAN ' + valueExpected + ' items in the array', function() {
-              return valueActual > valueExpected;
-            }, '$gt: ' + valueExpected, valueActual);
-          } else if (key2 === '$gte') {
-            ctrllr.assert(assertLogPrefix + 'should have MORE THAN OR EQUAL TO ' + valueExpected + ' items in the array', function() {
-              return valueActual >= valueExpected;
-            }, '$gt: ' + valueExpected, valueActual);
-          } else if (key2 === '$lt') {
-            ctrllr.assert(assertLogPrefix + 'should have LESS THAN ' + valueExpected + ' items in the array', function() {
-              return valueActual < valueExpected;
-            }, '$lt: ' + valueExpected, valueActual);
-          } else if (key2 === '$lte') {
-            ctrllr.assert(assertLogPrefix + 'should have LESS THAN OR EQUAL TO ' + valueExpected + ' items in the array', function() {
-              return valueActual <= valueExpected;
-            }, '$lt: ' + valueExpected, valueActual);
-          }
-        }
-      }
-    } else if (typeof specs[key] === 'object' && !(specs[key] instanceof Array)) {
-
-      for (var key2 in specs[key]) {
-        if (!specs[key].hasOwnProperty(key2)) {
-          continue;
-        }
-
-        if (key2 === '$ne') {
-          valueExpected = specs[key][key2];
-          valueActual = util.evalKeyValue(ref, key);
-
-          ctrllr.assert(assertLogPrefix + 'should have the property `' + key + '`' +
-            ' with a value NOT equal to `' + specs[key][key2] + '`', function() {
-            // console.log('doc', docs[i], 'expected: ', valueExpected, 'actual: ', valueActual);
-
-            return valueExpected !== valueActual;
-          }, '$ne: ' + valueExpected, valueActual);
-        } else if (key2 === '$length') {
-          valueExpected = specs[key][key2];
-          valueActual = util.evalKeyValue(ref, key);
-
-          valueActual = valueActual && valueActual instanceof Array ? valueActual.length : null;
-
-          ctrllr.assert(assertLogPrefix + 'should have the property `' + key + '`' +
-            ' with a length equal to `' + specs[key][key2] + '`', function() {
-            return valueExpected === valueActual;
-          }, valueExpected, valueActual);
-        } else {
-          console.error(assertLogPrefix + 'Unknown specification passed to $$assert! ' + key + '.' + key2);
-          console.log('evaluated:: ', util.evalKeyValue(ref, key));
-          console.log('');
-        }
-      }
-    }
-  }
-}
-
-module.exports = [
-  {
-    name: '$$basicAuth',
-
-    /**
-     * pulls a user from the data store ans sets a basic-auth header using the user's id and one of its devices
-     * @param ctrllr
-     * @param request
-     * @param value
-     */
-    before: function(ctrllr, request, value) {
-      var
-        store = ctrllr.getStore(),
-        user = store.get(value),
-        authToken = util.getAuthToken(user);
-
-      request.setHeader('Authorization', authToken);
-    }
-  },
-
-
-  {
-    name: '$$url',
-
-    /**
-     * builds a dynamic url;
-     * uses handlebar notation to specify data to be pulled from the data store
-     * @param ctrllr
-     * @param request
-     * @param value
-     */
-    before: function(ctrllr, request, value) {
-      var
-        store = ctrllr.getStore(),
-        url = interpolate(store, value);
-
-      request.setUrl(url);
-    }
-  },
-
-
-  {
-    name: '$$send',
-
-    /**
-     * pulls a value from the data store, sends it in the request body
-     * @param ctrllr
-     * @param request
-     * @param value
-     */
-    before: function(ctrllr, request, value) {
-      var
-        store = ctrllr.getStore(),
-        data = store.dump(),
-        payload = {};
-
-      if (typeof value === 'function') {
-        payload = value(ctrllr);
-      } else {
-        for (var key in value) {
-          if (value.hasOwnProperty(key)) {
-            if (typeof value[key] === 'function') {
-              payload[key] = value[key](ctrllr);
-            } else {
-              payload[key] = recursiveInterpolation(store, value[key]);
-            }
-          }
-        }
-      }
-
-      store.set('payload', payload);
-      request.send(payload);
-    }
-  },
-
-
-  {
-    name: '$$expectKeyValue',
-
-    /**
-     * makes sure data returned in the response matches the expected values;
-     * builds the expected vales from the data store
-     * @param ctrllr
-     * @param response
-     * @param value
-     */
-    after: function(ctrllr, response, value) {
-      var ref = response.body instanceof Array ? response.body : [response.body];
-
-      for (var i = 0, len = ref.length; i < len; i++) {
-        $$assert(ctrllr, ref[i], value, '$$expectKeyValue');
-      }
-    }
-  },
-
-
-  {
-    name: '$$expectArray',
-
-    /**
-     * makes sure the returned response is an array;
-     * additionally, it checks other properties like length
-     * @param ctrllr
-     * @param response
-     * @param value
-     */
-    after: function(ctrllr, response, value) {
-      if (typeof value === 'boolean') {
-        ctrllr.assert('$$expectArray: response should ' + (value ? '' : 'NOT') +
-          ' be an array', function() {
-          return response.body instanceof Array === value;
-        });
-      } else if (typeof value === 'number') {
-        ctrllr.assert('$$expectArray: response should be an array with ' + value + ' items', function() {
-          return response.body instanceof Array && response.body.length === value;
-        });
-      }
-    }
-  },
-
-
-  {
-    name: '$$expectInArray',
-
-    /**
-     * makes sure the returned response is an array;
-     * additionally, it checks other properties like length
-     * @param ctrllr
-     * @param response
-     * @param value
-     */
-    after: function(ctrllr, response, value) {
-      var results = response.body instanceof Array ? response.body : [response.body];
-      for (var key in value) {
-        ctrllr.assert(key, function() {
-          for (var i = 0, len = results.length; i < len; i++) {
-            if (value[key](results[i], ctrllr, response)) {
-              return true;
-            }
-          }
-
-          return false;
-        });
-      }
-    }
-  },
-
-
-  {
-    name: '$$expectNone',
-
-    /**
-     * makes sure none of the results match the criteria
-     * additionally, it checks other properties like length
-     * @param ctrllr
-     * @param response
-     * @param value
-     */
-    after: function(ctrllr, response, value) {
-      var results = response.body instanceof Array ? response.body : [response.body];
-      for (var key in value) {
-        ctrllr.assert(key, function() {
-          for (var i = 0, len = results.length; i < len; i++) {
-            if (value[key](results[i], ctrllr, response)) {
-              return false;
-            }
-          }
-
-          return true;
-        });
-      }
-    }
-  },
-
-
-  {
-    name: '$$expectAll',
-
-    /**
-     * makes sure every item matches the criteria
-     * @param ctrllr
-     * @param response
-     * @param value
-     */
-    after: function(ctrllr, response, value) {
-      var results = response.body instanceof Array ? response.body : [response.body];
-      for (var key in value) {
-        ctrllr.assert(key, function() {
-          for (var i = 0, len = results.length; i < len; i++) {
-            if (!value[key](results[i], ctrllr, response)) {
-              return false;
-            }
-          }
-
-          return true;
-        });
-      }
-    }
-  },
-
-
-  {
-    name: '$$each',
-
-    /**
-     * iterate over specified properties run assertions
-     * additionally, it checks other properties like length
-     * @param ctrllr
-     * @param response
-     * @param value
-     */
-    after: function(ctrllr, response, value) {
-      var results = response.body instanceof Array ? response.body : [response.body];
-
-      // iterate over all items returned
-      for (var i = 0, len = results.length, ref; i < len; i++) {
-        // ref = util.evalKeyValue(results[i]);
-
-        // iterate over all key / value assertions
-        for (var key in value) {
-          ref = util.evalKeyValue(results[i], key);
-
-          // make sure `ref` is array
-          if (!(ref instanceof Array)) {
-            ref = [ref];
-          }
-
-          // iterate over all spec / function pairs
-          for (var spec in value[key]) {
-            // iterate over all items in `ref` and run assertions
-            ref.forEach(function(item, index) {
-              // run assertion function
-              ctrllr.assert(spec, function() {
-                return value[key][spec](item, ctrllr, response);
-              });
-            });
-          }
-        }
-      }
-    }
-  },
-
-
-  {
-    name: '$$expectCount',
-
-    /**
-     * makes sure the expected number of results are returned
-     * additionally, it checks other properties like length
-     * @param ctrllr
-     * @param response
-     * @param value
-     */
-    after: function(ctrllr, response, value) {
-      if (typeof value === 'number') {
-        ctrllr.assert('$$expectCount: ' + value, function() {
-          return response.body && response.body.length === value;
-        });
-
-        return;
-      }
-
-      var specs = { $length: value };
-
-      /*
-      for (var key in value) {
-        if (typeof value[key] === 'number') {
-          value[key] = { $length: value[key] };
-        }
-      }
-      */
-
-      $$assert(ctrllr, response.body, specs, '$$expectCount');
-    }
-  },
-
-
-  {
-    name: '$$expectHeaders',
-
-    /**
-     * makes sure a
-     * @param ctrllr
-     * @param response
-     * @param value
-     */
-    after: function(ctrllr, response, value) {
-      for (var key in value) {
-        $$assert(ctrllr, response.header, value, '$$expectHeaders');
-      }
-    }
-  },
-
-
-  {
-    name: '$$flushKueBefore',
-
-    /**
-     * flushes the kue redis instance before a test
-     * @param ctrllr
-     * @param response
-     * @param value
-     */
-    before: function(ctrllr, response, value) {
-      if (!value) {
-        return false;
-      }
-
-      console.log('$$flushKueBefore flushing redis');
-      var deferred = $q.defer();
-      worker.queue.client.flushdb(function(err) {
-        if (err) {
-          return deferred.reject('Error flushing kue redis instance', err);
-        }
-
-        return deferred.resolve(true);
-      });
-
-      return deferred.promise;
-    }
-  },
-
-
-  {
-    name: '$$flushKueAfter',
-
-    /**
-     * flushes the kue redis after a test
-     * @param ctrllr
-     * @param response
-     * @param value
-     */
-    after: function(ctrllr, response, value) {
-      if (!value) {
-        return false;
-      }
-
-      console.log('$$flushKueAfter flushing redis');
-      var deferred = $q.defer();
-      worker.queue.client.flushdb(function(err) {
-        if (err) {
-          return deferred.reject('Error flushing kue redis instance', err);
-        }
-
-        return deferred.resolve(true);
-      });
-
-      return deferred.promise;
-    }
-  },
-
-
-  {
-    name: '$$assertJob',
-
-    /**
-     * makes sure a kue job was created
-     * @param ctrllr
-     * @param response
-     * @param value
-     */
-    after: function(ctrllr, response, value) {
-      var
-        deferred = $q.defer(),
-        taskName = value.$type;
-
-      if (!taskName) {
-        var message = '`$$assertJob` missing `$type`';
-        console.error(message);
-        deferred.reject(message);
-        return deferred.promise;
-      }
-
-      // worker.kue.Job.rangeByType(taskName, 'active', 0, -1, 'asc', function(err, jobs) {
-      worker.kue.Job.range(0, -1, 'asc', function(err, jobs) {
-        if (err) {
-          console.error('$$assertJob: error querying task: ' + taskName, err);
-          return deferred.reject(err);
-        }
-
-        jobs = jobs.reduce(function(queue, val) {
-          if (val.type === taskName) {
-            queue.push(val);
-          }
-
-          return queue;
-        }, []);
-
-        $$assert(ctrllr, jobs, value.$values, '$$assertJob');
-
-        util.safeAsync(value.$then, 5000, [
-          jobs,
-          ctrllr,
-          response
-        ]).then(function() {
-          return deferred.resolve(jobs);
-        }).fail(function(err) {
-          return deferred.reject(err);
-        });
-
-      });
-
-      return deferred.promise;
-    }
-  },
-
-
-  {
-    name: '$queue',
-
-    /**
-     * adds tasks, with data, to kue and executes them
-     * @param ctrllr
-     * @param response
-     * @param value
-     */
-    before: function(ctrllr, before, value) {
-      var
-        store = ctrllr.getStore(),
-        deferred = $q.defer(),
-        promises = Object.keys(value).map(function(key) {
-          var
-            deferred2 = $q.defer(),
-            data = recursiveInterpolation(store, value[key]),
-            options = value.$options || {},
-            job = worker.add(key, data, options),
-            callback = function() {
-              deferred2.resolve(true);
-            };
-
-          job.on('failed', callback);
-          job.on('complete', callback);
-
-          worker.processTasks(function(task) {
-            return task.name === key;
-          });
-
-          return deferred2.promise;
-        });
-
-      $q.all(promises)
-        .then(function() {
-          return deferred.resolve(true);
-        })
-        .fail(function(err) {
-          return deferred.reject(err);
-        });
-
-      return deferred.promise;
-    }
-  },
-
-
-  {
-    name: '$$assertModel',
-
-    /**
-     * queries a model, verifies a query, or multiple queries, against the results
-     * @param ctrllr
-     * @param response
-     * @param value
-     */
-    after: function(ctrllr, response, value) {
-      var
-        deferred = $q.defer(),
-        store = ctrllr.getStore(),
-        operations = value instanceof Array ? value : [value],
-        promises = operations.map(function(operation) {
-          var
-            deferred2 = $q.defer(),
-            model = models[operation.$model],
-            query = {};
-
-          if (!model) {
-            console.error('Error! $$assertModel couldn\'t find model: ' + operation.$model);
-            deferred.reject('You must specify a valid `$model` property for the `$$assertModel` plugin.');
-            return deferred.promise;
-          }
-
-          if (operation.$_id) {
-            query._id = interpolate(store, operation.$_id);
-          } else if (operation.$query) {
-            query = recursiveInterpolation(store, operation.$query);
-          } else {
-            console.error('Error! $$assertModel wasn\'t provided `$_id` or `$query`.');
-            deferred.reject('You must specify either an `$_id` or `$query` for the `$$assertModel` plugin.');
-            return deferred.promise;
-          }
-
-          model.find(query, function(err, docs) {
-            if (err) {
-              console.error('Error! $$assertModel encountered error during query.', err);
-              return deferred2.reject(err);
-            }
-
-            if (operation.$values) {
-              for (var i = 0, len = docs.length; i < len; i++) {
-                $$assert(ctrllr, docs[i], operation.$values, '$$assertModel[' + operation.$model + ']');
-              }
-            }
-
-            // TODO: use test options timeout
-            util.safeAsync(operation.$then, 5000, [
-              operation.$_id ? (docs && docs.length ? docs[0] : null) : docs,
-              ctrllr,
-              response
-            ]).then(function() {
-              return deferred2.resolve(docs);
-            }).fail(function(err) {
-              return deferred2.reject(err);
-            });
-          });
-
-          return deferred2.promise;
-        });
-
-      $q.all(promises)
-        .then(function() {
-          return deferred.resolve(true);
-        })
-        .fail(function(err) {
-          return deferred.reject(err);
-        });
-
-      return deferred.promise;
-    }
-  },
-
-
-  {
-    name: '$$modifyModel',
-
-    /**
-     * queries & modifies model data before a request
-     * @param ctrllr
-     * @param request
-     * @param value
-     */
-    before: function(ctrllr, request, value) {
-      log.debug('$$modifyModel');
-
-      var
-        deferred = $q.defer(),
-        store = ctrllr.getStore(),
-        operations = value instanceof Array ? value : [value],
-        promises = operations.map(function(operation) {
-          var
-            deferred2 = $q.defer(),
-            model = models[operation.$model],
-            query = {},
-            update;
-
-          if (!model) {
-            console.error('Error! $$modifyModel couldn\'t find model: ' + operation.$model);
-            deferred2.reject('You must specify a valid `$model` property for the `$$modifyModel` plugin.');
-            return deferred2.promise;
-          }
-
-          if (operation.$_id) {
-            query._id = interpolate(store, operation.$_id);
-          } else if (operation.$query) {
-            query = recursiveInterpolation(store, operation.$query);
-          } else {
-            console.error('Error! $$modifyModel wasn\'t provided `$_id` or `$query`.');
-            deferred2.reject('You must specify either an `$_id` or `$query` for the `$$modifyModel` plugin.');
-            return deferred2.promise;
-          }
-
-          if (!operation.$update) {
-            console.error('Error! $$modifyModel wasn\'t provided `$update`.');
-            deferred2.reject('You must provid an `$update` property for the `$$modifyModel` plugin.');
-            return deferred2.promise;
-          }
-
-          update = recursiveInterpolation(store, operation.$update);
-
-          model.update(query, update, operation.$options || {}, function(err, docs) {
-            if (err) {
-              console.error('Error! $$modifyModel encountered error during query.', err);
-              return deferred2.reject(err);
-            }
-
-            // find and update items in store
-            model.find(query, function(err, docs) {
-              var keys = Object.keys(store.dump());
-
-              docs.forEach(function(doc) {
-                keys.forEach(function(key) {
-                  var item = store.get(key);
-                  if (item && item._id && item._id.toString() === doc._id.toString()) {
-                    store.set(key, doc);
-                  }
-                });
-              });
-
-              // TODO: use test options timeout
-              util.safeAsync(operation.$then, 5000, [
-                docs,
-                ctrllr,
-                request
-              ])
-                .then(function() {
-                  return deferred2.resolve(docs);
-                }).fail(function(err) {
-                  return deferred2.reject(err);
-                });
-            });
-          });
-
-          return deferred2.promise;
-        });
-
-      $q.all(promises)
-        .then(function() {
-          return deferred.resolve(true);
-        })
-        .fail(function(err) {
-          return deferred.reject(err);
-        });
-
-      return deferred.promise;
-    }
-  },
-
-
-  /**
-   * reloads all the models saved in the store
-   */
-  {
-    name: '$$reloadStore',
-
-    /**
-     * queries the db for all items in the store, saves updated versions
-     * @param ctrllr
-     * @param response
-     * @param value
-     */
-    after: function(ctrllr, response, value) {
-      log.debug('$$reloadStore');
-
-      var
-        deferred = $q.defer(),
-        store = ctrllr.getStore(),
-        promises = Object.keys(models).map(function(model) {
-
-          var
-            deferred2 = $q.defer(),
-            dump = store.dump(),
-            keys = Object.keys(dump),
-            morePromises = keys.map(function(key) {
-              if (typeof dump[key] === 'undefined' || !dump[key]._id || !(dump[key] instanceof models[model])) {
-                return util.deferResolve();
-              };
-
-              var deferred3 = $q.defer();
-              models[model].findById(dump[key]._id, function(err, doc) {
-                if (err) {
-                  return deferred3.reject(err);
-                } else if (!doc) {
-                  store.remove(key);
-                  return deferred.resolve(null);
-                }
-
-                store.set(key, doc);
-                return deferred3.resolve(doc);
-              });
-
-              return deferred3.promise;
-            });
-
-          $q.all(morePromises)
-            .then(deferred2.resolve)
-            .fail(deferred2.reject);
-
-          return deferred2.promise;
-        });
-
-      $q.all(promises)
-        .then(deferred.resolve)
-        .fail(deferred.reject);
-
-      return deferred.promise;
-    },
-  },
-
-
-  {
-    name: '$$ajax',
-
-    /**
-     * makes a request to a url
-     * @param ctrllr
-     * @param response
-     * @param value
-     */
-    after: function(ctrllr, response, value) {
-      var
-        deferred = $q.defer(),
-        store = ctrllr.getStore(),
-        operations = value instanceof Array ? value : [value],
-        promises = operations.map(function(operation) {
-          var
-            deferred2 = $q.defer(),
-            method = (operation.method || 'get').toLowerCase(),
-            data = recursiveInterpolation(store, operation.data || {}),
-            url = interpolate(store, operation.url);
-
-          if (!url) {
-            deferred2.reject(new Error('No `url` provided to $$ajax.'));
-            return deferred2.promise;
-          }
-
-          var r = request[method](url);
-          if (data && method !== 'get') {
-            r.send(data);
-          }
-
-          r.end(function(err, response) {
-            if (err) {
-              console.log('$$ajax error', err);
-              return deferred2.reject(new Error(err));
-            }
-
-            if (operation.assert) {
-              console.log('asserting operation', operation.assert);
-              $$assert(ctrllr, response, operation.assert, '$$ajax');
-            }
-
-            return deferred2.resolve(true);
-          });
-
-          return deferred2.promise;
-        });
-
-      $q.all(promises)
-        .then(deferred.resolve)
-        .fail(deferred.reject);
-
-      return deferred.promise;
-    },
-  },
-];
\ No newline at end of file
deleted file mode 100644
deleted file mode 100644
--- a/node_modules/alfred/test/models/user/followUser.spec.js
+++ /dev/null
@@ -1,204 +0,0 @@
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** async flow lib */
-  $q = require('q'),
-
-  /** custom errors */
-  errors = require(baseDir + '/core/errors');
-
-module.exports = [{
-  description: 'should create a `follow` instance',
-  run: function(ctrllr) {
-    var
-      store = ctrllr.getStore(),
-      user = store.get('user-0'),
-      targetUser = store.get('user-1');
-
-    return user.followUser(targetUser);
-  },
-  $$reloadStore: true,
-  $$assertModel: {
-    $model: 'follow',
-    $query: {
-      creator: '{{ user-0._id }}',
-      targetUser: '{{ user-1._id }}',
-    },
-    $then: function(results, ctrllr) {
-      ctrllr.assert('should have created a `follow` object', function() {
-        return results && results.length === 1;
-      });
-    },
-  },
-}, {
-  description: 'should increment the target user\'s followers and the other user\'s followings',
-  run: function(ctrllr) {
-    var
-      store = ctrllr.getStore(),
-      user = store.get('user-0'),
-      targetUser = store.get('user-1');
-
-    return user.followUser(targetUser);
-  },
-  $$reloadStore: true,
-  $$assertModel: [{
-    $model: 'user',
-    $_id: '{{ user-1._id }}',
-    $values: {
-      numFollowers: 1,
-    },
-  }, {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $values: {
-      numFollowing: 1,
-    },
-  }],
-}, {
-  description: 'should return status 304 (resource not modified) if the user is already following the user',
-  run: function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-1'),
-      targetUser = store.get('user-0'),
-      wasSuccess = false,
-      wasError = false,
-      err = null;
-
-    user.followUser(targetUser)
-      .then(function() {
-        wasSuccess = true;
-      })
-      .fail(function(_err) {
-        err = _err;
-        wasError = true;
-      })
-      .finally(function() {
-        ctrllr.assert('should not have succeeded', function() {
-          return !wasSuccess && wasError;
-        });
-
-        ctrllr.assert('should have returned a `ResourceNotModifiedError', function() {
-          return err && err instanceof errors.ResourceNotModifiedError;
-        });
-
-        deferred.resolve();
-      });
-
-    return deferred.promise;
-  },
-  $$reloadStore: true,
-  $$assertModel: [{
-    $model: 'user',
-    $_id: '{{ user-1._id }}',
-    $values: {
-      numFollowing: 1,
-    },
-  }, {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $values: {
-      numFollowers: 2,
-    },
-  }],
-}, {
-  description: 'should return status 400 (bad request) if the user tries to follow itself',
-  run: function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-1'),
-      wasSuccess = false,
-      wasError = false,
-      err = null;
-
-    user.followUser(user._id)
-      .then(function() {
-        wasSuccess = true;
-      })
-      .fail(function(_err) {
-        err = _err;
-        wasError = true;
-      })
-      .finally(function() {
-        ctrllr.assert('should not have succeeded', function() {
-          return !wasSuccess && wasError;
-        });
-
-        ctrllr.assert('should have returned a `BadRequestError', function() {
-          return err && err instanceof errors.BadRequestError;
-        });
-
-        deferred.resolve();
-      });
-
-    return deferred.promise;
-  },
-  $$reloadStore: true,
-  $$assertModel: [{
-    $model: 'user',
-    $_id: '{{ user-1._id }}',
-    $values: {
-      numFollowing: 1,
-    },
-  }, {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $values: {
-      numFollowers: 2,
-    },
-  }],
-}, {
-  description: 'should return status 400 (bad request) if no user provided',
-  run: function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-1'),
-      wasSuccess = false,
-      wasError = false,
-      err = null;
-
-    user.followUser()
-      .then(function() {
-        wasSuccess = true;
-      })
-      .fail(function(_err) {
-        err = _err;
-        wasError = true;
-      })
-      .finally(function() {
-        ctrllr.assert('should not have succeeded', function() {
-          return !wasSuccess && wasError;
-        });
-
-        ctrllr.assert('should have returned a `BadRequestError', function() {
-          return err && err instanceof errors.BadRequestError;
-        });
-
-        deferred.resolve();
-      });
-
-    return deferred.promise;
-  },
-  $$reloadStore: true,
-  $$assertModel: [{
-    $model: 'user',
-    $_id: '{{ user-1._id }}',
-    $values: {
-      numFollowing: 1,
-    },
-  }, {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $values: {
-      numFollowers: 2,
-    },
-  }],
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/models/user/startSession.spec.js
+++ /dev/null
@@ -1,68 +0,0 @@
-var $q = require('q');
-
-module.exports = [{
-  description: 'should add a `session` to a user',
-  run: function(ctrllr) {
-    return ctrllr.getStore().get('user-0').startSession({
-      pushToken: '123',
-      type: 'android',
-    });
-  },
-  $$assertModel: {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $values: {
-      sessions: function(value) { return value && value.length === 3; },
-      'sessions[0].pushToken': '123',
-      'sessions[0].type': 'android',
-    },
-  },
-}, {
-  description: 'should remove the oldest sessions',
-  $$modifyModel: [{
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $update: {
-      $push: {
-        sessions: {
-          $each: [{
-            pushToken: '123',
-            type: 'ios',
-          }],
-        },
-      },
-    },
-  }, {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $update: {
-      $push: {
-        sessions: {
-          $each: [{
-            pushToken: '456',
-            type: 'android',
-          }],
-        },
-      },
-    },
-  }],
-  run: function(ctrllr) {
-    return ctrllr.getStore().get('user-0').startSession({
-      pushToken: '789',
-      type: 'web',
-    });
-  },
-  $$assertModel: {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $values: {
-      sessions: function(value) { return value && value.length === 3; },
-      'sessions[0].pushToken': '789',
-      'sessions[0].type': 'web',
-      'sessions[1].pushToken': '456',
-      'sessions[1].type': 'android',
-      'sessions[2].pushToken': '123',
-      'sessions[2].type': 'ios',
-    },
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/models/user/unfollowUser.spec.js
+++ /dev/null
@@ -1,176 +0,0 @@
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** async flow lib */
-  $q = require('q'),
-
-  /** custom errors */
-  errors = require(baseDir + '/core/errors');
-
-module.exports = [{
-  description: 'should delete existing `follow` instances',
-  run: function(ctrllr) {
-    var
-      store = ctrllr.getStore(),
-      user = store.get('user-1'),
-      targetUser = store.get('user-0');
-
-    return user.unfollowUser(targetUser);
-  },
-  $$reloadStore: true,
-  $$assertModel: {
-    $model: 'follow',
-    $query: {
-      creator: '{{ user-0._id }}',
-      targetUser: '{{ user-1._id }}',
-    },
-    $then: function(results, ctrllr) {
-      ctrllr.assert('should have deleted existing `follow` instances', function() {
-        return !results || !results.length ? true : false;
-      });
-    },
-  },
-}, {
-  description: 'should decrement the target user\'s followers and the other user\'s followings',
-  run: function(ctrllr) {
-    var
-      store = ctrllr.getStore(),
-      user = store.get('user-1'),
-      targetUser = store.get('user-0');
-
-    return user.unfollowUser(targetUser);
-  },
-  $$reloadStore: true,
-  $$assertModel: [{
-    $model: 'user',
-    $_id: '{{ user-1._id }}',
-    $values: {
-      numFollowers: 0,
-    },
-  }, {
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $values: {
-      numFollowing: 0,
-    },
-  }],
-}, {
-  description: 'should return status 304 (resource not modified) if the user isn\'t following the user',
-  run: function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-0'),
-      targetUser = store.get('user-1'),
-      wasSuccess = false,
-      wasError = false,
-      err = null;
-
-    user.unfollowUser(targetUser)
-      .then(function() {
-        wasSuccess = true;
-      })
-      .fail(function(_err) {
-        err = _err;
-        wasError = true;
-      })
-      .finally(function() {
-        ctrllr.assert('should not have succeeded', function() {
-          return !wasSuccess && wasError;
-        });
-
-        ctrllr.assert('should have returned a `ResourceNotModifiedError', function() {
-          return err && err instanceof errors.ResourceNotModifiedError;
-        });
-
-        deferred.resolve();
-      });
-
-    return deferred.promise;
-  },
-  $$reloadStore: true,
-  $$assertModel: [{
-    $model: 'user',
-    $_id: '{{ user-0._id }}',
-    $values: {
-      numFollowing: 0,
-    },
-  }, {
-    $model: 'user',
-    $_id: '{{ user-1._id }}',
-    $values: {
-      numFollowers: 0,
-    },
-  }],
-}, {
-  description: 'should return status 403 (forbidden) if the user tries to unfollow itself',
-  run: function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-1'),
-      wasSuccess = false,
-      wasError = false,
-      err = null;
-
-    user.unfollowUser(user._id)
-      .then(function() {
-        wasSuccess = true;
-      })
-      .fail(function(_err) {
-        err = _err;
-        wasError = true;
-      })
-      .finally(function() {
-        ctrllr.assert('should not have succeeded', function() {
-          return !wasSuccess && wasError;
-        });
-
-        ctrllr.assert('should have returned a `ForbiddenError', function() {
-          return err && err instanceof errors.ForbiddenError;
-        });
-
-        deferred.resolve();
-      });
-
-    return deferred.promise;
-  },
-}, {
-  description: 'should return status 404 (bad request) if no user provided',
-  run: function(ctrllr) {
-    var
-      deferred = $q.defer(),
-      store = ctrllr.getStore(),
-      user = store.get('user-1'),
-      wasSuccess = false,
-      wasError = false,
-      err = null;
-
-    user.unfollowUser()
-      .then(function() {
-        wasSuccess = true;
-      })
-      .fail(function(_err) {
-        err = _err;
-        wasError = true;
-      })
-      .finally(function() {
-        ctrllr.assert('should not have succeeded', function() {
-          return !wasSuccess && wasError;
-        });
-
-        ctrllr.assert('should have returned a `BadRequestError', function() {
-          return err && err instanceof errors.BadRequestError;
-        });
-
-        deferred.resolve();
-      });
-
-    return deferred.promise;
-  },
-}];
\ No newline at end of file
deleted file mode 100644
--- a/node_modules/alfred/test/services/util/random.spec.js
+++ /dev/null
@@ -1,157 +0,0 @@
-var
-
-  /**
-   * app base directory
-   * @type {String}
-   */
-  baseDir = process.cwd(),
-
-  /** utility functions */
-  util = require(baseDir + '/services/util'),
-
-  /**
-   * all alphabetic characters
-   * @type {String}
-   */
-  alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',
-
-  /**
-   * 0-9 in string form
-   * @type {String}
-   */
-  numbers = '0123456789';
-
-module.exports = [{
-  description: 'should allow specifying the length of the generated string',
-  beforeEach: false,
-  afterEach: false,
-  run: function(ctrllr) {
-    ctrllr.assert('should return a 10 character string', function() {
-      return util.random(10).length === 10;
-    });
-
-    ctrllr.assert('should return a 3 character string', function() {
-      return util.random(3).length === 3;
-    });
-
-    ctrllr.assert('should return a 1 character string', function() {
-      return util.random(1).length === 1;
-    });
-  }
-}, {
-  description: 'should only return alphabetic characters when specified',
-  beforeEach: false,
-  afterEach: false,
-  run: function(ctrllr) {
-    ctrllr.assert('should a 10 digit, only alphabetic string', function() {
-      var str = util.random(10, true, false);
-
-      for (var i = 0, len = str.length; i < len; i++) {
-        if (alphabet.indexOf(str.charAt(i)) === -1) return false;
-      }
-
-      return str.length === 10;;
-    });
-
-    ctrllr.assert('should a 3 digit, only alphabetic string', function() {
-      var str = util.random(3, true, false);
-
-      for (var i = 0, len = str.length; i < len; i++) {
-        if (alphabet.indexOf(str.charAt(i)) === -1) return false;
-      }
-
-      return str.length === 3;
-    });
-  }
-}, {
-  description: 'should only return numeric characters when specified',
-  beforeEach: false,
-  afterEach: false,
-  run: function(ctrllr) {
-    ctrllr.assert('should a 10 digit, only numeric string', function() {
-      var str = util.random(10, false, true);
-
-      for (var i = 0, len = str.length; i < len; i++) {
-        if (numbers.indexOf(str.charAt(i)) === -1) return false;
-      }
-
-      return str.length === 10;;
-    });
-
-    ctrllr.assert('should a 3 digit, only numeric string', function() {
-      var str = util.random(3, false, true);
-
-      for (var i = 0, len = str.length; i < len; i++) {
-        if (numbers.indexOf(str.charAt(i)) === -1) return false;
-      }
-
-      return str.length === 3;
-    });
-  }
-}, {
-  description: 'should return both alphanumeric & numeric characters when specified',
-  beforeEach: false,
-  afterEach: false,
-  run: function(ctrllr) {
-    ctrllr.assert('should a 50 digit alphanumeric string', function() {
-      var
-        str = util.random(50, true, true),
-        hasAlphabetic = false,
-        hasNumeric = false;
-
-      for (var i = 0, len = str.length; i < len; i++) {
-        if (alphabet.indexOf(str.charAt(i)) > -1) hasAlphabetic = true;
-        if (numbers.indexOf(str.charAt(i)) === -1) hasNumeric = true;
-      }
-
-      return hasAlphabetic && hasNumeric && str.length === 50;
-    });
-
-    ctrllr.assert('should a 30 digit alphanumeric string', function() {
-      var
-        str = util.random(30, true, true),
-        hasAlphabetic = false,
-        hasNumeric = false;
-
-      for (var i = 0, len = str.length; i < len; i++) {
-        if (alphabet.indexOf(str.charAt(i)) > -1) hasAlphabetic = true;
-        if (numbers.indexOf(str.charAt(i)) === -1) hasNumeric = true;
-      }
-
-      return hasAlphabetic && hasNumeric && str.length === 30;
-    });
-  }
-}, {
-  description: 'should return both alphanumeric & numeric characters by default',
-  beforeEach: false,
-  afterEach: false,
-  run: function(ctrllr) {
-    ctrllr.assert('should a 50 digit alphanumeric string', function() {
-      var
-        str = util.random(50),
-        hasAlphabetic = false,
-        hasNumeric = false;
-
-      for (var i = 0, len = str.length; i < len; i++) {
-        if (alphabet.indexOf(str.charAt(i)) > -1) hasAlphabetic = true;
-        if (numbers.indexOf(str.charAt(i)) === -1) hasNumeric = true;
-      }
-
-      return hasAlphabetic && hasNumeric && str.length === 50;
-    });
-
-    ctrllr.assert('should a 30 digit alphanumeric string', function() {
-      var
-        str = util.random(30),
-        hasAlphabetic = false,
-        hasNumeric = false;
-
-      for (var i = 0, len = str.length; i < len; i++) {
-        if (alphabet.indexOf(str.charAt(i)) > -1) hasAlphabetic = true;
-        if (numbers.indexOf(str.charAt(i)) === -1) hasNumeric = true;
-      }
-
-      return hasAlphabetic && hasNumeric && str.length === 30;
-    });
-  }
-}];
\ No newline at end of file
deleted file mode 100644
